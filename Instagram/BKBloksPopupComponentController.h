//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef BKBloksPopupComponentController_h
#define BKBloksPopupComponentController_h
@import Foundation;

#include "BKBloksComponentController.h"

@class NSSet, UIView;
@protocol {RCLayoutResult="layout"{RCLayout="component"@"<RCMountable>""size"{CGSize="width"d"height"d}"children"{shared_ptr<const std::vector<RCLayoutChild>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"extra"@"NSDictionary"}"cache"{shared_ptr<const RCLayoutCache>="__ptr_"^{RCLayoutCache}"__cntrl_"^{__shared_weak_count}}}, {map<id, NSString *, std::less<id>, std::allocator<std::pair<const id, NSString *>>>="__tree_"{__tree<std::__value_type<id, NSString *>, std::__map_value_compare<id, std::__value_type<id, NSString *>, std::less<id>>, std::allocator<std::__value_type<id, NSString *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<id, NSString *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<id, std::__value_type<id, NSString *>, std::less<id>>>="__value_"Q}}};

@interface BKBloksPopupComponentController : BKBloksComponentController {
  /* instance variables */
  struct map<id, NSString *, std::less<id>, std::allocator<std::pair<const id, NSString *>>> { struct __tree<std::__value_type<id, NSString *>, std::__map_value_compare<id, std::__value_type<id, NSString *>, std::less<id>>, std::allocator<std::__value_type<id, NSString *>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<id, NSString *>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<id, std::__value_type<id, NSString *>, std::less<id>>> { unsigned long long __value_; } __pair3_; } __tree_; } _observations;
  id /* block */ _updatePopupLayoutOnBoundsChange;
  struct RCLayoutResult { struct RCLayout { <RCMountable> *component; struct CGSize { double width; double height; } size; struct shared_ptr<const std::vector<RCLayoutChild>> { void *__ptr_; struct __shared_weak_count *__cntrl_; } children; NSDictionary *extra; } layout; struct shared_ptr<const RCLayoutCache> { struct RCLayoutCache *__ptr_; struct __shared_weak_count *__cntrl_; } cache; } _popupLayout;
  NSSet *_mountedComponents;
  UIView *_mountedView;
}

/* instance methods */
- (void)didMount:(id)mount;
- (void)willUnmount:(id)unmount;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
@end

#endif /* BKBloksPopupComponentController_h */
