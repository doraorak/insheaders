//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBMKContentManager_Protocol_h
#define FBMKContentManager_Protocol_h
@import Foundation;

@protocol FBMKContentManager <FBMapContentManager>
/* instance methods */
- (void)configureWithMapView:(id)view fbMapView:(id)view configuration:(struct FBMapConfiguration { unsigned long long x0; int x1; id x2; struct FBMapCameraConfiguration { id x0; double x1; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x2; } x3; struct CGSize { double x0; double x1; } x4; id x5; double x6; double x7; double x8; double x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; struct FBMapDebugConfiguration { BOOL x0; BOOL x1; BOOL x2; id x3; id x4; BOOL x5; double x6; double x7; BOOL x8; } x16; })configuration logger:(id)logger;
- (struct FBMapLoggerMapState { struct FBMapCoordinateBox { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct CLLocationCoordinate2D { double x0; double x1; } x1; } x0; double x1; struct unordered_map<std::string, std::vector<std::string>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::vector<std::string>>>> { struct __hash_table<std::__hash_value_type<std::string, std::vector<std::string>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<std::string>>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<std::string>>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, std::vector<std::string>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<std::string>>, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<std::string>>, std::hash<std::string>, std::equal_to<std::string>>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<std::string>>, std::equal_to<std::string>, std::hash<std::string>>> { float x0; } x3; } x0; } x2; struct vector<std::vector<std::string>, std::allocator<std::vector<std::string>>> { void * x0; void * x1; struct __compressed_pair<std::vector<std::string> *, std::allocator<std::vector<std::string>>> { void * x0; } x2; } x3; })generateMapState;
- (id)mapView:(id)view viewForAnnotation:(id)annotation;
- (void)mapView:(id)view didAddAnnotationViews:(id)views;
- (void)mapView:(id)view didSelectAnnotationView:(id)view;
- (void)mapView:(id)view didDeselectAnnotationView:(id)view;
- (id)mapView:(id)view clusterAnnotationForMemberAnnotations:(id)annotations;
- (id)mapView:(id)view rendererForOverlay:(id)overlay;
- (void)mapView:(id)view didAddOverlayRenderers:(id)renderers;
- (id)mapView:(id)view viewForOverlay:(id)overlay;
- (void)mapView:(id)view didAddOverlayViews:(id)views;
@end

#endif /* FBMKContentManager_Protocol_h */
