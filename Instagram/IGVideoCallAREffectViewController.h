//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGVideoCallAREffectViewController_h
#define IGVideoCallAREffectViewController_h
@import Foundation;

#include "UIViewController.h"
#include "IGAlertHUDHandling-Protocol.h"
#include "IGCameraEffectBottomSheetViewControllerDelegate-Protocol.h"
#include "IGCameraEffectCollectionDataSourceListener-Protocol.h"
#include "IGCameraEffectMiniGalleryCategoryProvider.h"
#include "IGCameraEffectMiniGalleryFeedDataProvider.h"
#include "IGCameraEffectMiniGalleryLoggingContext.h"
#include "IGCameraEffectMiniGalleryPerfLoggingContext.h"
#include "IGCameraEffectMiniGalleryViewController.h"
#include "IGCameraTrayViewControllerDataSource-Protocol.h"
#include "IGCameraTrayViewControllerDelegate-Protocol.h"
#include "IGKragleAvatarCommunicationController.h"
#include "IGKragleVideoEffectCommunicationController.h"
#include "IGPartialModalSheetListener-Protocol.h"
#include "IGRTCAvatarSupplementaryEffectLogger.h"
#include "IGRTCKragleCall.h"
#include "IGStoryCameraModeSwitcherViewDelegate-Protocol.h"
#include "IGSubscriptionToken-Protocol.h"
#include "IGVideoCallAREffectAvatarsController.h"
#include "IGVideoCallAREffectToastPresenter.h"
#include "IGVideoCallAREffectToastPresenterDelegate-Protocol.h"
#include "IGVideoCallAREffectTouchupPersistenceControlling-Protocol.h"
#include "IGVideoCallCaptureCoordinatorAREffectProtocol-Protocol.h"
#include "IGVideoCallLoggingContext.h"
#include "IGVideoCallSceneCompFunnelLogger.h"

@class IGBloksActionNavigationController, IGCameraDraftEffectConsentDialogueController, IGCameraEffectsByIDProvider, IGImagePreparer, IGLContext, IGMultiCameraEffectCollectionDataProvider, IGRadialLoadingIndicatorView, IGUserSession, NSDictionary, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString, UIView;
@protocol FBCCAudioPipelineProviding, IGVideoCallAREffectViewControllerDelegate><IGPartialModalSheetCustomInteractionDelegate><IGPartialModalSheetListener, UIViewController<IGVideoCallEffectTrayViewControllerProtocol;

@interface IGVideoCallAREffectViewController : UIViewController<IGCameraTrayViewControllerDelegate, IGCameraTrayViewControllerDataSource, IGCameraEffectCollectionDataSourceListener, IGStoryCameraModeSwitcherViewDelegate, IGCameraEffectBottomSheetViewControllerDelegate, IGPartialModalSheetListener, IGVideoCallAREffectToastPresenterDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  NSObject<IGVideoCallCaptureCoordinatorAREffectProtocol> *_captureCoordinator;
  IGVideoCallLoggingContext *_loggingContext;
  NSObject<IGVideoCallAREffectViewControllerDelegate><IGPartialModalSheetCustomInteractionDelegate><IGPartialModalSheetListener> *_delegate;
  BOOL _hasAttachedGestureToGestureView;
  int _videoCallParticipantCount;
  IGKragleVideoEffectCommunicationController *_communicationController;
  NSString *_multipeerEffectIdFromAutoApply;
  NSString *_multipeerEffectInitiatorId;
  NSString *_groupEffectInitiatorName;
  IGKragleAvatarCommunicationController *_avatarCommunicationController;
  NSString *_expectedFetchedCallLayoutEffectInitiatorId;
  NSString *_expectedFetchedCallLayoutEffectInitiatorName;
  IGRTCKragleCall *_call;
  NSObject<IGSubscriptionToken> *_subscriptionToken;
  NSObject<FBCCAudioPipelineProviding> *_rtcAudioGraphClientProvider;
  UIView *_tray;
  NSString *_lastAppliedEffectId;
  BOOL _isLastAppliedEffectCallLayoutEffect;
  int _lastAppliedEffectMaximumParticipantCount;
  IGRadialLoadingIndicatorView *_effectLoadingView;
  BOOL _isShowingEffectLoadingView;
  IGMultiCameraEffectCollectionDataProvider *_normalEffectCollectionDataProvider;
  IGMultiCameraEffectCollectionDataProvider *_savedEffectCollectionDataProvider;
  IGMultiCameraEffectCollectionDataProvider *_multipeerEffectCollectionDataProvider;
  IGMultiCameraEffectCollectionDataProvider *_avatarPresetEffectCollectionDataProvider;
  IGMultiCameraEffectCollectionDataProvider *_soloBackgroundsCollectionDataProvider;
  IGCameraEffectsByIDProvider *_targetDataProvider;
  IGVideoCallAREffectToastPresenter *_toastPresenter;
  UIViewController<IGVideoCallEffectTrayViewControllerProtocol> *_trayViewController;
  unsigned long long _currentEffectMode;
  unsigned long long _currentTrayMode;
  unsigned long long _modeBeforeAvatarToggle;
  NSDictionary *_effectModesToSelectorModes;
  NSMutableDictionary *_modesToEffects;
  NSMutableDictionary *_modesToSelectedIndex;
  BOOL _isMultipeerEffectEnabledFromVideoCapabilities;
  BOOL _isSceneCompEffectEnabledFromVideoCapabilities;
  long long _currentTouchupSliderBucker;
  IGCameraDraftEffectConsentDialogueController *_draftEffectConsentDialogueController;
  BOOL _soloBackgroundsSidebarEntryPointEnabled;
  NSString *_miniGallerySessionId;
  unsigned long long _miniGallerySource;
  IGCameraEffectMiniGalleryPerfLoggingContext *_miniGalleryPerfLoggingContext;
  IGCameraEffectMiniGalleryLoggingContext *_miniGalleryLoggingContext;
  IGCameraEffectMiniGalleryFeedDataProvider *_miniGalleryFeedDataProvider;
  IGCameraEffectMiniGalleryCategoryProvider *_miniGalleryCategoryProvider;
  IGCameraEffectMiniGalleryViewController *_miniGalleryViewController;
  NSMutableOrderedSet *_miniGallerySelectedEffectsToAdd;
  BOOL _touchupFilterApplied;
  NSString *_currentLightingFilterIdentifier;
  IGVideoCallAREffectAvatarsController *_avatarsEffectController;
  IGRTCAvatarSupplementaryEffectLogger *_avatarSupplementaryEffectLogger;
  BOOL _isAvatarThemeSelected;
  BOOL _didSwitchFromAvatarThemeBackToDefaultTheme;
  BOOL _useArmadilloCompliantAvatarLogging;
  BOOL _avatarFeatureIsEnabledForArmadillo;
  NSMutableSet *_loggedTrayModesImpressions;
  IGLContext *_iglContext;
  IGImagePreparer *_imagePreparer;
  BOOL _didGenerateLightingIcons;
  NSMutableSet *_loggedCameraTrayItemsImpressions;
  IGBloksActionNavigationController *_bloksNavigationController;
  IGVideoCallSceneCompFunnelLogger *_sceneCompFunnelLogger;
  NSObject<IGVideoCallAREffectTouchupPersistenceControlling> *_touchupPersistenceController;
  BOOL _hasAppliedPersistedTouchupEffect;
  NSMutableSet *_groupEffectPeerConsentLocalCallIds;
  NSObject<IGAlertHUDHandling> *_alertHandler;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session captureCoordinator:(id)coordinator loggingContext:(id)context delegate:(id)delegate isEligibleForAvatarFeatures:(BOOL)features;
- (void)loadView;
- (void)_showLoadingView:(BOOL)view;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)setCall:(id)call;
- (void)updateEffectParticipantIdsWithSelfId:(id)id rendererParticipantIdMap:(id)map;
- (BOOL)isAREffectTrayVisible;
- (BOOL)isMiniEffectGalleryVisible;
- (void)showAREffectTray:(BOOL)tray;
- (void)showAREffectTray:(BOOL)tray mode:(unsigned long long)mode;
- (void)hideAREffectTray:(BOOL)tray;
- (void)showMiniEffectGallery:(BOOL)gallery;
- (void)hideMiniEffectGallery:(BOOL)gallery;
- (void)willPauseVideo;
- (void)willResumeVideo;
- (void)setEffectModeSliderValue:(unsigned long long)value value:(double)value;
- (void)applyAREffectWithId:(id)id;
- (void)reapplyAREffect;
- (void)applyPersistedAREffectsIfNeeded;
- (id)selectedAREffectId;
- (void)prefetchEffects;
- (void)prefetchAvatarPresetEffects;
- (BOOL)isAvatarEffectApplied;
- (void)fetchTargetEffectModel:(id)model;
- (id)arEffectsTray;
- (void)toggleAvatarEffectWithTray:(BOOL)tray toggleTrayVisibility:(BOOL)visibility;
- (void)callEndedWithVideoCallSession:(id)session;
- (void)showFlmConsentDialog:(id)dialog acceptedCompletion:(id /* block */)completion deniedCompletion:(id /* block */)completion;
- (void)handleAvatarEffectDownloadState:(long long)state;
- (void)handleAvatarStatusUpdate:(long long)update;
- (void)arEffectApplicator:(id)applicator didDownloadAREffectAsset:(id)asset withIsPrefetch:(BOOL)prefetch;
- (void)arEffectApplicatorAREffectDidBecomeAvailable:(id)available;
- (void)arEffectApplicatorUserDidTurnOffAREffect:(id)areffect;
- (void)arEffectApplicator:(id)applicator didUpdateAREffectTouchSupportedStatus:(BOOL)status;
- (void)arEffectApplicatorDidUpdateEffectList:(id)list fromNetwork:(BOOL)network;
- (void)arEffectApplicator:(id)applicator didFailWithTargetEffectResponse:(id)response;
- (void)arEffectApplicator:(id)applicator didFailFetchWithError:(id)error;
- (void)arEffectApplicatorDidFailToDownload:(id)download;
- (void)arEffectApplicator:(id)applicator didFailToDownloadAssetForAssetModel:(id)model;
- (void)arEffectApplicatorDidFailToDownloadRemoteModel:(id)model;
- (void)instructionServiceHandler:(id)handler requestsShowAREffectTextInstructions:(id)instructions forDuration:(double)duration;
- (void)instructionServiceHandler:(id)handler requestsShowAREffectImages:(id)images;
- (void)instructionServiceHandlerRequestsHideAREffectInstructions:(id)instructions;
- (void)handleAvatarUpsellPresentationUpdate:(long long)update;
- (void)cameraEffectCollectionDataSource:(id)source didUpdateUsingPage:(id)page resultSource:(long long)source;
- (void)cameraEffectCollectionDataSource:(id)source didFailWithError:(id)error resultSource:(long long)source;
- (void)arEffectApplicator:(id)applicator willApplyAREffect:(id)areffect;
- (void)arEffectApplicatorWillUnApplyAREffect:(id)areffect isSwitchingAREffect:(BOOL)areffect;
- (void)arEffectApplicator:(id)applicator willAddFilterWithConfig:(id)config assetModel:(id)model completion:(id /* block */)completion;
- (void)arEffectApplicator:(id)applicator willAddFilter:(id)filter completion:(id /* block */)completion;
- (BOOL)arEffectApplicatorCanUseAREngineFilterFlow:(id)flow;
- (void)arEffectApplicator:(id)applicator willAddFilter:(id)filter completionWithServiceHost:(id /* block */)host;
- (void)arEffectApplicator:(id)applicator didSetEffect:(id)effect withAttribution:(id)attribution;
- (void)arEffectApplicatorDidFailToRender:(id)render;
- (void)arEffectApplicator:(id)applicator didRenderEffect:(id)effect;
- (BOOL)cameraViewControllerShouldFetchForSwitcherMode:(id)mode;
- (BOOL)cameraViewControllerCropAspectRatio:(id)ratio;
- (void)cameraViewController:(id)controller didBeginFetchingEffectTarget:(id)target;
- (void)cameraViewController:(id)controller didCompleteFetchForEffectTarget:(id)target;
- (void)cameraViewController:(id)controller didFailFetchForEffectTarget:(id)target response:(id)response;
- (void)cameraViewController:(id)controller didFailFetchWithError:(id)error;
- (void)cameraViewControllerDidTurnOffAREffects:(id)areffects;
- (id)cameraTrayViewController:(id)controller effectForIndex:(long long)index;
- (void)_handleDidSelectItemAtIndex:(long long)index;
- (void)_showEffectSelection:(id)selection;
- (void)cameraTrayViewController:(id)controller didSelectItemAtIndex:(long long)index isManualSelection:(BOOL)selection;
- (void)cameraTrayViewController:(id)controller didScrollToItemAtIndex:(long long)index;
- (void)cameraTrayViewController:(id)controller didRequestRemovalOfAREffectWithID:(id)id;
- (void)cameraTrayViewController:(id)controller didConfirmSelectionAtIndex:(long long)index;
- (void)cameraTrayViewController:(id)controller willDisplayCellAtIndex:(long long)index;
- (void)didTapDisabledItemForCameraTrayViewController:(id)controller;
- (long long)numberOfItemsInCameraTrayViewController:(id)controller;
- (id)cameraTrayViewController:(id)controller accessibilityLabelForItemAtIndex:(long long)index;
- (id)cameraTrayViewController:(id)controller accessibilityIdentifierForItemAtIndex:(long long)index;
- (id)cameraTrayViewController:(id)controller imageURLForItemAtIndex:(long long)index isHighlighted:(BOOL)highlighted;
- (id)cameraTrayViewController:(id)controller imageProcessorForItemAtIndex:(long long)index;
- (id /* block */)cameraTrayViewController:(id)controller imageProviderForItemAtIndex:(long long)index isHighlighted:(BOOL)highlighted;
- (id)cameraCustomDialViewForItemAtIndex:(long long)index;
- (BOOL)cameraTrayViewController:(id)controller shouldAllowMoreInfoAccessForItemAtIndex:(long long)index;
- (BOOL)_cameraTrayItemDisabled:(id)disabled;
- (BOOL)cameraTrayViewController:(id)controller itemDisabledAtIndex:(long long)index;
- (BOOL)cameraTrayViewController:(id)controller itemPrivacyIncompatibleAtIndex:(long long)index;
- (id)cameraTrayViewController:(id)controller accessibilityHintForItemAtIndex:(long long)index;
- (BOOL)cameraTrayViewController:(id)controller isItemPersonalizedAvatarAtIndex:(long long)index;
- (BOOL)cameraModeSwitcherView:(id)view shouldBeginDraggingFromMode:(id)mode;
- (void)cameraModeSwitcherView:(id)view didSwitchFromMode:(id)mode toMode:(id)mode;
- (void)cameraModeSwitcherViewDidSelectMode:(id)mode;
- (void)cameraModeSwitcherViewDidEndScrollOnMode:(id)mode;
- (void)cameraModeSwitcherViewDidDisplayMode:(id)mode;
- (void)cameraEffectBottomSheetViewControllerDidEnterFullscreenMode:(id)mode;
- (void)cameraEffectBottomSheetViewControllerDidLeaveFullscreenMode:(id)mode;
- (void)cameraEffectBottomSheetViewController:(id)controller didTapViewProductItem:(id)item;
- (void)cameraEffectBottomSheetViewController:(id)controller didToggleSaveToWishlist:(BOOL)wishlist showToast:(BOOL)toast;
- (void)cameraEffectBottomSheetViewController:(id)controller didRequestRemovalOfEffectWithID:(id)id completion:(id /* block */)completion;
- (id)cameraEffectBottomSheetViewControllerAttributionModelForCurrentAREffect:(id)areffect;
- (BOOL)cameraEffectBottomSheetViewControllerShouldPresentCamera:(id)camera;
- (void)cameraEffectBottomSheetViewControllerDidTapTryIt:(id)it onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (long long)cameraEffectBottomSheetViewControllerCaptureType:(id)type;
- (long long)cameraEffectBottomSheetViewControllerSwitcherMode:(id)mode;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (void)_generateTrayItems;
- (void)_updateGroupEffectStatusAndLogFailedCallLayout:(id)layout;
- (void)_fetchEffectAndApply:(id)apply shouldAutoApply:(BOOL)apply notificationType:(int)type effectName:(id)name effectThumbnailUri:(id)uri initiatorId:(id)id initiatorName:(id)name cryptoHash:(id)hash shownPeerConsentDialog:(BOOL)dialog;
- (void)_createAREffectTargetModelAndFetchEffect:(id)effect cryptoHash:(id)hash;
- (void)_presentGroupEffectPeerConsentAlertForEffectId:(id)id shouldAutoApply:(BOOL)apply notificationType:(int)type effectName:(id)name effectThumbnailUri:(id)uri initiatorId:(id)id initiatorName:(id)name cryptoHash:(id)hash localCallId:(id)id;
- (void)cameraEffectMiniGalleryViewControllerDidClearSelection:(id)selection;
- (void)cameraEffectMiniGalleryViewController:(id)controller didSelectEffect:(id)effect;
- (void)cameraEffectMiniGalleryViewControllerDidSwitchCategories:(id)categories;
- (void)cameraEffectMiniGalleryViewControllerDidTapSwitchCamera:(id)camera;
- (void)cameraEffectMiniGalleryViewControllerWillExitFullscreen:(id)fullscreen;
- (void)cameraEffectMiniGalleryViewControllerDidEnterFullscreen:(id)fullscreen;
- (void)cameraEffectMiniGalleryViewControllerWillDismiss:(id)dismiss;
- (void)cameraEffectMiniGalleryViewController:(id)controller logSelectedEffect:(id)effect index:(long long)index;
- (void)cameraEffectMiniGalleryViewControllerDidLogImpressionForEffectID:(id)id;
- (BOOL)cameraEffectMiniGalleryViewControllerEffectIdIsLogged:(id)logged;
- (void)cameraEffectMiniGalleryPlusViewControllerLogImpressionForEffectID:(id)id categoryID:(id)id;
- (BOOL)cameraEffectMiniGalleryPlusViewControllerEffectIdIsLogged:(id)logged categoryID:(id)id;
- (BOOL)categoryDataProvider:(id)provider shouldFilterCategoryWithIdentifier:(id)identifier;
- (void)logDidShowToastWithType:(long long)type;
- (void)sendMessage:(id)message toTopic:(id)topic usingRTPChannel:(BOOL)rtpchannel;
- (void)sendBinaryMessage:(id)message toTopic:(id)topic usingRTPChannel:(BOOL)rtpchannel;
- (void)setHandler:(id /* block */)handler forTopic:(id)topic;
- (void)setBinaryHandler:(id /* block */)handler forTopic:(id)topic;
- (void)receivedAvatarPlatformEventWithData:(id)data;
- (id)currentUserForEffectDescriptor:(id)descriptor;
- (id)currentParticipantsForEffectDescriptor:(id)descriptor;
- (void)setParticipantsUpdatedHandler:(id /* block */)handler forEffectDescriptor:(id)descriptor;
- (void)onComposedLocallyChanged:(BOOL)changed;
- (void)onEnforceSharedByAllChanged:(BOOL)changed;
- (void)onMaximumParticipantCountChanged:(int)changed;
- (void)fetchGroupEffect:(id)effect shouldAutoApply:(BOOL)apply notificationType:(int)type effectName:(id)name effectThumbnailUri:(id)uri initiatorId:(id)id initiatorName:(id)name cryptoHash:(id)hash isSceneCompEffect:(BOOL)effect;
- (void)applyCallLayoutEffectWithId:(id)id showLoadingError:(BOOL)error pendingCallLayoutEffectId:(id)id;
- (void)displayCallLayoutEffectRemoveNotificationWithEffectId:(id)id effectName:(id)name effectThumbnailUri:(id)uri initiatorId:(id)id initiatorName:(id)name;
- (void)callLayoutEffectRemoved:(long long)removed withRemoveReason:(id)reason isUserInitiated:(BOOL)initiated;
- (void)setShowingSelfViewFullScreenOnly:(BOOL)only;
- (void)updatedAudioGraphClientProvider:(id)provider;
- (BOOL)collectionDataProvider:(id)provider shouldFilterEffect:(id)effect;
- (void)kragleAvatarCommunicationController:(id)controller didUpdateAvatarLoadState:(int)state;
@end

#endif /* IGVideoCallAREffectViewController_h */
