//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGDirectInboxActiveTrayRowCell_h
#define IGDirectInboxActiveTrayRowCell_h
@import Foundation;

#include "UICollectionViewCell.h"
#include "IGListAdapterDataSource-Protocol.h"
#include "IGListDisplayDelegate-Protocol.h"

@class IGListAdapter, IGUserSession, NSArray, NSString, UICollectionView;
@protocol IGDirectInboxActiveTrayRowCellDelegate;

@interface IGDirectInboxActiveTrayRowCell : UICollectionViewCell<IGListAdapterDataSource, IGListDisplayDelegate> {
  /* instance variables */
  UICollectionView *_collectionView;
  IGListAdapter *_listAdapter;
  NSArray *_items;
  NSObject<IGDirectInboxActiveTrayRowCellDelegate> *_delegate;
  IGUserSession *_userSession;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)objectsForListAdapter:(id)adapter;
- (id)listAdapter:(id)adapter sectionControllerForObject:(id)object;
- (id)emptyViewForListAdapter:(id)adapter;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)traySectionControllerTapped:(id)tapped;
- (void)traySectionController:(id)controller didLongPressViewModel:(id)model;
@end

#endif /* IGDirectInboxActiveTrayRowCell_h */
