//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTImageStoreManager_h
#define RCTImageStoreManager_h
@import Foundation;

#include "NativeImageStoreIOSSpec-Protocol.h"
#include "RCTBridge.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTModuleRegistry.h"
#include "RCTURLRequestHandler-Protocol.h"
#include "RCTViewRegistry.h"

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface RCTImageStoreManager : NSObject<NativeImageStoreIOSSpec, RCTURLRequestHandler> {
  /* instance variables */
  NSMutableDictionary *_store;
  unsigned long long _id;
  NSObject<OS_dispatch_queue> *_storageQueue;
}

@optional
@property (weak, nonatomic) RCTModuleRegistry *moduleRegistry;
@optional
@property (weak, nonatomic) RCTViewRegistry *viewRegistry_DEPRECATED;
@optional
@property (weak, nonatomic) RCTBundleManager *bundleManager;
@optional
@property (weak, nonatomic) RCTCallableJSModules *callableJSModules;
@optional
@property (readonly, weak, nonatomic) RCTBridge *bridge;
@optional
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)moduleName;
+ (void)load;
+ (BOOL)requiresMainQueueSetup;
+ (const struct RCTMethodInfo *)__rct_export__1200;
+ (const struct RCTMethodInfo *)__rct_export__1251;
+ (const struct RCTMethodInfo *)__rct_export__1342;
+ (const struct RCTMethodInfo *)__rct_export__1513;

/* instance methods */
- (id)init;
- (id)_getAsyncQueue;
- (float)handlerPriority;
- (void)removeImageForTag:(id)tag withBlock:(id /* block */)block;
- (id)_storeImageData:(id)data;
- (void)storeImageData:(id)data withBlock:(id /* block */)block;
- (void)getImageDataForTag:(id)tag withBlock:(id /* block */)block;
- (void)storeImage:(id)image withBlock:(id /* block */)block;
- (void)removeImageForTag:(id)tag;
- (void)hasImageForTag:(id)tag callback:(id /* block */)callback;
- (void)getBase64ForTag:(id)tag successCallback:(id /* block */)callback errorCallback:(id /* block */)callback;
- (void)addImageFromBase64:(id)base64 successCallback:(id /* block */)callback errorCallback:(id /* block */)callback;
- (BOOL)canHandleRequest:(id)request;
- (id)sendRequest:(id)request withDelegate:(id)delegate;
- (void)cancelRequest:(id)request;
- (struct shared_ptr<facebook::react::TurboModule> { struct TurboModule * x0; struct __shared_weak_count * x1; })getTurboModule:(const void *)module;
@end

#endif /* RCTImageStoreManager_h */
