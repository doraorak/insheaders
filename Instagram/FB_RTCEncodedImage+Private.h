//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FB_RTCEncodedImage_Private_h
#define FB_RTCEncodedImage_Private_h
@import Foundation;

@interface FB_RTCEncodedImage (Private)
/* instance methods */
- (struct scoped_refptr<webrtc_legacy::EncodedImageBufferInterface> { struct EncodedImageBufferInterface * x0; })encodedData;
- (void)setEncodedData:(struct scoped_refptr<webrtc_legacy::EncodedImageBufferInterface> { struct EncodedImageBufferInterface * x0; })data;
- (id)initWithNativeEncodedImage:(const void *)image;
- (struct EncodedImage { unsigned int x0; unsigned int x1; long long x2; long long x3; int x4; int x5; unsigned char x6; BOOL x7; int x8; int x9; struct PlayoutDelay { int x0; int x1; } x10; struct Timing { unsigned char x0; long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; long long x10; long long x11; } x11; struct LtrStats { BOOL x0; BOOL x1; BOOL x2; } x12; struct scoped_refptr<webrtc_legacy::EncodedImageBufferInterface> { struct EncodedImageBufferInterface * x0; } x13; unsigned long long x14; char * x15; unsigned long long x16; unsigned int x17; struct optional<int> { union { char x0; int x1; } x0; BOOL x1; } x18; struct map<int, unsigned long, std::less<int>, std::allocator<std::pair<const int, unsigned long>>> { struct __tree<std::__value_type<int, unsigned long>, std::__map_value_compare<int, std::__value_type<int, unsigned long>, std::less<int>>, std::allocator<std::__value_type<int, unsigned long>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<int, unsigned long>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<int, std::__value_type<int, unsigned long>, std::less<int>>> { unsigned long long x0; } x2; } x0; } x19; struct optional<webrtc_legacy::ColorSpace> { union { char x0; struct ColorSpace { unsigned char x0; unsigned char x1; unsigned char x2; int x3; int x4; int x5; struct optional<webrtc_legacy::HdrMetadata> { union { char x0; struct HdrMetadata { struct HdrMasteringMetadata { struct Chromaticity { float x0; float x1; } x0; struct Chromaticity { float x0; float x1; } x1; struct Chromaticity { float x0; float x1; } x2; struct Chromaticity { float x0; float x1; } x3; float x4; float x5; } x0; int x1; int x2; } x1; } x0; BOOL x1; } x6; } x1; } x0; BOOL x1; } x20; struct optional<unsigned short> { union { char x0; unsigned short x1; } x0; BOOL x1; } x21; struct RtpPacketInfos { struct scoped_refptr<webrtc_legacy::RtpPacketInfos::Data> { struct Data * x0; } x0; } x22; BOOL x23; })nativeEncodedImage;
@end

#endif /* FB_RTCEncodedImage_Private_h */
