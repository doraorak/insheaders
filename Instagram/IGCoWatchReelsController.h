//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGCoWatchReelsController_h
#define IGCoWatchReelsController_h
@import Foundation;

#include "UIViewController.h"
#include "FBVideoLiveClock.h"
#include "IGCoWatchAudioModel.h"
#include "IGCoWatchOverlayViewModel.h"
#include "IGCoWatchReelsFetcher.h"
#include "IGCoWatchReelsViewModel.h"
#include "IGListAdapterDataSource-Protocol.h"
#include "UICollectionViewDelegate-Protocol.h"
#include "UICollectionViewDelegateFlowLayout-Protocol.h"

@class IGListAdapter, IGUserSession, NSArray, NSMutableDictionary, NSString, UICollectionView;
@protocol IGCoWatchAudioModelAnnouncer, IGCoWatchLoggingListener, IGCoWatchPlaybackControllerDelegate, IGCoWatchReelsControllerDelegate, IGCoWatchReelsControllerTooltipDelegate;

@interface IGCoWatchReelsController : UIViewController<IGListAdapterDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout> {
  /* instance variables */
  IGUserSession *_userSession;
  NSObject<IGCoWatchLoggingListener> *_logger;
  double _watchTime;
  NSString *_tabSource;
  NSString *_surfaceId;
  FBVideoLiveClock *_syncedClock;
  IGCoWatchOverlayViewModel *_overlayViewModel;
  NSObject<IGCoWatchPlaybackControllerDelegate> *_playbackDelegate;
  UICollectionView *_collectionView;
  IGListAdapter *_listAdapter;
  IGCoWatchReelsFetcher *_reelsFetcher;
  NSArray *_reelsItems;
  IGCoWatchReelsViewModel *_currentPlayingReels;
  long long _currentIndex;
  NSMutableDictionary *_activePlaybackControllers;
  BOOL _isInPipMode;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _overlayInsets;
  IGCoWatchAudioModel *_currentAudioModel;
  NSObject<IGCoWatchAudioModelAnnouncer> *_audioModelAnnouncer;
  BOOL _isChromeVisible;
  NSObject<IGCoWatchReelsControllerDelegate> *_reelsControllerDelegate;
  NSObject<IGCoWatchReelsControllerTooltipDelegate> *_reelsControllerTooltipDelegate;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session reelsFetcher:(id)fetcher videoPlaybackControllerDelegate:(id)delegate logger:(id)logger audioModelAnnouncer:(id)announcer showChrome:(BOOL)chrome isPipMode:(BOOL)mode threadId:(id)id firstMedia:(id)media;
- (id)initWithUserSession:(id)session videoPlaybackControllerDelegate:(id)delegate logger:(id)logger audioModelAnnouncer:(id)announcer showChrome:(BOOL)chrome isPipMode:(BOOL)mode threadId:(id)id firstMedia:(id)media;
- (void)onAudioModelUpdated:(id)updated;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)dealloc;
- (void)playMedia:(id)media syncedClock:(id)clock startTimeMillis:(struct duration<long long, std::ratio<1, 1000>> { long long x0; })millis surfaceId:(id)id playbackState:(long long)state tabSource:(id)source isCarouselItem:(BOOL)item initialAudioModel:(id)model;
- (void)stop;
- (long long)playbackState;
- (void)reelsFetcherDidFinishLoadingItems:(id)items;
- (void)reelsFetcherDidFinishLoadingWithNumItems:(long long)items success:(BOOL)success;
- (void)updatePlayerOriginY:(double)y chicletOriginY:(double)y;
- (void)configureWithOverlayViewModel:(id)model;
- (void)chromeDidShowWithAnimationDuration:(double)duration isChromeVisible:(BOOL)visible isInPipMode:(BOOL)mode overlayInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets tearingDownCowatch:(BOOL)cowatch;
- (BOOL)layoutNeededWhenRecievingNewMedia;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint *)offset;
- (id)emptyViewForListAdapter:(id)adapter;
- (id)listAdapter:(id)adapter sectionControllerForObject:(id)object;
- (id)objectsForListAdapter:(id)adapter;
- (void)sectionControllerWillDisplaySectionController:(id)controller cell:(id)cell viewModel:(id)model;
- (void)sectionControllerDidEndDisplaying:(id)displaying cell:(id)cell viewModel:(id)model;
- (void)_onAppDidEnterBackground:(id)background;
- (void)_onAppWillEnterForeground:(id)foreground;
- (id)listAdapter;
- (id)collectionView;
@end

#endif /* IGCoWatchReelsController_h */
