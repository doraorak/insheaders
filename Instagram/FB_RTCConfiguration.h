//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FB_RTCConfiguration_h
#define FB_RTCConfiguration_h
@import Foundation;

#include "FB_RTCCertificate.h"
#include "FB_RTCCryptoOptions.h"
#include "FB_RTCIntervalRange.h"

@class NSArray, NSNumber;

@interface FB_RTCConfiguration : NSObject

@property (nonatomic) struct TurnCustomizer * turnCustomizer;
@property (copy, nonatomic) NSArray *iceServers;
@property (retain, nonatomic) FB_RTCCertificate *certificate;
@property (nonatomic) long long iceTransportPolicy;
@property (nonatomic) long long bundlePolicy;
@property (nonatomic) long long rtcpMuxPolicy;
@property (nonatomic) long long tcpCandidatePolicy;
@property (nonatomic) long long candidateNetworkPolicy;
@property (nonatomic) long long continualGatheringPolicy;
@property (nonatomic) BOOL disableIPV6;
@property (nonatomic) BOOL disableIPV6OnWiFi;
@property (nonatomic) int maxIPv6Networks;
@property (nonatomic) BOOL disableLinkLocalNetworks;
@property (nonatomic) int audioJitterBufferMaxPackets;
@property (nonatomic) BOOL audioJitterBufferFastAccelerate;
@property (nonatomic) int iceConnectionReceivingTimeout;
@property (nonatomic) int iceBackupCandidatePairPingInterval;
@property (nonatomic) long long keyType;
@property (nonatomic) int iceCandidatePoolSize;
@property (nonatomic) BOOL shouldPruneTurnPorts;
@property (nonatomic) BOOL shouldPresumeWritableWhenFullyRelayed;
@property (nonatomic) BOOL shouldSurfaceIceCandidatesOnIceTransportTypeChanged;
@property (copy, nonatomic) NSNumber *iceCheckMinInterval;
@property (retain, nonatomic) FB_RTCIntervalRange *iceRegatherIntervalRange;
@property (nonatomic) long long sdpSemantics;
@property (nonatomic) BOOL activeResetSrtpParams;
@property (nonatomic) BOOL allowCodecSwitching;
@property (retain, nonatomic) FB_RTCCryptoOptions *cryptoOptions;
@property (nonatomic) int rtcpAudioReportIntervalMs;
@property (nonatomic) int rtcpVideoReportIntervalMs;

/* class methods */
+ (int)nativeTransportsTypeForTransportPolicy:(long long)policy;
+ (long long)transportPolicyForTransportsType:(int)type;
+ (id)stringForTransportPolicy:(long long)policy;
+ (int)nativeBundlePolicyForPolicy:(long long)policy;
+ (long long)bundlePolicyForNativePolicy:(int)policy;
+ (id)stringForBundlePolicy:(long long)policy;
+ (int)nativeRtcpMuxPolicyForPolicy:(long long)policy;
+ (long long)rtcpMuxPolicyForNativePolicy:(int)policy;
+ (id)stringForRtcpMuxPolicy:(long long)policy;
+ (int)nativeTcpCandidatePolicyForPolicy:(long long)policy;
+ (int)nativeCandidateNetworkPolicyForPolicy:(long long)policy;
+ (long long)tcpCandidatePolicyForNativePolicy:(int)policy;
+ (id)stringForTcpCandidatePolicy:(long long)policy;
+ (long long)candidateNetworkPolicyForNativePolicy:(int)policy;
+ (id)stringForCandidateNetworkPolicy:(long long)policy;
+ (int)nativeContinualGatheringPolicyForPolicy:(long long)policy;
+ (long long)continualGatheringPolicyForNativePolicy:(int)policy;
+ (id)stringForContinualGatheringPolicy:(long long)policy;
+ (int)nativeEncryptionKeyTypeForKeyType:(long long)type;
+ (int)nativeSdpSemanticsForSdpSemantics:(long long)semantics;
+ (long long)sdpSemanticsForNativeSdpSemantics:(int)semantics;
+ (id)stringForSdpSemantics:(long long)semantics;

/* instance methods */
- (id)init;
- (id)initWithNativeConfiguration:(const void *)configuration;
- (id)description;
- (void *)createNativeConfiguration;
@end

#endif /* FB_RTCConfiguration_h */
