//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGFeedItemShoppingCTAButtonCell_h
#define IGFeedItemShoppingCTAButtonCell_h
@import Foundation;

#include "UICollectionViewCell.h"
#include "IGFeedItemCTAButtonCellConfigurable-Protocol.h"
#include "IGFeedItemCTAButtonCellConfigurableDelegate-Protocol.h"
#include "IGFeedItemLoggingProviderDelegate-Protocol.h"
#include "IGFeedItemPageCellState.h"
#include "IGPCMEventAttributionConforming-Protocol.h"
#include "IGPostItemProtocol-Protocol.h"
#include "IGRenderingLoggingProviding-Protocol.h"

@class IGLeftAlignedFullWidthCTAButton, IGMedia, IGSessionTracker, IGShoppingConsumptionFeedItemLogger, IGSponsoredSupportConfiguration, IGUserSession, NSArray, NSMutableDictionary, NSNumber, NSString, UIColor, UIView;

@interface IGFeedItemShoppingCTAButtonCell : UICollectionViewCell<IGFeedItemCTAButtonCellConfigurable, IGRenderingLoggingProviding, IGPCMEventAttributionConforming> {
  /* instance variables */
  IGSponsoredSupportConfiguration *_sponsoredSupportConfiguration;
  BOOL _enableAutomatedLogging;
  UIView *_eventAttributionViewOverlay;
  NSObject<IGPostItemProtocol> *_currentPostItem;
  IGMedia *_currentMedia;
  IGShoppingConsumptionFeedItemLogger *_feedItemLogger;
  NSMutableDictionary *_impressionLogTimes;
  NSString *_analyticsModule;
  IGFeedItemPageCellState *_pageCellState;
  IGSessionTracker *_shoppingSessionTracker;
  IGUserSession *_userSession;
  BOOL _ctaVisible;
  UIView *_customizableButtonContainer;
  IGLeftAlignedFullWidthCTAButton *_customizableButton;
  unsigned long long _customizableButtonCTAState;
}

@property (copy, nonatomic) NSArray *accessibilityElements;
@property (readonly, nonatomic) NSString *secondaryText;
@property (retain, nonatomic) IGMedia *media;
@property (nonatomic) unsigned long long accessoryViewType;
@property (weak, nonatomic) NSObject<IGFeedItemCTAButtonCellConfigurableDelegate> *delegate;
@property (weak, nonatomic) NSObject<IGFeedItemLoggingProviderDelegate> *loggingDelegate;
@property (retain, nonatomic) UIColor *customizableBackgroundColor;
@property (nonatomic) BOOL isShownInDarkTheme;
@property (retain, nonatomic) NSNumber *darkModePreHighlightColorScheme;
@property (retain, nonatomic) NSNumber *lightModePreHighlightColorScheme;
@property (readonly, nonatomic) NSString *title;
@property (readonly, nonatomic) NSString *destinationText;
@property (nonatomic) BOOL showSpinner;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (double)heightWithUserSession:(id)session;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)configureWithMedia:(id)media cellViewModel:(id)model feedConfiguration:(id)configuration cellDelegate:(id)delegate loggingDelegate:(id)delegate actionCellState:(id)state pageCellState:(id)state enableLeftAccessory:(BOOL)accessory rightAccessoryPosition:(unsigned long long)position tappableAreaInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets enableAutomatedLogging:(BOOL)logging navigationController:(id)controller session:(id)session;
- (void)configureWithTitle:(id)title backgroundColor:(id)color cellDelegate:(id)delegate;
- (void)updateButtonWithPostItem:(id)item media:(id)media;
- (void)willMoveToWindow:(id)window;
- (void)setCustomizableButtonPrimaryTitle:(id)title;
- (void)progressCustomizableButtonCTAStateWithIntent:(id)intent;
- (void)updateCustomizableButtonToCTAState:(unsigned long long)ctastate withIntent:(id)intent animated:(BOOL)animated;
- (void)setCustomizableButtonHidden:(BOOL)hidden animated:(BOOL)animated;
- (void)updateForVisibleDisplayRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)progressivelyUpdateButtonStyleFromPostItem:(id)item toPostItem:(id)item progressPercentage:(double)percentage;
- (id)renderedComponentLoggingInfo;
- (void)insertEventAttributionViewOverlay:(id)overlay;
- (void)prepareForReuse;
- (void)_onCustomizableButtonPressed:(id)pressed;
- (void)layoutSubviews;
- (void)shoppingCartDataController:(id)controller didUpdateCartStore:(id)store withChangeset:(id)changeset;
- (void)shoppingCartDataController:(id)controller didUpdateState:(id)state forQuery:(id)query previousState:(id)state;
- (void)shoppingCartDataController:(id)controller didHandleUserError:(id)error;
- (BOOL)isAccessibilityElement;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (long long)accessibilityElementCount;
- (id)accessibilityElementAtIndex:(long long)index;
- (long long)indexOfAccessibilityElement:(id)element;
- (void)configureWithNumOfLines:(long long)lines;
- (void)configureWithAttributedTitle:(id)title backgroundColor:(id)color cellDelegate:(id)delegate;
- (void)configureWithTitleColor:(id)color rightAccessoryButtonColor:(id)color;
- (void)updateDestinationAdText:(id)text accessoryColor:(id)color;
- (void)setCustomizableButtonAttributedTitle:(id)title;
- (void)updateCTAShouldShowSpinner:(BOOL)spinner withMediaId:(id)id;
- (void)refreshShoppingCTAWithMediaId:(id)id;
- (void)updateCellCTAState:(unsigned long long)ctastate withIntent:(id)intent animated:(BOOL)animated withMediaId:(id)id;
- (void)updateCTAButtonStateWithIntent:(id)intent withMediaId:(id)id;
- (void)updateCTAButtonVisibility:(BOOL)visibility animated:(BOOL)animated withMediaId:(id)id;
- (void)progressivelyUpdateButtonStyleFromPostItem:(id)item toPostItem:(id)item progressPercentage:(double)percentage withMediaId:(id)id;
- (void)mediaCollectionCellDidTapCustomizableButtonWithMediaId:(id)id;
- (void)didUpdateWithPostItem:(id)item andMedia:(id)media;
@end

#endif /* IGFeedItemShoppingCTAButtonCell_h */
