//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGFeedVideoAdWatchAndBrowseViewController_h
#define IGFeedVideoAdWatchAndBrowseViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGBrowserViewController.h"
#include "IGBrowserViewControllerDelegate-Protocol.h"
#include "IGFeedVideoAdViewerTransitionPlaybackType.h"
#include "IGFeedVideoAdWatchAndBrowseGestureConfig.h"
#include "IGFeedVideoAdWatchAndBrowseLegibilityGradientView.h"
#include "IGFeedVideoAdWatchAndBrowseVideoPlaybackViewController.h"
#include "IGSponsoredInfoProviding-Protocol.h"
#include "IGTransitionZoomToCapable-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class IGDirectionalPanGestureRecognizer, IGFeedVideoAdWatchAndBrowseDismissButtonX, IGGradientView, IGImageView, IGMedia, IGSponsoredSupportConfiguration, IGTimeoutTapGestureRecognizer, IGUnifiedVideoBackButton, IGUserSession, NSDictionary, NSNumber, NSString, NSURL, UIGestureRecognizer, UIView;

@interface IGFeedVideoAdWatchAndBrowseViewController : IGViewController<IGTransitionZoomToCapable, UIGestureRecognizerDelegate, IGBrowserViewControllerDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  NSString *_viewerSessionId;
  NSString *_analyticsModule;
  UIView *_videoPlayerView;
  IGMedia *_media;
  NSURL *_webURL;
  IGBrowserViewController *_browserViewController;
  NSObject<IGSponsoredInfoProviding> *_sponsoredInfoProvider;
  IGSponsoredSupportConfiguration *_sponsoredSupportConfiguration;
  IGDirectionalPanGestureRecognizer *_verticalPanGesture;
  IGDirectionalPanGestureRecognizer *_browserPanGestureRecognizer;
  IGTimeoutTapGestureRecognizer *_browserTitleTapGestureRecognizer;
  IGFeedVideoAdWatchAndBrowseDismissButtonX *_dismissButton;
  IGUnifiedVideoBackButton *_dismissButtonChevron;
  IGGradientView *_underSheetDimmer;
  IGFeedVideoAdWatchAndBrowseLegibilityGradientView *_topLegibilityGradientView;
  IGFeedVideoAdWatchAndBrowseVideoPlaybackViewController *_videoPlaybackViewController;
  IGFeedVideoAdViewerTransitionPlaybackType *_viewerTransitionPlaybackType;
  IGFeedVideoAdWatchAndBrowseGestureConfig *_gestureConfig;
  BOOL _originalMediaSwipeUpGestureTypeSet;
  BOOL _originalBrowserSwipeUpGestureSet;
  unsigned long long _gestureSurface;
  double _currentBrowserY;
  double _lastBrowserY;
  BOOL _isHotInstanceEnabled;
  double _browserRatioForCollapsedState;
  BOOL _isDismissGestureTypeSet;
  UIGestureRecognizer *_navPanGestureRecognizer;
  BOOL _isExtendedToStatusBarEnabled;
  double _extendedToStatusBarAspectRatioThreshold;
  BOOL _originalNavigationControllerPanGestureEnabled;
  UIView *_dummyHeader;
  UIView *_draggingIndicator;
  double _topBarHeight;
  double _dummyTopBarHeight;
  NSNumber *_staticBrowserRatioForPartialSheet;
  IGImageView *_imageView;
  BOOL _isTallMedia;
  BOOL _zoomTransitionEnabled;
  struct CGSize { double width; double height; } _mediaSize;
}

@property (readonly, nonatomic) NSDictionary *magicMoveSubviews;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session viewerSessionId:(id)id media:(id)media webURL:(id)url viewerTransitionPlaybackType:(id)type sponsoredInfoProvider:(id)provider sponsoredSupportConfiguration:(id)configuration gestureConfig:(id)config isHotInstanceEnabled:(BOOL)enabled isExtendedToStatusBarEnabled:(BOOL)enabled extendedToStatusBarAspectRatioThreshold:(double)threshold browserRatioForCollapsedState:(double)state staticBrowserRatioForPartialSheet:(id)sheet isTallMedia:(BOOL)media isImageAd:(BOOL)ad zoomTransitionEnabled:(BOOL)enabled analyticsModule:(id)module;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(BOOL)disappear;
- (long long)preferredTabBarBehavior;
- (BOOL)prefersNavigationBarDividerHidden;
- (long long)preferredStatusBarStyle;
- (BOOL)prefersNavigationBarHidden;
- (double)_partiallyOpenBrowserY;
- (double)_mediaViewFrameMinYForStaticHeightBrowser:(double)browser mediaHeight:(double)height effectiveBoundsMinY:(double)y;
- (void)_dismissViewControllerByTappingDismissButton;
- (void)_handlePanGestureRecognizer:(id)recognizer;
- (void)_handleRightPanGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (BOOL)gestureRecognizer:(id)recognizer shouldBeRequiredToFailByGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (BOOL)transitionAnimationGestureRecognizer:(id)recognizer shouldBeRequiredToFailByGestureRecognizer:(id)recognizer;
- (BOOL)transitionAnimationGestureRecognizer:(id)recognizer shouldRequireFailureOfGestureRecognizer:(id)recognizer;
- (void)zoomTransitionWillPrepareWithContext:(id)context;
- (void)zoomTransitionWillBeginWithContext:(id)context;
- (BOOL)shouldZoomToTransition;
- (id)transitionZoomViewToItem:(id)item withZoomContext:(id)context;
- (id)transitionZoomItemOverrideOnExit;
- (void)didCompleteForwardZoomTransition;
- (void)prepareForwardZoomTransitionWithContext:(id)context completionHandler:(id /* block */)handler;
- (void)browserViewControllerDidFinishWithURL:(id)url dismissWithMethod:(unsigned long long)method;
- (void)browserViewControllerDidFinishWithSessionID:(id)id landingPageInteractable:(BOOL)interactable;
- (void)browserViewController:(id)controller loadingProgressChanged:(double)changed;
- (void)browserViewController:(id)controller URLChanged:(id)urlchanged;
- (void)browserViewControllerWillCloseBrowser:(id)browser;
- (id)browserViewControllerPresenter;
- (void)browserViewController:(id)controller didScrollWebViewScrollView:(id)view;
- (void)browserViewController:(id)controller didRequestPopupForNavigationAction:(id)action;
- (void)browserViewControllerDidRequestMinimizeToPeek:(id)peek;
- (void)browserViewControllerDidCompleteInitialLoading;
- (void)browserViewControllerDidBecomeInteractive;
- (id)analyticsModuleUri;
@end

#endif /* IGFeedVideoAdWatchAndBrowseViewController_h */
