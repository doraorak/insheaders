//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGLiveQuestionsManager_h
#define IGLiveQuestionsManager_h
@import Foundation;

#include "IGAPIClient-Protocol.h"
#include "IGLiveBroadcastLogger.h"
#include "IGLivePlaybackLoggingContext.h"
#include "IGLiveQuestionModel.h"
#include "NSObject-Protocol.h"

@class IGUserStore, NSArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol IGLiveQuestionsManagerAnnouncer;

@interface IGLiveQuestionsManager : NSObject<NSObject> {
  /* instance variables */
  NSObject<IGAPIClient> *_networker;
  IGUserStore *_userStore;
  NSObject<IGLiveQuestionsManagerAnnouncer> *_announcer;
  NSMutableSet *_answeredQuestionPks;
  NSMutableDictionary *_deletedQuestionPksAndRetryCount;
  NSMutableSet *_reportedQuestionPks;
  NSMutableSet *_likedQuestionPks;
}

@property (readonly, copy, nonatomic) NSArray *availableQuestions;
@property (readonly, copy, nonatomic) NSArray *unansweredQuestions;
@property (readonly, copy, nonatomic) NSArray *answeredQuestions;
@property (readonly, copy, nonatomic) NSArray *unselectedUnansweredQuestions;
@property (readonly, copy, nonatomic) NSArray *unselectedAnsweredQuestions;
@property (readonly, copy, nonatomic) NSArray *liveQuestions;
@property (readonly, copy, nonatomic) NSArray *storiesQuestions;
@property (retain, nonatomic) IGLiveQuestionModel *selectedQuestion;
@property (retain, nonatomic) IGLiveBroadcastLogger *broadcastLogger;
@property (retain, nonatomic) IGLivePlaybackLoggingContext *playbackLoggingContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithNetworker:(id)networker userStore:(id)store;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (void)clearQuestions;
- (void)setQuestion:(id)question withBroadcastId:(id)id asLiked:(BOOL)liked;
- (void)deleteQuestion:(id)question withBroadcastId:(id)id;
- (void)fetchStoryQuestionsWithCompletion:(id /* block */)completion;
- (void)fetchAvailableQuestionsWithBroadcastId:(id)id questionTypesToFetch:(unsigned long long)fetch completion:(id /* block */)completion;
- (void)startQuestionSession;
- (void)endQuestionSession;
- (void)markQuestionAnswered:(id)answered;
- (BOOL)isQuestionAnswered:(id)answered;
- (void)markQuestionReported:(id)reported;
- (BOOL)isQuestionLiked:(id)liked;
- (long long)maxLikeCount;
- (BOOL)isQuestionActive:(id)active;
- (void)notifyQuestionTrayImpressionWithViewMode:(id)mode;
@end

#endif /* IGLiveQuestionsManager_h */
