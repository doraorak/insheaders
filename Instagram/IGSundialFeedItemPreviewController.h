//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGSundialFeedItemPreviewController_h
#define IGSundialFeedItemPreviewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGFNFVideoPlayable-Protocol.h"
#include "IGFNFVideoPlayerDelegate-Protocol.h"
#include "IGFeedVideoTimeIndicatorView.h"
#include "IGHashtagMediaModerationNetworkSource.h"
#include "IGPlaybackTimeIndicatorController.h"
#include "IGPreviewPresentationDelegate-Protocol.h"
#include "IGSundialFeedItemPreviewView.h"
#include "IGSundialViewerAudioAttributionView.h"
#include "IGVPVDImpressionHelper.h"

@class IGGradientView, IGHashtagModel, IGMedia, IGProfilePictureImageView, IGPromptStickerModel, IGUserSession, IGViewController, NSDictionary, NSNumber, NSString, UIImageView, UILabel, UINavigationController, UIView;
@protocol IGFeedItemPreviewControllerActionProvider;

@interface IGSundialFeedItemPreviewController : IGViewController<IGFNFVideoPlayerDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  IGMedia *_media;
  struct { BOOL showAudioAttributionUFIButtonInViewer; BOOL isAudioAttributionHidden; BOOL showAudioTrendingIcon; BOOL showSaveUFIButton; BOOL showCopyLinkUFIButton; BOOL experimentalAudioOnlyAttributionNoAnimations; BOOL showRemixContextualHighlight; BOOL showTryRemixCTARequestedByCreator; BOOL showUserTag; BOOL showFBUserTag; BOOL showStickerResultsAttribution; BOOL showFundraiserCTAButton; BOOL showAudienceControlsCloseFriendsContextualHighlight; BOOL showQuestionStickerResponseContextualHighlight; BOOL subtitlesEnabled; BOOL isImmersiveEnabled; BOOL showFanClubSubscribeButton; BOOL isEventPillEnabled; unsigned long long captionLineCount; BOOL showSoundButton; BOOL showReshareCount; BOOL isReelsOrganicSMCTAEnabled; BOOL isReelsBIOCTAEnabled; BOOL profileInfoLabelEnabled; double ufiButtonScale; BOOL enableMinimalViewer; BOOL isExtraProfilePaddingStyleEnabled; BOOL isPinchToZoomEnabled; BOOL enableClassicOverlayChromeContainer; BOOL isSeeRelatedCTAEnabled; BOOL showRepostAttributionButton; BOOL showRepostLabel; BOOL isInsightsAttachedCardEnabled; BOOL isUserAttributionPolishEnabled; BOOL showFollowersOnlyAttribution; long long highlightType; BOOL showContentNotes; BOOL shouldShowContentNotesNUXButton; BOOL shouldEnableReelsFriendlyViewerOverlay; BOOL showGiftsUFIButton; BOOL shouldShowAudioControlButtonOnVerticalUFI; BOOL shouldShowAudioControlButtonOnAttributeView; BOOL isDPAGridCTAEnabled; BOOL shouldShowINIButton; BOOL showUpdatedMultiTrackUI; BOOL enableCarouselPeek; double carouselPeekLineSpacing; double carouselPeekRatio; BOOL isAdsFollowButtonEnabled; BOOL isHscrollMediaMetricsLoggingFixEnabled; BOOL isTooltipEnabled; BOOL isTooltipEnabledOnTap; BOOL isTooltipEnabledOnLongPress; BOOL isAdsDynamicPositioningEnabled; BOOL shouldShowAddContentNoteButton; BOOL shouldShowRepostButton; BOOL shouldShowAdsUserAttributionSecondaryMusicPill; BOOL isInlineSponsoredLabelEnabled; BOOL isMusicPillProfileDestinationEnabled; BOOL isAdsAttributionHubHiddenEnabled; BOOL isProfileHitTestAreaReductionEnabled; } _experimentOptions;
  NSString *_sourceAnalyticsModule;
  NSObject<IGFNFVideoPlayable> *_videoPlayer;
  IGSundialFeedItemPreviewView *_contentView;
  UIView *_videoView;
  NSDictionary *_loggingExtras;
  BOOL _showViewProfileAction;
  BOOL _allowReportPostDoesntMatchHashtag;
  IGHashtagMediaModerationNetworkSource *_hashtagMediaModerationNetworkSource;
  IGHashtagModel *_hashtagModel;
  IGPromptStickerModel *_promptStickerModel;
  IGSundialViewerAudioAttributionView *_audioAttributionView;
  IGGradientView *_bottomGradientView;
  IGGradientView *_topGradientView;
  UIImageView *_reelsIconImageView;
  IGProfilePictureImageView *_profileImageView;
  UILabel *_titleLabel;
  UIImageView *_userBadge;
  NSNumber *_currentPlaybackTime;
  IGVPVDImpressionHelper *_impressionHelper;
  IGFeedVideoTimeIndicatorView *_timeIndicatorView;
  IGPlaybackTimeIndicatorController *_timeIndicatorController;
  NSObject<IGFeedItemPreviewControllerActionProvider> *_actionProvider;
}

@property (weak, nonatomic) NSObject<IGPreviewPresentationDelegate> *previewPresentationDelegate;
@property (weak, nonatomic) IGViewController *viewControllerForAnimatedPresentation;
@property (weak, nonatomic) UINavigationController *navigationControllerForPushing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session sourceAnalyticsModule:(id)module media:(id)media loggingExtras:(id)extras showViewProfileAction:(BOOL)action allowReportPostDoesntMatchHashtag:(BOOL)hashtag hashtagModel:(id)model promptStickerModel:(id)model currentPlaybackTime:(id)time;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)dealloc;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })preferredMinimizableInsets;
- (id)analyticsModule;
- (void)videoPlayer:(id)player willLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayer:(id)player didLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayerDidPlayToEnd:(id)end;
- (void)videoPlayerItemTimeFullyLoaded:(id)loaded;
- (void)videoPlayerDidLoop:(id)loop;
- (void)videoPlayerWillPrepareAssetForPlayback:(id)playback;
- (void)videoPlayerBufferEmpty:(id)empty;
- (void)videoPlayer:(id)player didFailToPlaybackWithError:(id)error;
- (void)videoPlayer:(id)player didGenerateWarningWithError:(id)error;
- (void)videoPlayerDidPlay:(id)play;
- (void)videoPlayerDidPause:(id)pause reason:(long long)reason;
- (void)videoPlayer:(id)player didUpdateLoadingProgress:(double)progress;
- (void)videoPlayer:(id)player didUpdatePlaybackProgress:(double)progress;
- (void)videoPlayer:(id)player didBeginSeekingToTime:(double)time;
- (void)videoPlayerDidFinishSeeking:(id)seeking;
- (void)videoPlayerDidUpdateAvailableAudioAutoTranslateLanguages:(id)languages;
- (void)playbackTimeIndicatorControllerDidHideIndicatorView:(id)view;
- (void)playbackTimeIndicatorControllerDidFinishTimer:(id)timer;
- (id)previewActionItems;
- (void)_viewProfile;
@end

#endif /* IGSundialFeedItemPreviewController_h */
