//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGBakeoffACOStoryPairCell_h
#define IGBakeoffACOStoryPairCell_h
@import Foundation;

#include "UICollectionViewCell.h"
#include "IGListAdapterDataSource-Protocol.h"
#include "IGStoryViewerLoggingContext.h"

@class IGListAdapter, IGStoryViewSessionSeenStateManager, IGUserSession, NSArray, NSString, UICollectionView, UIView;
@protocol IGBakeoffACOStoryPairCellDelegate;

@interface IGBakeoffACOStoryPairCell : UICollectionViewCell<IGListAdapterDataSource> {
  /* instance variables */
  IGListAdapter *_listAdapter;
  IGStoryViewerLoggingContext *_loggingContext;
  IGUserSession *_userSession;
  NSArray *_viewModels;
  NSString *_analyticsModule;
  UICollectionView *_collectionView;
  UIView *_topView;
}

@property (weak, nonatomic) NSObject<IGBakeoffACOStoryPairCellDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) IGStoryViewSessionSeenStateManager *viewingSessionSeenStateManager;

/* instance methods */
- (id)initWithUserSession:(id)session viewModel:(id)model;
- (void)_viewDidTap;
- (id)emptyViewForListAdapter:(id)adapter;
- (id)listAdapter:(id)adapter sectionControllerForObject:(id)object;
- (id)objectsForListAdapter:(id)adapter;
- (void)fullscreenSectionController:(id)controller willDisplayStoryModel:(id)model;
- (void)fullscreenSectionController:(id)controller didDisplayStoryModel:(id)model;
- (void)fullscreenSectionController:(id)controller willDisplayFullscreenCell:(id)cell;
- (void)fullscreenSectionController:(id)controller didUpdateFromStoryModel:(id)model toStoryModel:(id)model storyItem:(id)item;
- (void)fullscreenSectionController:(id)controller didNavFromStoryItem:(id)item toStoryItem:(id)item story:(id)story navAction:(long long)action;
- (void)fullscreenSectionController:(id)controller didTapStoryTrayViewModel:(id)model withChannelDataSource:(id)source;
- (void)fullscreenSectionController:(id)controller didStartToProgressWithStoryItem:(id)item;
- (BOOL)fullscreenSectionControllerCanResumePlayback:(id)playback;
- (void)fullscreenSectionControllerDidDismissOverlayView:(id)view;
- (BOOL)fullscreenSectionController:(id)controller shouldDisplayGestureNuxAtStoryItem:(id)item story:(id)story;
- (void)fullscreenSectionController:(id)controller didMarkItemAsSeen:(id)seen;
- (void)fullscreenSectionController:(id)controller didAdvancePastLastItemWithNavigationAction:(long long)action;
- (void)fullscreenSectionController:(id)controller didRewindPastFirstItemWithNavigationAction:(long long)action;
- (void)fullscreenSectionControllerDidTapDismiss:(id)dismiss;
- (void)fullscreenSectionControllerDidLongPress:(id)press;
- (void)fullscreenSectionControllerDidTapRetry:(id)retry;
- (void)fullscreenSectionController:(id)controller didMarkStoryViewModelAsHidden:(id)hidden showAlertMessage:(BOOL)message isCarouselPopup:(BOOL)popup;
- (void)fullscreenSectionController:(id)controller didMarkStoryItemAsHiddenAtArrayIndex:(long long)index withViewModel:(id)model showAlertMessage:(BOOL)message;
- (void)fullscreenSectionController:(id)controller didMuteWithViewModel:(id)model;
- (void)fullscreenSectionControllerDidTapEmptyStoryBadge:(id)badge;
- (void)fullscreenSectionControllerDidTapActionableInsightsTip:(id)tip;
- (void)fullscreenSectionControllerDidTapPromptStickerReshare:(id)reshare promptStickerModel:(id)model isFromParticipantList:(BOOL)list;
- (void)fullscreenSectionControllerDidTapInternalStickerReshare:(id)reshare;
- (void)fullscreenSectionControllerDidTapSharedListReshare:(id)reshare sharedList:(id)list fromStoryOverview:(BOOL)overview;
- (void)fullscreenSectionController:(id)controller didUpdateSundialModel:(id)model;
- (void)fullscreenSectionControllerDidTapGroupMentionStickerAddStory:(id)story groupMentionStickerModel:(id)model isFromUserListBottomSheet:(BOOL)sheet;
- (void)fullscreenSectionControllerDidDisplayFullscreenNux:(id)nux;
- (void)fullscreenSectionControllerDidDismissFullscreenNux:(id)nux;
- (void)fullscreenSectionControllerMediaViewDidPlayToEnd;
- (void)fullscreenSectionController:(id)controller didPublishSuggestedHighlightWithNavigationAction:(long long)action;
- (void)fullscreenSectionControllerDidEditSuggestedHighlight:(id)highlight addedItems:(id)items removedItems:(id)items title:(id)title coverModel:(id)model;
- (void)fullscreenSectionController:(id)controller didRemoveSuggestedHighlightWithPK:(id)pk;
- (void)fullscreenSectionControllerDidEndDisplaying:(id)displaying;
- (BOOL)fullscreenSectionControllerIsTransitioning:(id)transitioning;
- (void)fullscreenSectionController:(id)controller willDisplayProgressView:(id)view;
- (BOOL)fullscreenSectionControllerIsDisplayingFirstReelInInventory:(id)inventory;
- (BOOL)fullscreenSectionController:(id)controller needsInitialStickyFooterConfigurationForReelPk:(id)pk;
- (void)fullscreenSectionControllerDidMuteUser:(id)user shouldMute:(BOOL)mute selectedChangePostsMuteStatus:(BOOL)status;
- (void)fullscreenSectionControllerDidMuteFanClubStoriesTeaser;
- (void)fullscreenSectionControllerDidUnfollowUser:(id)user;
- (void)fullscreenSectionControllerDidFollowUser:(id)user;
- (void)fullscreenSectionControllerDidTapStoryCreationUpsellCreateStory:(id)story;
- (void)fullscreenSectionControllerDidTapStoryCreationUpsellProfilePicture:(id)picture;
- (void)fullscreenSectionController:(id)controller didAddSponsorPartner:(id)partner didAllowSponsorPartnerToBoost:(BOOL)boost;
- (void)fullscreenSectionController:(id)controller didRemoveSponsorPartner:(id)partner didAllowSponsorPartnerToBoost:(BOOL)boost;
- (void)fullscreenSectionController:(id)controller didReplaceSponsorPartner:(id)partner newUser:(id)user didAllowSponsorPartnerToBoost:(BOOL)boost;
- (void)fullscreenSectionController:(id)controller didAllowSponsorPartnerToBoost:(BOOL)boost withUser:(id)user;
- (void)fullscreenSectionController:(id)controller didActionOnNuxStoryItem:(id)item story:(id)story;
- (BOOL)fullscreenSectionControllerShouldPresentCamera:(id)camera;
- (void)fullscreenSectionControllerDidTapTryIt:(id)it onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)fullscreenSectionControllerDidTapViewDay:(id)day;
- (void)fullscreenSectionController:(id)controller didSetPanGestureEnabled:(BOOL)enabled;
- (void)fullscreenSectionController:(id)controller mediaViewDidSetAudioEnabled:(BOOL)enabled;
- (void)fullscreenSectionControllerShouldExecuteBloksActionOnAppear:(id)appear bloksActionOnAppear:(id /* block */)appear;
- (void)fullscreenSectionController:(id)controller willStartMediaFetchForStoryItem:(id)item;
- (void)fullscreenSectionController:(id)controller didFailMediaFetchForStoryItem:(id)item errorMessage:(id)message;
- (void)fullscreenSectionController:(id)controller didFinishMediaFetchForStoryItem:(id)item;
- (void)fullscreenSectionControllerEndFlow:(id)flow;
- (void)fullscreenSectionControlleDidTapPolaroidTryIt:(id)it;
- (void)fullscreenSectionControllerShouldDisableScrolling:(id)scrolling;
- (void)fullscreenSectionControllerShouldEnableScrolling:(id)scrolling;
- (void)fullscreenSectionControllerUpdateBrowserToState:(id)state withReason:(unsigned long long)reason;
- (void)fullscreenSectionControllerDidSyncContacts:(id)contacts;
- (BOOL)fullscreenSectionControllerShouldDisplayDuringDelayedSkipAd:(id)ad;
@end

#endif /* IGBakeoffACOStoryPairCell_h */
