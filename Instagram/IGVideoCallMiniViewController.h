//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGVideoCallMiniViewController_h
#define IGVideoCallMiniViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGMinimizableContext.h"
#include "IGMinimizedViewerFullscreenAnnouncer-Protocol.h"
#include "IGSubscriptionToken-Protocol.h"
#include "IGVideoCallBlurredAvatarView.h"
#include "IGVideoCallCaptureCoordinatorAREffectProtocol-Protocol.h"
#include "IGVideoCallManager.h"
#include "IGVideoCallMiniHeaderView.h"
#include "IGVideoCallMiniViewerOverlayView.h"
#include "IGVideoCallNavigationTracker.h"
#include "IGVideoCallSession.h"
#include "IGVideoCallUser.h"
#include "IGVideoCallVideoStreamsViewController.h"
#include "IGVideoCallViewControllable-Protocol.h"

@class IGUserSession, NSString;
@protocol IGCoWatchCoordinatorProtocol;

@interface IGVideoCallMiniViewController : IGViewController<IGVideoCallViewControllable> {
  /* instance variables */
  IGUserSession *_userSession;
  IGVideoCallUser *_currentUser;
  IGVideoCallManager *_videoCallManager;
  IGVideoCallSession *_videoCallSession;
  NSObject<IGVideoCallCaptureCoordinatorAREffectProtocol> *_captureCoordinator;
  NSObject<IGCoWatchCoordinatorProtocol> *_coWatchCoordinator;
  IGVideoCallBlurredAvatarView *_blurredAvatarView;
  IGVideoCallVideoStreamsViewController *_videoStreamsViewController;
  IGVideoCallMiniHeaderView *_headerView;
  IGMinimizableContext *_minimizableContext;
  IGVideoCallNavigationTracker *_navigationTracker;
  IGVideoCallMiniViewerOverlayView *_messageOverlayView;
  BOOL _joinRequestAccepted;
  NSObject<IGSubscriptionToken> *_callModelSubscriptionToken;
  NSObject<IGSubscriptionToken> *_participantsJoinedToken;
  NSObject<IGMinimizedViewerFullscreenAnnouncer> *_minimizedViewerFullscreenAnnouncer;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session currentUser:(id)user videoCallManager:(id)manager videoCallSession:(id)session captureCoordinator:(id)coordinator;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (void)minimizableContextDidBegin:(id)begin;
- (BOOL)minimizableContextCanMinimize;
- (BOOL)minimizableContextCanMaximize;
- (void)minimizableContextWillMaximizeWithSharedObject:(id)object;
- (void)minimizableContextWillMinimizeWithSharedObject:(id)object;
- (void)minimizableContextDidMaximizeWithSharedObject:(id)object;
- (void)minimizableContextDidMinimizeWithSharedObject:(id)object;
- (id)minimizableContextSharedObject;
- (void)didNavigateToVideoDisabledModule;
- (void)didNavigateToVideoEnabledModule;
- (void)didNavigateToViewController:(id)controller;
- (void)videoCallHeaderViewDidTapMaximizeButton:(id)button;
- (void)videoCallHeaderViewDidTapHangUpButton:(id)button;
- (void)videoCallHeaderViewDidTapMuteButton:(id)button isAudioDisabled:(BOOL)disabled;
- (void)customizeMinimizedViewAnimationStartPropertiesForState:(unsigned long long)state;
- (void)customizeMinimizedViewAnimationEndPropertiesForState:(unsigned long long)state;
- (void)customizeMinimizedViewAnimationCancelledPropertiesForState:(unsigned long long)state;
- (void)minimizedViewTappedForState:(unsigned long long)state;
- (struct CGSize { double x0; double x1; })preferredContentSizeForMinimizedViewState:(unsigned long long)state;
- (BOOL)shouldSupportMinimizedViewExpandedState;
- (void)minimizedViewSwipedToDismiss;
- (void)coWatchCoordinator:(id)coordinator willStartPlayingByActor:(id)actor tabSource:(id)source;
- (void)coWatchCoordinator:(id)coordinator didChangeMediaByActor:(id)actor mediaType:(long long)type productType:(unsigned long long)type isNewMedia:(BOOL)media isFirstMedia:(BOOL)media isLocal:(BOOL)local adminMessage:(id)message;
- (void)coWatchCoordinatorWillStopPlaying:(id)playing;
- (void)coWatchCoordinatorDidStopPlaying:(id)playing;
- (void)coWatchCoordinator:(id)coordinator didChangeDominantColors:(id)colors;
- (void)coWatchCoordinatorDidStartReporting:(id)reporting;
- (void)coWatchCoordinatorDidFinishReporting:(id)reporting;
- (void)coWatchCoordinator:(id)coordinator didTapOwner:(id)owner;
- (void)coWatchDidTapOnMedia;
- (void)customizeAnimationStartProperties;
- (void)customizeAnimationEndProperties;
- (void)customizeAnimationCancelledProperties;
- (BOOL)isShowingChrome;
- (void)showChrome;
- (void)setState:(long long)state;
- (void)transitionToError:(id)error;
- (BOOL)isMinimized;
- (void)fetchTargetEffectModel:(id)model;
- (void)toggleVideo:(BOOL)video;
- (void)displayDualButtonToast:(id)toast duration:(double)duration tapDualButtonLeftBlock:(id /* block */)block tapDualButtonRightBlock:(id /* block */)block dismissedHandler:(id /* block */)handler;
- (void)dismissToast;
- (void)setIsOnScreen:(BOOL)screen;
- (void)videoStreamsViewControllerDidTapMiniGalleryParticipants:(id)participants;
- (void)videoStreamsViewControllerDidTapEffectsButton:(id)button;
- (void)videoStreamsViewControllerDidUpdateToDominateLayout:(id)layout dominantItemOriginY:(double)y nondominantItemOriginY:(double)y;
- (void)videoStreamsViewControllerWillUpdateGrid:(id)grid;
@end

#endif /* IGVideoCallMiniViewController_h */
