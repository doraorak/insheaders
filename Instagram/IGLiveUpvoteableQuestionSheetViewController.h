//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGLiveUpvoteableQuestionSheetViewController_h
#define IGLiveUpvoteableQuestionSheetViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGGestureHandler-Protocol.h"
#include "IGListAdapterDataSource-Protocol.h"
#include "IGListAdapterUpdateListener-Protocol.h"
#include "IGLiveBroadcastLogger.h"
#include "IGLivePlaybackLoggingContext.h"
#include "IGLivePreLiveConfiguration.h"
#include "IGLiveUpvoteableQuestionSheetView.h"
#include "IGPartialModalSheetListener-Protocol.h"

@class IGListAdapter, IGUser, NSString;
@protocol IGLiveQuestionsManagerType, IGLiveUpvoteableQuestionSheetViewControllerDelegate;

@interface IGLiveUpvoteableQuestionSheetViewController : IGViewController<IGListAdapterDataSource, IGListAdapterUpdateListener, IGGestureHandler, IGPartialModalSheetListener> {
  /* instance variables */
  IGLiveUpvoteableQuestionSheetView *_questionSheetView;
  NSObject<IGLiveQuestionsManagerType> *_liveQuestionsManager;
  IGListAdapter *_listAdapter;
  unsigned long long _entryPoint;
  NSString *_broadcasterUsername;
  NSString *_broadcastId;
  IGLivePreLiveConfiguration *_preLiveConfiguration;
  long long _maxLikeCount;
  IGUser *_user;
  BOOL _loading;
  IGLiveBroadcastLogger *_broadcastLogger;
  IGLivePlaybackLoggingContext *_playbackLoggingContext;
}

@property (weak, nonatomic) NSObject<IGLiveUpvoteableQuestionSheetViewControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithLiveQuestionsManager:(id)manager entryPoint:(unsigned long long)point broadcastId:(id)id preLiveConfiguration:(id)configuration broadcasterUsername:(id)username user:(id)user broadcastLogger:(id)logger playbackLoggingContext:(id)context;
- (void)loadView;
- (void)viewDidLoad;
- (id)objectsForListAdapter:(id)adapter;
- (id)listAdapter:(id)adapter sectionControllerForObject:(id)object;
- (id)emptyViewForListAdapter:(id)adapter;
- (void)listAdapter:(id)adapter didFinishUpdate:(long long)update animated:(BOOL)animated;
- (void)liveQuestionsManagerDidFetchNewQuestions:(id)questions;
- (void)liveUpvoteableQuestionControllerDidSelectQuestion:(id)question atIndex:(long long)index;
- (void)liveUpvoteableQuestionControllerDidSetQuestionPk:(id)pk questionText:(id)text questionSource:(long long)source atIndex:(long long)index asLiked:(BOOL)liked;
- (void)liveUpvoteableQuestionControllerDidDeleteQuestion:(id)question withQuestionText:(id)text questionSource:(long long)source;
- (void)liveUpvoteableQuestionControllerDidReportQuestion:(id)question;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (BOOL)canRespondToGesture:(id)gesture;
- (void)upvoteableQuestionSheetView:(id)view submitQuestion:(id)question;
- (void)upvoteableQuestionSheetViewAskQuestionButtonTapped:(id)tapped;
- (void)upvoteableSubmitQuestionController:(id)controller didSubmitQuestion:(id)question;
- (void)upvoteableSubmitQuestionControllerAskQuestionButtonTapped:(id)tapped;
- (void)markQuestionReported:(id)reported;
@end

#endif /* IGLiveUpvoteableQuestionSheetViewController_h */
