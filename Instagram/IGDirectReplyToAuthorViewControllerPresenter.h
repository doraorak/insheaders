//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGDirectReplyToAuthorViewControllerPresenter_h
#define IGDirectReplyToAuthorViewControllerPresenter_h
@import Foundation;

#include "IGAdsProductPageLogger.h"
#include "IGContentNotesActionHandler.h"
#include "IGDirectReplyToAuthorInteractionDelegate-Protocol.h"
#include "IGDirectReplyToAuthorSendDelegate-Protocol.h"
#include "IGDirectReplyToAuthorViewController.h"
#include "IGDirectReplyToAuthorViewControllerPresenting-Protocol.h"
#include "IGUserAvatarStatusListener-Protocol.h"

@class IGContentNotesDefaultLoggingInfo, IGDirectMessageModalShareContent, IGDirectThreadService, IGShoppingConsumptionAnalyticsContext, IGShoppingConsumptionFeedItemLogger, IGUser, IGUserSession, NSArray, NSString, UIViewController;

@interface IGDirectReplyToAuthorViewControllerPresenter : NSObject<IGUserAvatarStatusListener, IGDirectReplyToAuthorViewControllerPresenting> {
  /* instance variables */
  IGUserSession *_userSession;
  IGDirectThreadService *_threadService;
  IGDirectMessageModalShareContent *_shareContent;
  NSString *_analyticsModule;
  IGShoppingConsumptionFeedItemLogger *_shoppingLogger;
  IGShoppingConsumptionAnalyticsContext *_consumptionLoggingInfo;
  IGAdsProductPageLogger *_appLogger;
  long long _source;
  IGDirectReplyToAuthorViewController *_replyToAuthorViewController;
  IGUser *_replyToUser;
  NSArray *_replyToGroupUsers;
  UIViewController *_sourceViewController;
  long long _directReplyPostDismissalAction;
  id /* block */ _willDismissBlock;
  id /* block */ _dismissBlock;
  long long _enableTappableProfilePictureToSurface;
  BOOL _didCreateAvatarFromReplyHeaderCTA;
  id /* block */ _notesInteractionDismissBlock;
  IGContentNotesActionHandler *_contentNotesActionHandler;
  id /* block */ _dismissCompletionHandler;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<IGDirectReplyToAuthorInteractionDelegate> *interactionDelegate;
@property (weak, nonatomic) NSObject<IGDirectReplyToAuthorSendDelegate> *sendDelegate;
@property (weak, nonatomic) IGContentNotesDefaultLoggingInfo *contentNotesDefaultLoggingInfo;

/* instance methods */
- (id)initWithUserSession:(id)session analyticsModule:(id)module shoppingLogger:(id)logger consumptionLoggingInfo:(id)info appLogger:(id)logger;
- (void)presentReplyToAuthorViewControllerWithShareContent:(id)content onTopOfSourceViewController:(id)controller replyToUser:(id)user storyRingViewSpec:(id)spec accessoryViews:(id)views source:(long long)source animateThreadPresentationIfDesired:(BOOL)desired willDismissBlock:(id /* block */)block dismissBlock:(id /* block */)block enableTappableProfilePictureToSurface:(long long)surface showStoryLikeBadge:(BOOL)badge disableTitleTapAction:(BOOL)action disableTextInputAndReplies:(BOOL)replies privacyDisclosureText:(id)text noteItemLoggingModel:(id)model clickToMessagingAdsInfo:(id)info socialContextLoggingInfo:(id)info shouldSuppressNotesActivationAnimation:(BOOL)animation;
- (void)presentReplyToAuthorViewControllerWithShareContent:(id)content onTopOfSourceViewController:(id)controller replyToGroupUsers:(id)users accessoryViews:(id)views source:(long long)source animateThreadPresentationIfDesired:(BOOL)desired;
- (void)presentReplyToAuthorViewControllerWithShareContent:(id)content onTopOfSourceViewController:(id)controller replyToUser:(id)user storyRingViewSpec:(id)spec avatarDotViewSpec:(id)spec accessoryViews:(id)views source:(long long)source animateThreadPresentationIfDesired:(BOOL)desired willDismissBlock:(id /* block */)block dismissBlock:(id /* block */)block enableTappableProfilePictureToSurface:(long long)surface showStoryLikeBadge:(BOOL)badge disableTitleTapAction:(BOOL)action noteItemLoggingModel:(id)model clickToMessagingAdsInfo:(id)info socialContextLoggingInfo:(id)info;
- (void)presentReplyToAuthorViewControllerWithShareContent:(id)content onTopOfSourceViewController:(id)controller replyToUser:(id)user storyRingViewSpec:(id)spec avatarDotViewSpec:(id)spec accessoryViews:(id)views source:(long long)source animateThreadPresentationIfDesired:(BOOL)desired willDismissBlock:(id /* block */)block dismissBlock:(id /* block */)block enableTappableProfilePictureToSurface:(long long)surface showStoryLikeBadge:(BOOL)badge disableTitleTapAction:(BOOL)action disableTextInputAndReplies:(BOOL)replies privacyDisclosureText:(id)text noteItemLoggingModel:(id)model clickToMessagingAdsInfo:(id)info clickToMessagingAdId:(id)id socialContextLoggingInfo:(id)info shouldSuppressNotesActivationAnimation:(BOOL)animation;
- (void)dismissReplyToAuthorViewControllerWithCompletion:(id /* block */)completion;
- (void)replyToAuthorViewControllerWillDismiss:(id)dismiss;
- (void)replyToAuthorViewControllerDidTapTitleOrSubtitle:(id)subtitle;
- (void)replyToAuthorViewControllerDidTapAvatar:(id)avatar fromViewForAnimation:(id)animation profilePictureView:(id)view noteModel:(id)model notePosition:(long long)position;
- (void)replyToAuthorViewControllerDidTapSendButton:(id)button text:(id)text;
- (void)replyToAuthorViewControllerDidDismiss:(id)dismiss replyToGroupUsers:(id)users threadKey:(id)key sentConfirmationType:(long long)type noteItemLoggingModel:(id)model;
- (void)replyToAuthorViewControllerDidTapLink:(id)link link:(id)link;
- (void)replyToAuthorViewController:(id)controller didTapLocationWithViewModel:(id)model;
- (void)replyToAuthorViewController:(id)controller didTapNotesActionMenuButtonWithViewModel:(id)model;
- (void)replyToAuthorViewController:(id)controller didTapContentNoteActionMenuButtonWithContentNoteModel:(id)model mediaId:(id)id;
- (void)replyToAuthorViewController:(id)controller mediaId:(id)id;
- (void)replyToAuthorViewController:(id)controller didTapProfileNoteActionMenuButtonWithNoteModel:(id)model;
- (void)replyToAuthorViewControllerDidSendStickerReply:(id)reply replyToUser:(id)user noteItemLoggingModel:(id)model;
- (void)replyToAuthorViewController:(id)controller didTapEmojiReaction:(id)reaction noteModel:(id)model isFromDeepLink:(BOOL)link;
- (void)replyToAuthorViewControllerDidTapBirthdaySettings:(id)settings;
- (void)avatarStatusManager:(id)manager didUpdateAvatarStatus:(long long)status;
- (void)avatarStatusManagerDidCreateAvatar:(id)avatar;
- (void)avatarStatusManagerDidDeleteAvatar:(id)avatar;
- (void)avatarStatusManagerDidUpdateAvatar:(id)avatar;
@end

#endif /* IGDirectReplyToAuthorViewControllerPresenter_h */
