//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGPhotoEditorViewController_h
#define IGPhotoEditorViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGEditorAssetLoadingView.h"
#include "IGEditorTrayAccessibilityElement.h"
#include "IGFBFilterCollectionController.h"
#include "IGFBFilterCollectionControllerDelegate-Protocol.h"
#include "IGFBFilterTabCollectionController.h"
#include "IGFeedCreationFlowLogger.h"
#include "IGFeedEditorNavigationPerfComponents.h"
#include "IGFeedSuggestedMusicPillController.h"
#include "IGFeedSuggestedMusicPillControllerDelegate-Protocol.h"
#include "IGFilterControlView.h"
#include "IGFilterControlViewDelegate-Protocol.h"
#include "IGFilterLogger.h"
#include "IGMediaLibraryViewControllerDelegate-Protocol.h"
#include "IGMiniMediaItemPicker.h"
#include "IGMiniMediaItemPickerDelegate-Protocol.h"
#include "IGPhotoTransformController-Protocol.h"
#include "IGScopedListener-Protocol.h"
#include "IGShareMusicManager.h"
#include "IGTiltShiftGestureController.h"
#include "IGTransitionZoomToCapable-Protocol.h"
#include "UICollectionViewDataSource-Protocol.h"
#include "UICollectionViewDelegate-Protocol.h"
#include "UICollectionViewDelegateFlowLayout-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class IGAsyncTask, IGAudioMultiThumbnailView, IGCameraGuideView, IGComposition, IGCreationActionBar, IGCreationPostCaptureHeaderView, IGMediaMetadata, IGPasteAlertController, IGShareListManager, IGStoryMediaCompositionStickerCreationController, IGStoryStickerDataSource, IGStoryStickerGestureController, IGUserSession, NSDictionary, NSHashTable, NSMutableDictionary, NSString, UIButton, UICollectionView, UIImage, UILongPressGestureRecognizer, UIView;
@protocol IGFeedGalleryAssetFetchRequest, IGPhotoEditorDelegate, IGPhotoEditorNavigationDelegate, UIView<IGFeedCompositionMediaView><IGFeedMediaLayeringView, UIViewController<IGStoryStickerEditingViewControllerProtocol;

@interface IGPhotoEditorViewController : IGViewController<UIGestureRecognizerDelegate, UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, IGFBFilterCollectionControllerDelegate, IGFilterControlViewDelegate, IGMediaLibraryViewControllerDelegate, IGMiniMediaItemPickerDelegate, IGTransitionZoomToCapable, IGFeedSuggestedMusicPillControllerDelegate, IGScopedListener> {
  /* instance variables */
  long long _mediaOrigin;
  UIView *_editContainerLeftMask;
  UIView *_editContainerRightMask;
  BOOL _needsRender;
  double _originalCropAspectRatio;
  NSObject<IGFeedGalleryAssetFetchRequest> *_galleryFetchRequest;
  IGEditorAssetLoadingView *_assetLoadingView;
  IGEditorTrayAccessibilityElement *_collectionAccessibilityElement;
  long long _filterTrayCurrentIndex;
  long long _toolsTrayCurrentIndex;
  IGFeedEditorNavigationPerfComponents *_perfComponents;
  IGComposition *_composition;
  IGShareMusicManager *_musicManager;
  IGFeedSuggestedMusicPillController *_suggestedMusicPillController;
  IGCreationActionBar *_actionBar;
  IGFilterLogger *_filterLogger;
  IGCreationPostCaptureHeaderView *_headerView;
  double _adjustInitialCropScale;
  struct CGPoint { double x; double y; } _adjustInitialCropCenter;
  IGMiniMediaItemPicker *_suggestedMusicPicker;
  IGCreationActionBar *_filterCollectionViewConfirmationTray;
  BOOL _allowCropGestures;
  NSString *_previouslySelectedFilterIdentifier;
  double _previouslySelectedFilterStrength;
  BOOL _luxHasBeenEdited;
  BOOL _readyToProceed;
  BOOL _didReceiveFullSizedBuffer;
  BOOL _didReorderTray;
  BOOL _hasCancelledShareVC;
  BOOL _cropEnabled;
  BOOL _shouldRenderOverlayImage;
  UIView *_editContainerView;
  IGAudioMultiThumbnailView *_albumArtView;
  NSObject<IGPhotoTransformController> *_photoTransformController;
  IGCameraGuideView *_cropGridView;
  IGAsyncTask *_renderImageTask;
  IGShareListManager *_shareListManager;
  NSMutableDictionary *_adjustedFilterStrengthValues;
  UIView *_cropLetterBoxViewOne;
  UIView *_cropLetterBoxViewTwo;
  UILongPressGestureRecognizer *_showUneditedGestureRecognizer;
  UIView *_toolContainerView;
  UICollectionView *_filterCollectionView;
  IGFBFilterCollectionController *_fbFilterTrayController;
  IGFBFilterTabCollectionController *_fbFilterTabController;
  UICollectionView *_toolCollectionView;
  IGFilterControlView *_luxControlView;
  IGFilterControlView *_filterControlView;
  IGTiltShiftGestureController *_tiltShiftController;
  IGAsyncTask *_saveMediaLayersDraftTask;
  UIImage *_eyedropperColorImage;
  IGPasteAlertController *_pasteAlertController;
  UIViewController<IGStoryStickerEditingViewControllerProtocol> *_presentedStickerEditingViewController;
}

@property (nonatomic) BOOL luxEnabled;
@property (nonatomic) unsigned long long tiltShiftMode;
@property (retain, nonatomic) IGMediaMetadata *mediaMetadata;
@property (readonly, nonatomic) UIButton *musicButton;
@property (nonatomic) double orientationAngle;
@property (nonatomic) struct CGPoint { double x0; double x1; } cropCenter;
@property (nonatomic) double cropZoomScale;
@property (nonatomic) double perspectiveXRotateAngle;
@property (nonatomic) double perspectiveYRotateAngle;
@property (nonatomic) double perspectiveZRotateAngle;
@property (readonly, nonatomic) UIView<IGFeedCompositionMediaView><IGFeedMediaLayeringView> *mediaCompositionView;
@property (nonatomic) struct CGSize { double x0; double x1; } maxTextureSize;
@property (retain, nonatomic) UIImage *originalImage;
@property (readonly, nonatomic) IGUserSession *userSession;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRect;
@property (readonly, nonatomic) IGStoryStickerDataSource *stickerTrayDataSource;
@property (readonly, nonatomic) IGStoryMediaCompositionStickerCreationController *stickerController;
@property (readonly, nonatomic) IGStoryStickerGestureController *stickerGestureController;
@property (readonly, nonatomic) BOOL textStickerEnabled;
@property (readonly, nonatomic) BOOL galleryStickerEnabled;
@property (readonly, nonatomic) BOOL staticStickerEnabled;
@property (readonly, nonatomic) BOOL mediaLayeringEnabled;
@property (readonly, nonatomic) BOOL doNotUseContentImageForTransforms;
@property (retain, nonatomic) NSHashTable *lockedStickers;
@property (weak, nonatomic) NSObject<IGPhotoEditorDelegate> *delegate;
@property (weak, nonatomic) NSObject<IGPhotoEditorNavigationDelegate> *navigationDelegate;
@property (readonly, nonatomic) IGFeedCreationFlowLogger *logger;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSDictionary *magicMoveSubviews;

/* instance methods */
- (void)dealloc;
- (id)initForImageFromCameraWithMediaMetadata:(id)metadata shareListManager:(id)manager userSession:(id)session logger:(id)logger;
- (id)initWithMediaMetadata:(id)metadata composition:(id)composition originalImage:(id)image cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect cropEnabled:(BOOL)enabled mediaOrigin:(long long)origin shareListManager:(id)manager userSession:(id)session logger:(id)logger;
- (id)initWithGalleryFetchRequest:(id)request previewImage:(id)image mediaOrigin:(long long)origin userSession:(id)session logger:(id)logger;
- (BOOL)prefersStatusBarHidden;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)_updateSuggestedMusicPickerWithSelectedAudio:(id)audio;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)_updateDebugComposition;
- (void)viewDidLayoutSubviews;
- (void)galleryAssetFetchRequest:(id)request didFailWithError:(id)error;
- (void)galleryAssetFetchRequest:(id)request didUpdateProgress:(double)progress;
- (void)galleryAssetFetchRequest:(id)request didFetchMediaMetadata:(id)metadata;
- (BOOL)_adjustToolShowing;
- (void)_updateContentTransformIfNeeded;
- (id)_createMusicManager;
- (void)_buildMusicPickerTray;
- (long long)collectionView:(id)view numberOfItemsInSection:(long long)section;
- (struct CGSize { double x0; double x1; })collectionView:(id)view layout:(id)layout sizeForItemAtIndexPath:(id)path;
- (id)collectionView:(id)view cellForItemAtIndexPath:(id)path;
- (void)collectionView:(id)view didSelectItemAtIndexPath:(id)path;
- (void)_musicButtonTapped;
- (void)_textButtonTapped;
- (void)_galleryStickerButtonTapped;
- (void)_stickerButtonTapped;
- (void)_onRotateTap;
- (void)filterControlView:(id)view didChangeValue:(double)value;
- (void)filterControlViewDidPressCancel:(id)cancel;
- (void)filterControlViewDidPressDone:(id)done;
- (void)filterControlViewDidStartDragging:(id)dragging;
- (void)filterControlViewDidEndDragging:(id)dragging;
- (void)filterControlViewNeedUpdateValue;
- (void)filterControlView:(id)view didChangeTintColor:(unsigned long long)color withTintType:(unsigned long long)type;
- (void)filterControlView:(id)view didChangeTintIntensity:(double)intensity tintType:(unsigned long long)type;
- (void)_gestureShowUnedited:(id)unedited;
- (void)_handleUneditedPressBegan:(BOOL)began;
- (BOOL)newOrOldMediaLayeringEnabled;
- (void)_cancel;
- (void)_done;
- (void)_updateMediaMetadataWithMMCKEditsWithCompletion:(id /* block */)completion;
- (void)zoomTransitionWillPrepareWithContext:(id)context;
- (void)zoomTransitionWillBeginWithContext:(id)context;
- (BOOL)shouldZoomToTransition;
- (id)transitionZoomViewToItem:(id)item withZoomContext:(id)context;
- (id)transitionZoomItemOverrideOnExit;
- (void)didCompleteForwardZoomTransition;
- (void)prepareForwardZoomTransitionWithContext:(id)context completionHandler:(id /* block */)handler;
- (void)fbFilterControllerWillGenerateFilterPreview:(id)preview;
- (void)fbFilterControllerDidGenerateFilterPreview:(id)preview;
- (void)fbFilterController:(id)controller didSelectFilterStrengthForIdentifier:(id)identifier;
- (void)fbFilterController:(id)controller didSelectFilterWithIdentifier:(id)identifier willScroll:(BOOL)scroll;
- (void)fbFilterControllerDidStartReordering:(id)reordering;
- (void)shareViewControllerDidAppear:(id)appear;
- (void)shareViewControllerDidCancel:(id)cancel;
- (void)shareViewControllerWillFinish:(id)finish;
- (void)shareViewControllerDidFinish:(id)finish withCompletion:(id /* block */)completion;
- (void)_updateGridViewScale;
- (BOOL)accessibilityPerformEscape;
- (void)shareMusicManagerDidFetchSuggestedAudioTitles:(id)titles;
- (void)shareMusicManagerDidSelectAudio:(id)audio audioStatusChanged:(BOOL)changed;
- (void)shareMusicManagerWillDismissBrowser:(id)browser;
- (void)shareMusicManagerDidCancelSelectingAudio:(id)audio;
- (void)shareMusicManagerDidRemoveSelectedAudio:(id)audio;
- (void)shareMusicManagerWillPresentAudioEditor:(id)editor;
- (void)shareMusicManagerDidDismissAudioEditor:(id)editor;
- (void)igFeedDraftManagerWillSaveDraft:(id)draft;
- (void)igFeedDraftManagerDidSaveDraft:(id)draft;
- (void)igFeedDraftManagerDidFailToSaveDraftWithError:(id)error;
- (void)igFeedDraftManagerDidDeleteDraft:(id)draft;
- (long long)preferredTabBarBehavior;
- (void)mediaLibraryViewControllerDidCancel:(id)cancel;
- (void)mediaLibraryViewController:(id)controller didProduceComposition:(id)composition;
- (void)mediaLibraryViewController:(id)controller didProduceSingleLivePhotoVideoMetadata:(id)metadata;
- (id)_defaultCreationBottomTray;
- (void)_editButtonTapped:(id)tapped;
- (void)_doneButtonTapped:(id)tapped;
- (void)_luxButtonTapped;
- (void)_previewButtonTapped;
- (void)_filtersButtonTapped;
- (void)_cancelAndDismissFiltersCollectionTray;
- (void)_confirmAndDismissFiltersCollectionTray;
- (void)_setFiltersCollectionVisible:(BOOL)visible;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)suggestedMediaItemPicker:(id)picker didUpdateLoadingState:(BOOL)state;
- (void)suggestedMediaItemPicker:(id)picker didUpdateSelectedMediaItem:(id)item;
- (void)suggestedMediaItemPicker:(id)picker didTapCurrentlySelectedMediaItem:(id)item;
- (void)suggestedMediaItemPicker:(id)picker willDisplayMediaItem:(id)item;
- (void)suggestedMediaItemPickerDidTapSearchButton:(id)button;
- (void)_showAudioTrayNuxesIfNeeded;
- (void)suggestedMusicPillController:(id)controller didTapOnPillWithAudio:(id)audio;
@end

#endif /* IGPhotoEditorViewController_h */
