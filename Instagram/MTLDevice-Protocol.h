//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MTLDevice_Protocol_h
#define MTLDevice_Protocol_h
@import Foundation;

@protocol MTLDevice <NSObject>

@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) unsigned long long registryID;
@property (nonatomic, readonly) MTLArchitecture *architecture;
@property (nonatomic, readonly) struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } maxThreadsPerThreadgroup;
@property (nonatomic, readonly) BOOL lowPower;
@property (nonatomic, readonly) BOOL lowPower;
@property (nonatomic, readonly) BOOL headless;
@property (nonatomic, readonly) BOOL headless;
@property (nonatomic, readonly) BOOL removable;
@property (nonatomic, readonly) BOOL removable;
@property (nonatomic, readonly) BOOL hasUnifiedMemory;
@property (nonatomic, readonly) unsigned long long recommendedMaxWorkingSetSize;
@property (nonatomic, readonly) BOOL depth24Stencil8PixelFormatSupported;
@property (nonatomic, readonly) BOOL depth24Stencil8PixelFormatSupported;
@property (nonatomic, readonly) unsigned long long readWriteTextureSupport;
@property (nonatomic, readonly) unsigned long long argumentBuffersSupport;
@property (nonatomic, readonly) BOOL rasterOrderGroupsSupported;
@property (nonatomic, readonly) BOOL rasterOrderGroupsSupported;
@property (nonatomic, readonly) BOOL supports32BitFloatFiltering;
@property (nonatomic, readonly) BOOL supports32BitMSAA;
@property (nonatomic, readonly) BOOL supportsQueryTextureLOD;
@property (nonatomic, readonly) BOOL supportsBCTextureCompression;
@property (nonatomic, readonly) BOOL supportsPullModelInterpolation;
@property (nonatomic, readonly) BOOL barycentricCoordsSupported;
@property (nonatomic, readonly) BOOL barycentricCoordsSupported;
@property (nonatomic, readonly) BOOL supportsShaderBarycentricCoordinates;
@property (nonatomic, readonly) long long currentAllocatedSize;
@property (nonatomic, readonly) long long maxThreadgroupMemoryLength;
@property (nonatomic, readonly) long long maxArgumentBufferSamplerCount;
@property (nonatomic, readonly) BOOL programmableSamplePositionsSupported;
@property (nonatomic, readonly) BOOL programmableSamplePositionsSupported;
@property (nonatomic, readonly) long long sparseTileSizeInBytes;
@property (nonatomic, readonly) long long maxBufferLength;
@property (nonatomic, readonly) NSArray *counterSets;
@property (nonatomic, readonly) BOOL supportsDynamicLibraries;
@property (nonatomic, readonly) BOOL supportsRenderDynamicLibraries;
@property (nonatomic, readonly) BOOL supportsRaytracing;
@property (nonatomic, readonly) BOOL supportsFunctionPointers;
@property (nonatomic, readonly) BOOL supportsFunctionPointersFromRender;
@property (nonatomic, readonly) BOOL supportsRaytracingFromRender;
@property (nonatomic, readonly) BOOL supportsPrimitiveMotionBlur;

/* instance methods */
- (BOOL)isLowPower;
- (BOOL)isLowPower;
- (BOOL)isHeadless;
- (BOOL)isHeadless;
- (BOOL)isRemovable;
- (BOOL)isRemovable;
- (BOOL)isDepth24Stencil8PixelFormatSupported;
- (BOOL)isDepth24Stencil8PixelFormatSupported;
- (BOOL)areRasterOrderGroupsSupported;
- (BOOL)areRasterOrderGroupsSupported;
- (BOOL)areBarycentricCoordsSupported;
- (BOOL)areBarycentricCoordsSupported;
- (id)newCommandQueue;
- (id)newCommandQueue;
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)count;
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)count;
- (struct { unsigned long long x0; unsigned long long x1; })heapTextureSizeAndAlignWithDescriptor:(id)descriptor;
- (struct { unsigned long long x0; unsigned long long x1; })heapTextureSizeAndAlignWithDescriptor:(id)descriptor;
- (struct { unsigned long long x0; unsigned long long x1; })heapBufferSizeAndAlignWithLength:(unsigned long long)length options:(unsigned long long)options;
- (struct { unsigned long long x0; unsigned long long x1; })heapBufferSizeAndAlignWithLength:(unsigned long long)length options:(unsigned long long)options;
- (id)newHeapWithDescriptor:(id)descriptor;
- (id)newHeapWithDescriptor:(id)descriptor;
- (id)newBufferWithLength:(unsigned long long)length options:(unsigned long long)options;
- (id)newBufferWithLength:(unsigned long long)length options:(unsigned long long)options;
- (id)newBufferWithBytes:(const void *)bytes length:(unsigned long long)length options:(unsigned long long)options;
- (id)newBufferWithBytes:(const void *)bytes length:(unsigned long long)length options:(unsigned long long)options;
- (id)newBufferWithBytesNoCopy:(void *)copy length:(unsigned long long)length options:(unsigned long long)options deallocator:(id /* block */)deallocator;
- (id)newBufferWithBytesNoCopy:(void *)copy length:(unsigned long long)length options:(unsigned long long)options deallocator:(id /* block */)deallocator;
- (id)newDepthStencilStateWithDescriptor:(id)descriptor;
- (id)newDepthStencilStateWithDescriptor:(id)descriptor;
- (id)newTextureWithDescriptor:(id)descriptor;
- (id)newTextureWithDescriptor:(id)descriptor;
- (id)newTextureWithDescriptor:(id)descriptor iosurface:(struct __IOSurface *)iosurface plane:(unsigned long long)plane;
- (id)newTextureWithDescriptor:(id)descriptor iosurface:(struct __IOSurface *)iosurface plane:(unsigned long long)plane;
- (id)newSharedTextureWithDescriptor:(id)descriptor;
- (id)newSharedTextureWithDescriptor:(id)descriptor;
- (id)newSharedTextureWithHandle:(id)handle;
- (id)newSharedTextureWithHandle:(id)handle;
- (id)newSamplerStateWithDescriptor:(id)descriptor;
- (id)newSamplerStateWithDescriptor:(id)descriptor;
- (id)newDefaultLibrary;
- (id)newDefaultLibrary;
- (id)newDefaultLibraryWithBundle:(id)bundle error:(id *)error;
- (id)newDefaultLibraryWithBundle:(id)bundle error:(id *)error;
- (id)newLibraryWithFile:(id)file error:(id *)error;
- (id)newLibraryWithFile:(id)file error:(id *)error;
- (id)newLibraryWithURL:(id)url error:(id *)error;
- (id)newLibraryWithURL:(id)url error:(id *)error;
- (id)newLibraryWithData:(id)data error:(id *)error;
- (id)newLibraryWithData:(id)data error:(id *)error;
- (id)newLibraryWithSource:(id)source options:(id)options error:(id *)error;
- (id)newLibraryWithSource:(id)source options:(id)options error:(id *)error;
- (void)newLibraryWithSource:(id)source options:(id)options completionHandler:(id /* block */)handler;
- (void)newLibraryWithSource:(id)source options:(id)options completionHandler:(id /* block */)handler;
- (id)newLibraryWithStitchedDescriptor:(id)descriptor error:(id *)error;
- (id)newLibraryWithStitchedDescriptor:(id)descriptor error:(id *)error;
- (void)newLibraryWithStitchedDescriptor:(id)descriptor completionHandler:(id /* block */)handler;
- (void)newLibraryWithStitchedDescriptor:(id)descriptor completionHandler:(id /* block */)handler;
- (id)newRenderPipelineStateWithDescriptor:(id)descriptor error:(id *)error;
- (id)newRenderPipelineStateWithDescriptor:(id)descriptor error:(id *)error;
- (id)newRenderPipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (id)newRenderPipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (void)newRenderPipelineStateWithDescriptor:(id)descriptor completionHandler:(id /* block */)handler;
- (void)newRenderPipelineStateWithDescriptor:(id)descriptor completionHandler:(id /* block */)handler;
- (void)newRenderPipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (void)newRenderPipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (id)newComputePipelineStateWithFunction:(id)function error:(id *)error;
- (id)newComputePipelineStateWithFunction:(id)function error:(id *)error;
- (id)newComputePipelineStateWithFunction:(id)function options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (id)newComputePipelineStateWithFunction:(id)function options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (void)newComputePipelineStateWithFunction:(id)function completionHandler:(id /* block */)handler;
- (void)newComputePipelineStateWithFunction:(id)function completionHandler:(id /* block */)handler;
- (void)newComputePipelineStateWithFunction:(id)function options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (void)newComputePipelineStateWithFunction:(id)function options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (id)newComputePipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (id)newComputePipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (void)newComputePipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (void)newComputePipelineStateWithDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (id)newFence;
- (id)newFence;
- (BOOL)supportsFeatureSet:(unsigned long long)set;
- (BOOL)supportsFamily:(long long)family;
- (BOOL)supportsTextureSampleCount:(unsigned long long)count;
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)format;
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)format;
- (unsigned long long)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)format;
- (unsigned long long)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)format;
- (id)newRenderPipelineStateWithTileDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (id)newRenderPipelineStateWithTileDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (void)newRenderPipelineStateWithTileDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (void)newRenderPipelineStateWithTileDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (id)newRenderPipelineStateWithMeshDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (id)newRenderPipelineStateWithMeshDescriptor:(id)descriptor options:(unsigned long long)options reflection:(id *)reflection error:(id *)error;
- (void)newRenderPipelineStateWithMeshDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (void)newRenderPipelineStateWithMeshDescriptor:(id)descriptor options:(unsigned long long)options completionHandler:(id /* block */)handler;
- (BOOL)areProgrammableSamplePositionsSupported;
- (BOOL)areProgrammableSamplePositionsSupported;
- (void)getDefaultSamplePositions:(struct { float x0; float x1; } *)positions count:(unsigned long long)count;
- (id)newArgumentEncoderWithArguments:(id)arguments;
- (id)newArgumentEncoderWithArguments:(id)arguments;
- (BOOL)supportsRasterizationRateMapWithLayerCount:(unsigned long long)count;
- (BOOL)supportsRasterizationRateMapWithLayerCount:(unsigned long long)count;
- (id)newRasterizationRateMapWithDescriptor:(id)descriptor;
- (id)newRasterizationRateMapWithDescriptor:(id)descriptor;
- (id)newIndirectCommandBufferWithDescriptor:(id)descriptor maxCommandCount:(unsigned long long)count options:(unsigned long long)options;
- (id)newIndirectCommandBufferWithDescriptor:(id)descriptor maxCommandCount:(unsigned long long)count options:(unsigned long long)options;
- (id)newEvent;
- (id)newEvent;
- (id)newSharedEvent;
- (id)newSharedEvent;
- (id)newSharedEventWithHandle:(id)handle;
- (id)newSharedEventWithHandle:(id)handle;
- (id)newIOHandleWithURL:(id)url error:(id *)error;
- (id)newIOHandleWithURL:(id)url error:(id *)error;
- (id)newIOCommandQueueWithDescriptor:(id)descriptor error:(id *)error;
- (id)newIOCommandQueueWithDescriptor:(id)descriptor error:(id *)error;
- (id)newIOHandleWithURL:(id)url compressionMethod:(long long)method error:(id *)error;
- (id)newIOHandleWithURL:(id)url compressionMethod:(long long)method error:(id *)error;
- (id)newIOFileHandleWithURL:(id)url error:(id *)error;
- (id)newIOFileHandleWithURL:(id)url error:(id *)error;
- (id)newIOFileHandleWithURL:(id)url compressionMethod:(long long)method error:(id *)error;
- (id)newIOFileHandleWithURL:(id)url compressionMethod:(long long)method error:(id *)error;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })sparseTileSizeWithTextureType:(unsigned long long)type pixelFormat:(unsigned long long)format sampleCount:(unsigned long long)count;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })sparseTileSizeWithTextureType:(unsigned long long)type pixelFormat:(unsigned long long)format sampleCount:(unsigned long long)count;
- (unsigned long long)sparseTileSizeInBytesForSparsePageSize:(long long)size;
- (unsigned long long)sparseTileSizeInBytesForSparsePageSize:(long long)size;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })sparseTileSizeWithTextureType:(unsigned long long)type pixelFormat:(unsigned long long)format sampleCount:(unsigned long long)count sparsePageSize:(long long)size;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })sparseTileSizeWithTextureType:(unsigned long long)type pixelFormat:(unsigned long long)format sampleCount:(unsigned long long)count sparsePageSize:(long long)size;
- (id)newCounterSampleBufferWithDescriptor:(id)descriptor error:(id *)error;
- (id)newCounterSampleBufferWithDescriptor:(id)descriptor error:(id *)error;
- (void)sampleTimestamps:(unsigned long long *)timestamps gpuTimestamp:(unsigned long long *)timestamp;
- (id)newArgumentEncoderWithBufferBinding:(id)binding;
- (id)newArgumentEncoderWithBufferBinding:(id)binding;
- (BOOL)supportsCounterSampling:(unsigned long long)sampling;
- (BOOL)supportsVertexAmplificationCount:(unsigned long long)count;
- (id)newDynamicLibrary:(id)library error:(id *)error;
- (id)newDynamicLibrary:(id)library error:(id *)error;
- (id)newDynamicLibraryWithURL:(id)url error:(id *)error;
- (id)newDynamicLibraryWithURL:(id)url error:(id *)error;
- (id)newBinaryArchiveWithDescriptor:(id)descriptor error:(id *)error;
- (id)newBinaryArchiveWithDescriptor:(id)descriptor error:(id *)error;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })accelerationStructureSizesWithDescriptor:(id)descriptor;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })accelerationStructureSizesWithDescriptor:(id)descriptor;
- (id)newAccelerationStructureWithSize:(unsigned long long)size;
- (id)newAccelerationStructureWithSize:(unsigned long long)size;
- (id)newAccelerationStructureWithDescriptor:(id)descriptor;
- (id)newAccelerationStructureWithDescriptor:(id)descriptor;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithSize:(unsigned long long)size;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithSize:(unsigned long long)size;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithDescriptor:(id)descriptor;
- (struct { unsigned long long x0; unsigned long long x1; })heapAccelerationStructureSizeAndAlignWithDescriptor:(id)descriptor;
@optional
/* instance methods */
- (void)convertSparsePixelRegions:(const struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)regions toTileRegions:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)regions withTileSize:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })size alignmentMode:(unsigned long long)mode numRegions:(unsigned long long)regions;
- (void)convertSparseTileRegions:(const struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)regions toPixelRegions:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; } *)regions withTileSize:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })size numRegions:(unsigned long long)regions;
@end

#endif /* MTLDevice_Protocol_h */
