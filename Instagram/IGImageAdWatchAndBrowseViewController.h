//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGImageAdWatchAndBrowseViewController_h
#define IGImageAdWatchAndBrowseViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGBrowserViewController.h"
#include "IGBrowserViewControllerDelegate-Protocol.h"
#include "IGFeedVideoAdWatchAndBrowseGestureConfig.h"
#include "IGSponsoredInfoProviding-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class IGDirectionalPanGestureRecognizer, IGGradientView, IGImageView, IGMedia, IGSponsoredSupportConfiguration, IGTapButton, IGUserSession, NSString, NSURL;

@interface IGImageAdWatchAndBrowseViewController : IGViewController<UIGestureRecognizerDelegate, IGBrowserViewControllerDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  NSString *_viewerSessionId;
  NSString *_analyticsModule;
  IGMedia *_media;
  IGImageView *_imageview;
  NSURL *_webURL;
  IGBrowserViewController *_browserViewController;
  NSObject<IGSponsoredInfoProviding> *_sponsoredInfoProvider;
  IGSponsoredSupportConfiguration *_sponsoredSupportConfiguration;
  IGDirectionalPanGestureRecognizer *_verticalPanGesture;
  IGTapButton *_dismissButton;
  IGTapButton *_dismissButtonExtraLayer;
  IGGradientView *_underSheetDimmer;
  IGFeedVideoAdWatchAndBrowseGestureConfig *_gestureConfig;
  unsigned long long _originalMediaSwipeUpGestureType;
  unsigned long long _originalBrowserSwipeUpGestureType;
  unsigned long long _originalBrowserSwipeDownGestureType;
  unsigned long long _gestureSurface;
  double _currentBrowserY;
  double _originalBrowserY;
  BOOL _isHotInstanceEnabled;
  unsigned long long _dismissButtonIcon;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session viewerSessionId:(id)id media:(id)media webURL:(id)url sponsoredInfoProvider:(id)provider sponsoredSupportConfiguration:(id)configuration gestureConfig:(id)config isHotInstanceEnabled:(BOOL)enabled useXForDismissButtonIcon:(BOOL)icon analyticsModule:(id)module;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (long long)preferredTabBarBehavior;
- (BOOL)prefersNavigationBarDividerHidden;
- (long long)preferredStatusBarStyle;
- (BOOL)prefersNavigationBarHidden;
- (void)_dismissViewControllerByTappingDismissButton;
- (void)_handlePanGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)browserViewControllerDidFinishWithURL:(id)url dismissWithMethod:(unsigned long long)method;
- (void)browserViewControllerDidFinishWithSessionID:(id)id landingPageInteractable:(BOOL)interactable;
- (void)browserViewController:(id)controller loadingProgressChanged:(double)changed;
- (void)browserViewController:(id)controller URLChanged:(id)urlchanged;
- (void)browserViewControllerWillCloseBrowser:(id)browser;
- (id)browserViewControllerPresenter;
- (void)browserViewController:(id)controller didScrollWebViewScrollView:(id)view;
- (void)browserViewController:(id)controller didRequestPopupForNavigationAction:(id)action;
- (void)browserViewControllerDidRequestMinimizeToPeek:(id)peek;
- (void)browserViewControllerDidCompleteInitialLoading;
- (void)browserViewControllerDidBecomeInteractive;
- (id)analyticsModuleUri;
@end

#endif /* IGImageAdWatchAndBrowseViewController_h */
