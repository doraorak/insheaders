//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGVideoCallCaptureCoordinator_h
#define IGVideoCallCaptureCoordinator_h
@import Foundation;

#include "FBRTCOutputTransform.h"
#include "IGCameraViewControllerWrapper.h"
#include "IGCameraVisibilityTracker.h"
#include "IGUserLauncherSetProviding-Protocol.h"
#include "IGVideoCallCaptureCoordinatorAREffectProtocol-Protocol.h"
#include "IGVideoCallLoggingContext.h"

@class FBTimer, IGCameraLogger, IGUserSession, NSString, UIView;
@protocol IGRTCVideoCallControllerIntf, IGVideoCallCaptureCoordinatorAnnouncer, IGVideoCallScreenShareCaptureInterface;

@interface IGVideoCallCaptureCoordinator : NSObject<IGVideoCallCaptureCoordinatorAREffectProtocol> {
  /* instance variables */
  IGUserSession *_userSession;
  IGCameraViewControllerWrapper *_videoCallCaptureManager;
  NSObject<IGUserLauncherSetProviding> *_launcherSet;
  NSObject<IGVideoCallScreenShareCaptureInterface> *_videoCallScreenShareCapture;
  NSObject<IGRTCVideoCallControllerIntf> *_rtcController;
  IGVideoCallLoggingContext *_loggingContext;
  NSObject<IGVideoCallCaptureCoordinatorAnnouncer> *_announcer;
  BOOL _shouldCaptureAudio;
  BOOL _isCapturingAudio;
  BOOL _shouldCaptureVideo;
  BOOL _isCapturingVideo;
  IGCameraLogger *_cameraLogger;
  BOOL _startWithCameraOff;
  BOOL _videoCaptureKillswitchIsEnabled;
  BOOL _mirrorFrontCameraEnabled;
  BOOL _canMirrorVideoBufferForCurrentCameraOrientation;
  BOOL _canMirrorVideoBufferForCurrentSelectedEffect;
  BOOL _isSystemPiPSupported;
  IGCameraVisibilityTracker *_cameraVisibilityTracker;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _rtcOutputTransformMutex;
  FBRTCOutputTransform *_rtcOutputTransform;
  FBTimer *_orientationPollingTimer;
  long long _lastInterfaceOrientation;
  long long _captureRestartAttemptsRemaining;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } cameraPreviewSize;
@property (readonly, nonatomic) UIView *cameraPreviewView;
@property (readonly, nonatomic) unsigned long long captureState;
@property (readonly, nonatomic) BOOL capturingAudio;
@property (readonly, nonatomic) BOOL capturingVideo;
@property (readonly, nonatomic) long long cameraPosition;

/* instance methods */
- (id)initWithUserSession:(id)session rtcController:(id)controller loggingContext:(id)context startWithCameraOff:(BOOL)off;
- (void)setRTCController:(id)rtccontroller;
- (void)beginAudioCapture;
- (void)beginVideoCapture;
- (void)beginAudioAndVideoCapture;
- (void)stopCapture;
- (BOOL)resumeAudioWithReason:(unsigned long long)reason;
- (void)pauseAudioWithReason:(unsigned long long)reason;
- (void)setCallModelSelfParticipantAudioEnabled:(BOOL)enabled;
- (void)setCallModelSelfParticipantVideoEnabled:(BOOL)enabled;
- (BOOL)resumeVideoWithReason:(unsigned long long)reason flipButtonVisibility:(BOOL)visibility;
- (BOOL)resumeVideoWithReason:(unsigned long long)reason;
- (void)pauseVideoWithReason:(unsigned long long)reason;
- (void)switchCaptureDevice:(id)device withUserInput:(unsigned long long)input;
- (void)switchCaptureDevice:(unsigned long long)device;
- (void)toggleDualCamMode:(BOOL)mode withUserInput:(BOOL)input;
- (BOOL)isDualModeActive;
- (BOOL)isDualModeAvailable;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (void)restartAudioDevice;
- (void)enableAudioDevice;
- (void)disableAudioDevice;
- (void)didActivateAudioSession:(id)session;
- (void)didDeactivateAudioSession:(id)session;
- (void)prepareToTakeCaptureScreenshot;
- (void)finishedTakingCaptureScreenshot;
- (void)setVideoCallAudioRoute:(unsigned long long)route;
- (id)arEffectApplicator;
- (void)setAREffectDelegate:(id)delegate;
- (id)captureManager;
- (void)onDidSelectEffect:(id)effect;
- (void)_onAppDidEnterBackground:(id)background;
- (void)_onAppDidBecomeActive:(id)active;
- (void)_onCaptureSessionInterruption:(id)interruption;
- (void)_onCaptureSessionInterruptionEnded:(id)ended;
- (void)_pipStateChanged:(id)changed;
- (void)didReceiveAudioBuffer:(struct opaqueCMSampleBuffer *)buffer withVolumeLevel:(float)level;
- (void)didReceiveVideoBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (void)didSwitchToCameraPosition:(long long)position;
- (void)didStartCaptureSessionWithCameraPosition:(long long)position;
- (void)startAudioSessionDidError:(id)error;
- (void)didStopCaptureSession;
- (void)cameraVisibilityTrackerDidDetectPrivacyViolation:(id)violation;
- (id)screenShare;
- (void)pushBroadcastButton;
- (void)releaseScreenShare;
- (void)stopScreenSharingWithReason:(unsigned long long)reason;
- (void)screenShareStarted;
- (void)screenSharingHasStopped:(BOOL)stopped;
- (void)setZoomDelta:(double)delta;
- (BOOL)isZoomed;
- (double)zoomLevel;
- (void)didDetectCameraStall;
- (void)didRecoverCameraStall;
@end

#endif /* IGVideoCallCaptureCoordinator_h */
