//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBTTRCTracker_h
#define FBTTRCTracker_h
@import Foundation;

#include "NSObject-Protocol.h"

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;
@protocol FBProxyAnnouncer<FBTTRCTrackerListener;

@interface FBTTRCTracker : NSObject<NSObject> {
  /* instance variables */
  NSMutableDictionary *_countSinceColdStart;
  NSMutableDictionary *_countSinceForeground;
  NSString *_currentNavigationModule;
  BOOL _hasValidTouchUpInterval;
  BOOL _hasValidTTST;
  id /* block */ _instanceKeyGenerator;
  id /* block */ _notificationTimestampGenerator;
  NSMutableDictionary *_interactionInfoDict;
  NSDictionary *_mostRecentTouchUpDylibSnapshot;
  long long _mostRecentTouchUpInterval;
  long long _mostRecentTTST;
  NSMutableArray *_nextStartAnnotationGenerators;
  NSString *_touchUpNavigationModule;
  NSString *_touchUpNavigationComponent;
  BOOL _isDirectTabNavigation;
  id /* block */ _touchUpTimestampConverter;
  FBProxyAnnouncer<FBTTRCTrackerListener> *_announcer;
  long long _mostRecentProfileWillSwitchInterval;
  long long _mostRecentSpinnerStartInterval;
  long long _mostRecentSpinnerEndInterval;
  NSArray *_activeMarkers;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedTracker;
+ (void)resetSharedTracker;

/* instance methods */
- (id)initWithInstanceKeyGenerator:(id /* block */)generator touchUpTimestampConverter:(id /* block */)converter notificationTimestampGenerator:(id /* block */)generator;
- (void)applicationWillEnterForeground;
- (void)applicationWillResignActive:(id)active;
- (void)waitForQueueForUnitTests;
- (void)willSendEvent:(id)event;
- (void)didSendEvent:(id)event;
- (void)startInteractionForMarker:(int)marker instanceID:(id)id;
- (void)startInteractionForMarker:(int)marker instanceID:(id)id joinID:(id)id timestamp:(long long)timestamp cancelOnBackground:(BOOL)background;
- (void)startInteractionForMarker:(int)marker instanceID:(id)id qplSession:(long long)session;
- (void)startInteractionForMarker:(int)marker instanceID:(id)id qplSession:(long long)session joinID:(id)id timestamp:(long long)timestamp cancelOnBackground:(BOOL)background;
- (id)addInteractionInfoForMarker:(int)marker instanceID:(id)id qplSession:(long long)session startInterval:(long long)interval cancelOnBackground:(BOOL)background;
- (id)interactionInfoForMarker:(int)marker instanceID:(id)id;
- (void)dispatchForMarker:(int)marker instanceID:(id)id andExecute:(id /* block */)execute;
- (void)removeInteractionInfoForMarker:(int)marker instanceID:(id)id;
- (void)endMarker:(int)marker instanceID:(id)id action:(short)action interactionInfo:(id)info timestamp:(long long)timestamp endModule:(id)module;
- (BOOL)transitionToInteractionState:(char)state forMarker:(int)marker instanceID:(id)id queryIdentifier:(id)identifier interactionInfo:(id)info;
- (BOOL)transitionToProcessingQueriesIfNeeded:(int)needed instanceID:(id)id queryIdentifer:(id)identifer interactionInfo:(id)info;
- (BOOL)transitionToQueryState:(char)state forMarker:(int)marker instanceID:(id)id queryIdentifier:(id)identifier interactionInfo:(id)info queryInfo:(id)info;
- (void)performSurfaceLeftComputationForMarkerID:(int)id instanceID:(id)id timestamp:(long long)timestamp interactionInfo:(id)info cancelAction:(short)action endModule:(id)module endReason:(id)reason;
- (void)expectNetworkOnlyQueryForMarker:(int)marker instanceID:(id)id identifier:(id)identifier;
- (void)expectQueryWithCacheForMarker:(int)marker instanceID:(id)id identifier:(id)identifier cacheRecencyThreshold:(double)threshold;
- (void)setFreshCacheTTL:(double)ttl forMarker:(int)marker instanceID:(id)id queryIdentifier:(id)identifier;
- (void)expectStepForMarker:(int)marker instanceID:(id)id identifier:(id)identifier;
- (void)markQueryOrStepNotNeededForMarker:(int)marker instanceID:(id)id identifier:(id)identifier;
- (void)cachedContentDisplayedForMarker:(int)marker instanceID:(id)id identifier:(id)identifier cacheAge:(double)age;
- (void)cachedContentDisplayedForMarker:(int)marker instanceID:(id)id identifier:(id)identifier cacheAge:(double)age isFinal:(BOOL)final;
- (void)cachedContentDisplayedForMarker:(int)marker instanceID:(id)id identifier:(id)identifier cacheAge:(double)age timestamp:(long long)timestamp;
- (void)cachedContentDisplayedForMarker:(int)marker instanceID:(id)id identifier:(id)identifier cacheAge:(double)age timestamp:(long long)timestamp isFinal:(BOOL)final;
- (void)networkContentDisplayedForMarker:(int)marker instanceID:(id)id identifier:(id)identifier meaningfullyDifferentThanCache:(BOOL)cache;
- (void)networkContentDisplayedForMarker:(int)marker instanceID:(id)id identifier:(id)identifier meaningfullyDifferentThanCache:(BOOL)cache timestamp:(long long)timestamp;
- (void)stepCompleteForMarker:(int)marker instanceID:(id)id identifier:(id)identifier;
- (void)stepCompleteForMarker:(int)marker instanceID:(id)id identifier:(id)identifier timestamp:(long long)timestamp;
- (void)markAllContentDisplayedForMarker:(int)marker instanceID:(id)id identifier:(id)identifier meaningfullyDifferentThanCache:(BOOL)cache timestamp:(long long)timestamp;
- (void)surfaceLeftForMarker:(int)marker instanceID:(id)id;
- (void)surfaceLeftForMarker:(int)marker instanceID:(id)id reason:(id)reason;
- (void)surfaceLeftForMarker:(int)marker instanceID:(id)id timestamp:(long long)timestamp;
- (void)surfaceLeftForMarker:(int)marker instanceID:(id)id timestamp:(long long)timestamp reason:(id)reason;
- (void)interactionFailedForMarker:(int)marker instanceID:(id)id reason:(id)reason;
- (void)interactionDroppedForMarker:(int)marker instanceID:(id)id;
- (void)userCompletedInteractionForMarker:(int)marker instanceID:(id)id;
- (void)userCompletedInteractionForMarker:(int)marker instanceID:(id)id timestamp:(long long)timestamp;
- (void)endMarkerIfAllQueriesAndAdditionalStepsComplete:(int)complete instanceID:(id)id interactionInfo:(id)info endModule:(id)module;
- (void)markerAnnotate:(int)annotate instanceID:(id)id annotationKey:(id)key stringGenerator:(id /* block */)generator;
- (void)markerAnnotate:(int)annotate instanceID:(id)id annotationKey:(id)key numberGenerator:(id /* block */)generator;
- (void)markerAnnotate:(int)annotate instanceID:(id)id annotationKey:(id)key stringArrayGenerator:(id /* block */)generator;
- (void)markerAnnotate:(int)annotate instanceID:(id)id annotationKey:(id)key numberArrayGenerator:(id /* block */)generator;
- (void)markerAnnotate:(int)annotate instanceID:(id)id withValues:(id /* block */)values;
- (void)addFinalAnnotationGeneratorForMarker:(int)marker instanceID:(id)id withValues:(id /* block */)values;
- (void)addAnnotationsToNextMarkerStarted:(id /* block */)started;
- (void)fetchQPLInstanceKeyForMarker:(int)marker instanceID:(id)id andExecuteBlock:(id /* block */)block;
- (BOOL)isMarkerOn:(int)on instanceID:(id)id;
- (BOOL)anyMarkerOnQPLMetadata;
- (id)whichMarkersOnQPLMetadata;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (void)markTransitionStart;
- (void)markTransitionStartAtTimestamp:(long long)timestamp;
- (id)getNavigationModule;
- (void)setNavigationModule:(id)module;
- (long long)getMostRecentTouchUpInterval;
- (long long)shouldBacktrackTimestamp:(long long)timestamp;
- (id)generateActiveMarkers;
- (void)markProfileWillSwitch;
- (void)markSpinnerStarted;
- (void)markSpinnerEnded;
- (void)markForAllMarkers:(const char *)markers timestamp:(long long)timestamp;
@end

#endif /* FBTTRCTracker_h */
