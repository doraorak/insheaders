//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef SRWebSocket_h
#define SRWebSocket_h
@import Foundation;

#include "NSStreamDelegate-Protocol.h"
#include "SRDelegateController.h"
#include "SRIOConsumerPool.h"
#include "SRProxyConnect.h"
#include "SRSecurityPolicy.h"
#include "SRWebSocket.h"
#include "SRWebSocketDelegate-Protocol.h"

@class NSArray, NSInputStream, NSMutableArray, NSMutableData, NSMutableSet, NSOperationQueue, NSOutputStream, NSString, NSURL, NSURLRequest;
@protocol OS_dispatch_data, OS_dispatch_queue;

@interface SRWebSocket : NSObject<NSStreamDelegate> {
  /* instance variables */
  struct _opaque_pthread_mutex_t * _kvoLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _propertyLock;
  NSObject<OS_dispatch_queue> *_workQueue;
  NSMutableArray *_consumers;
  NSInputStream *_inputStream;
  NSOutputStream *_outputStream;
  NSObject<OS_dispatch_data> *_readBuffer;
  unsigned long long _readBufferOffset;
  NSObject<OS_dispatch_data> *_outputBuffer;
  unsigned long long _outputBufferOffset;
  unsigned char _currentFrameOpcode;
  unsigned long long _currentFrameCount;
  unsigned long long _readOpCount;
  unsigned int _currentStringScanPosition;
  NSMutableData *_currentFrameData;
  NSString *_closeReason;
  NSString *_secKey;
  SRSecurityPolicy *_securityPolicy;
  BOOL _requestRequiresSSL;
  BOOL _streamSecurityValidated;
  unsigned char _currentReadMaskKey[4];
  unsigned long long _currentReadMaskOffset;
  BOOL _closeWhenFinishedWriting;
  BOOL _failed;
  NSURLRequest *_urlRequest;
  BOOL _sentClose;
  BOOL _didFail;
  BOOL _cleanupScheduled;
  int _closeCode;
  BOOL _isPumping;
  NSMutableSet *_scheduledRunloops;
  SRWebSocket *_selfRetain;
  NSArray *_requestedProtocols;
  SRIOConsumerPool *_consumerPool;
  SRProxyConnect *_proxyConnect;
}

@property long long readyState;
@property (nonatomic) BOOL allowsUntrustedSSLCertificates;
@property (readonly, nonatomic) SRDelegateController *delegateController;
@property (weak, nonatomic) NSObject<SRWebSocketDelegate> *delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateDispatchQueue;
@property (retain, nonatomic) NSOperationQueue *delegateOperationQueue;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) struct __CFHTTPMessage * receivedHTTPHeaders;
@property (copy, nonatomic) NSArray *requestCookies;
@property (readonly, copy, nonatomic) NSString *protocol;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)automaticallyNotifiesObserversOfReadyState;

/* instance methods */
- (id)initWithURLRequest:(id)urlrequest protocols:(id)protocols securityPolicy:(id)policy;
- (id)initWithURLRequest:(id)urlrequest protocols:(id)protocols allowsUntrustedSSLCertificates:(BOOL)sslcertificates;
- (id)initWithURLRequest:(id)urlrequest securityPolicy:(id)policy;
- (id)initWithURLRequest:(id)urlrequest protocols:(id)protocols;
- (id)initWithURLRequest:(id)urlrequest;
- (id)initWithURL:(id)url;
- (id)initWithURL:(id)url protocols:(id)protocols;
- (id)initWithURL:(id)url securityPolicy:(id)policy;
- (id)initWithURL:(id)url protocols:(id)protocols allowsUntrustedSSLCertificates:(BOOL)sslcertificates;
- (void)assertOnWorkQueue;
- (void)dealloc;
- (void)open;
- (void)_connectionDoneWithError:(id)error readStream:(id)stream writeStream:(id)stream;
- (BOOL)_checkHandshake:(struct __CFHTTPMessage *)handshake;
- (void)_HTTPHeadersDidFinish;
- (void)_readHTTPHeader;
- (void)didConnect;
- (void)_updateSecureStreamOptions;
- (void)scheduleInRunLoop:(id)loop forMode:(id)mode;
- (void)unscheduleFromRunLoop:(id)loop forMode:(id)mode;
- (void)close;
- (void)closeWithCode:(long long)code reason:(id)reason;
- (void)_closeWithProtocolError:(id)error;
- (void)_failWithError:(id)error;
- (void)_writeData:(id)data;
- (void)send:(id)send;
- (BOOL)sendString:(id)string error:(id *)error;
- (BOOL)sendData:(id)data error:(id *)error;
- (BOOL)sendDataNoCopy:(id)copy error:(id *)error;
- (BOOL)sendPing:(id)ping error:(id *)error;
- (void)_handlePingWithData:(id)data;
- (void)handlePong:(id)pong;
- (void)handleCloseWithData:(id)data;
- (void)closeConnection;
- (void)_handleFrameWithData:(id)data opCode:(unsigned char)code;
- (void)_handleFrameHeader:(struct { BOOL x0; unsigned char x1; BOOL x2; unsigned long long x3; })header curData:(id)data;
- (void)_readFrameContinue;
- (void)_readFrameNew;
- (void)_pumpWriting;
- (void)_addConsumerWithScanner:(id /* block */)scanner callback:(id /* block */)callback;
- (void)_addConsumerWithDataLength:(unsigned long long)length callback:(id /* block */)callback readToCurrentFrame:(BOOL)frame unmaskBytes:(BOOL)bytes;
- (void)_addConsumerWithScanner:(id /* block */)scanner callback:(id /* block */)callback dataLength:(unsigned long long)length;
- (void)_scheduleCleanup;
- (void)_cleanupSelfReference:(id)reference;
- (void)_readUntilHeaderCompleteWithCallback:(id /* block */)callback;
- (void)_readUntilBytes:(const void *)bytes length:(unsigned long long)length callback:(id /* block */)callback;
- (BOOL)_innerPumpScanner;
- (void)_pumpScanner;
- (void)_sendFrameWithOpcode:(unsigned char)opcode data:(id)data;
- (void)stream:(id)stream handleEvent:(unsigned long long)event;
- (void)safeHandleEvent:(unsigned long long)event stream:(id)stream;
@end

#endif /* SRWebSocket_h */
