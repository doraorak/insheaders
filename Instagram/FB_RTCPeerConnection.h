//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FB_RTCPeerConnection_h
#define FB_RTCPeerConnection_h
@import Foundation;

#include "FB_RTCConfiguration.h"
#include "FB_RTCPeerConnectionFactory.h"
#include "FB_RTCSessionDescription.h"

@class NSArray, NSMutableArray;
@protocol FB_RTCPeerConnectionDelegate, struct scoped_refptr<webrtc_legacy::PeerConnectionInterface> { struct PeerConnectionInterface * x0; }, {scoped_refptr<webrtc_legacy::PeerConnectionInterface>="ptr_"^{PeerConnectionInterface}}, {unique_ptr<webrtc_legacy::MediaConstraints, std::default_delete<webrtc_legacy::MediaConstraints>>="__ptr_"{__compressed_pair<webrtc_legacy::MediaConstraints *, std::default_delete<webrtc_legacy::MediaConstraints>>="__value_"^{MediaConstraints}}}, {unique_ptr<webrtc_legacy::PeerConnectionDelegateAdapter, std::default_delete<webrtc_legacy::PeerConnectionDelegateAdapter>>="__ptr_"{__compressed_pair<webrtc_legacy::PeerConnectionDelegateAdapter *, std::default_delete<webrtc_legacy::PeerConnectionDelegateAdapter>>="__value_"^{PeerConnectionDelegateAdapter}}};

@interface FB_RTCPeerConnection : NSObject {
  /* instance variables */
  struct unique_ptr<webrtc_legacy::PeerConnectionDelegateAdapter, std::default_delete<webrtc_legacy::PeerConnectionDelegateAdapter>> { struct __compressed_pair<webrtc_legacy::PeerConnectionDelegateAdapter *, std::default_delete<webrtc_legacy::PeerConnectionDelegateAdapter>> { struct PeerConnectionDelegateAdapter *__value_; } __ptr_; } _observer;
  struct scoped_refptr<webrtc_legacy::PeerConnectionInterface> { struct PeerConnectionInterface *ptr_; } _peerConnection;
  struct unique_ptr<webrtc_legacy::MediaConstraints, std::default_delete<webrtc_legacy::MediaConstraints>> { struct __compressed_pair<webrtc_legacy::MediaConstraints *, std::default_delete<webrtc_legacy::MediaConstraints>> { struct MediaConstraints *__value_; } __ptr_; } _nativeConstraints;
  BOOL _hasStartedRtcEventLog;
}

@property (readonly, nonatomic) FB_RTCPeerConnectionFactory *factory;
@property (readonly, nonatomic) struct scoped_refptr<webrtc_legacy::PeerConnectionInterface> { struct PeerConnectionInterface * x0; } nativePeerConnection;
@property (weak, nonatomic) NSObject<FB_RTCPeerConnectionDelegate> *delegate;
@property (readonly, nonatomic) NSArray *localStreams;
@property (readonly, nonatomic) FB_RTCSessionDescription *localDescription;
@property (readonly, nonatomic) FB_RTCSessionDescription *remoteDescription;
@property (readonly, nonatomic) long long signalingState;
@property (readonly, nonatomic) long long iceConnectionState;
@property (readonly, nonatomic) long long connectionState;
@property (readonly, nonatomic) long long iceGatheringState;
@property (readonly, copy, nonatomic) FB_RTCConfiguration *configuration;
@property (readonly, nonatomic) NSArray *senders;
@property (readonly, nonatomic) NSArray *receivers;
@property (readonly, nonatomic) NSArray *transceivers;

/* class methods */
+ (int)nativeSignalingStateForState:(long long)state;
+ (long long)signalingStateForNativeState:(int)state;
+ (id)stringForSignalingState:(long long)state;
+ (int)nativeConnectionStateForState:(long long)state;
+ (long long)connectionStateForNativeState:(int)state;
+ (id)stringForConnectionState:(long long)state;
+ (int)nativeIceConnectionStateForState:(long long)state;
+ (long long)iceConnectionStateForNativeState:(int)state;
+ (id)stringForIceConnectionState:(long long)state;
+ (int)nativeIceGatheringStateForState:(long long)state;
+ (long long)iceGatheringStateForNativeState:(int)state;
+ (id)stringForIceGatheringState:(long long)state;
+ (int)nativeStatsOutputLevelForLevel:(long long)level;

/* instance methods */
- (id)initWithFactory:(id)factory configuration:(id)configuration constraints:(id)constraints delegate:(id)delegate;
- (void)close;
- (void)addIceCandidate:(id)candidate;
- (void)removeIceCandidates:(id)candidates;
- (void)addStream:(id)stream;
- (void)removeStream:(id)stream;
- (id)addTrack:(id)track streamIds:(id)ids;
- (BOOL)removeTrack:(id)track;
- (id)addTransceiverWithTrack:(id)track;
- (id)addTransceiverWithTrack:(id)track init:(id)init;
- (id)addTransceiverOfType:(long long)type;
- (id)addTransceiverOfType:(long long)type init:(id)init;
- (void)offerForConstraints:(id)constraints completionHandler:(id /* block */)handler;
- (void)answerForConstraints:(id)constraints completionHandler:(id /* block */)handler;
- (void)setLocalDescription:(id)description completionHandler:(id /* block */)handler;
- (void)setRemoteDescription:(id)description completionHandler:(id /* block */)handler;
- (BOOL)setBweMinBitrateBps:(id)bps currentBitrateBps:(id)bps maxBitrateBps:(id)bps;
- (BOOL)startRtcEventLogWithFilePath:(id)path maxSizeInBytes:(long long)bytes;
- (void)stopRtcEventLog;
- (id)senderWithKind:(id)kind streamId:(id)id;
@end

#endif /* FB_RTCPeerConnection_h */
