//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGProfileViewController_h
#define IGProfileViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGALLogContextModelProvider-Protocol.h"
#include "IGARLinkViewControllerPresenter-Protocol.h"
#include "IGAccountPrivacyChangeListener-Protocol.h"
#include "IGAnalyticsNavigationStateProvider-Protocol.h"
#include "IGAppStoreSurfacePresenter.h"
#include "IGAvatarCoinFlipCustomizationViewControllerDelegate-Protocol.h"
#include "IGBadgeListener-Protocol.h"
#include "IGBirthdayConfettiManager.h"
#include "IGBirthdayLogger.h"
#include "IGBusinessConversionDelegate-Protocol.h"
#include "IGCTAPresenterContext.h"
#include "IGCreationViewControllerNavigationDelegate-Protocol.h"
#include "IGCreatorCollaborationSettingsDataSource.h"
#include "IGCreatorToolsCreatorConversionDelegate-Protocol.h"
#include "IGDirectGroupsCreationCoordinatorControlling-Protocol.h"
#include "IGDirectNoteDetailsViewControllerDelegate-Protocol.h"
#include "IGDirectNotesComposerViewControllerDelegate-Protocol.h"
#include "IGDirectPseudoBlockDelegate-Protocol.h"
#include "IGDirectReplyToAuthorInteractionDelegate-Protocol.h"
#include "IGDirectReplyToAuthorNoteReplySheetLauncherDelegate-Protocol.h"
#include "IGDirectReplyToAuthorViewControllerPresenting-Protocol.h"
#include "IGDirectShareSheetControllerDelegate-Protocol.h"
#include "IGDirectShareSheetControlling-Protocol.h"
#include "IGDynamicPageViewController.h"
#include "IGDynamicPageViewControllerDataSource-Protocol.h"
#include "IGDynamicPageViewControllerDelegate-Protocol.h"
#include "IGFeedCreationFlowDelegate-Protocol.h"
#include "IGFeedCreationFlowHandler-Protocol.h"
#include "IGFeedItemDirectResponseLoggingProviderDelegate-Protocol.h"
#include "IGFindUsersViewDataSourceDelegate-Protocol.h"
#include "IGFriendStatusReceivedListener-Protocol.h"
#include "IGGestureHandler-Protocol.h"
#include "IGGyroMotionManagerListener-Protocol.h"
#include "IGHighlightsStoryTrayEditRowModel.h"
#include "IGHighlightsStoryTrayEditRowSectionControllerDelegate-Protocol.h"
#include "IGLabelSectionControllerDelegate-Protocol.h"
#include "IGListAdapterUpdateListener-Protocol.h"
#include "IGLivePostLiveItemModel.h"
#include "IGMediaDeletedListener-Protocol.h"
#include "IGNametagLoggingContext.h"
#include "IGPreviewPresentationDelegate-Protocol.h"
#include "IGProDashBloksSectionController.h"
#include "IGProDashHypercardManager.h"
#include "IGProDashLogger.h"
#include "IGProInvitePostFlow.h"
#include "IGProInvitePostFlowURLHandler-Protocol.h"
#include "IGProOnboardingChecklistFlow.h"
#include "IGProOnboardingChecklistStepsCompletedTextViewModel.h"
#include "IGProOnboardingChecklistURLHandler-Protocol.h"
#include "IGProOnboardingChecklistViewModel.h"
#include "IGProfileActionBarViewModel.h"
#include "IGProfileAvatarActionsControllerDelegate-Protocol.h"
#include "IGProfileCTAController.h"
#include "IGProfileChainingModel.h"
#include "IGProfileChainingSectionController.h"
#include "IGProfileContext.h"
#include "IGProfileFeedSourcesManagerProvider-Protocol.h"
#include "IGProfileFeedViewControllerDelegate-Protocol.h"
#include "IGProfileFriendCodePresentationManager.h"
#include "IGProfileFriendRequestSectionController.h"
#include "IGProfileHeaderView.h"
#include "IGProfileHeaderViewDataSource-Protocol.h"
#include "IGProfileHeaderViewDelegate-Protocol.h"
#include "IGProfileImageOptionsViewControllerDismissDelegate-Protocol.h"
#include "IGProfileLayoutMetrics-Protocol.h"
#include "IGProfileNUXController.h"
#include "IGProfileNavigationBarContext.h"
#include "IGProfileNavigationBarController.h"
#include "IGProfileNavigationHeaderView.h"
#include "IGProfilePhotoCoinFlipManager.h"
#include "IGProfilePictureHelper.h"
#include "IGProfilePictureHelperDelegate-Protocol.h"
#include "IGProfilePrefetchManager-Protocol.h"
#include "IGProfileRequestBannerModel.h"
#include "IGProfileSimpleAvatarStatsPostCountDelegate-Protocol.h"
#include "IGProfileSimpleAvatarStatsSectionControllerDelegate-Protocol.h"
#include "IGProfileUpcomingEventController.h"
#include "IGProfileUpcomingEventControllerDelegate-Protocol.h"
#include "IGProfileViewControllerFanClubSection.h"
#include "IGProfileViewControllerType-Protocol.h"
#include "IGProfileViewShopActionHandler.h"
#include "IGQPMegaphoneSectionControllerPresenter.h"
#include "IGQPMegaphoneSectionControllerPresenterDelegate-Protocol.h"
#include "IGRefreshControlDelegate-Protocol.h"
#include "IGScreenshotObserverDelegate-Protocol.h"
#include "IGScrollViewListener-Protocol.h"
#include "IGScrollableViewControllerProtocol-Protocol.h"
#include "IGSettingsListener-Protocol.h"
#include "IGShoppingPermissionsLogger.h"
#include "IGShoppingPermissionsNetworker.h"
#include "IGShowCreationNavigatorURLHandler-Protocol.h"
#include "IGStoryDataControllerBroadcastItemListener-Protocol.h"
#include "IGStoryDataControllerPostLiveItemListener-Protocol.h"
#include "IGStoryDataControllerStoryItemListener-Protocol.h"
#include "IGStoryHighlightsCreationControllerDelegate-Protocol.h"
#include "IGStoryPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "IGStoryUploadListener-Protocol.h"
#include "IGStoryViewerDelegate-Protocol.h"
#include "IGStoryViewerPresentationController.h"
#include "IGSuggestedFindUsersViewDataSource.h"
#include "IGSundialCloudDraftStoreEventListener-Protocol.h"
#include "IGSundialContextualNavigationProtocol-Protocol.h"
#include "IGTextViewSectionControllerDelegate-Protocol.h"
#include "IGTransitionZoomFromCapable-Protocol.h"
#include "IGUnfollowChainingController.h"
#include "IGUnfollowReciprocalController.h"
#include "IGUserAvatarStatusListener-Protocol.h"
#include "IGUserDetailDataControllerDelegate-Protocol.h"
#include "IGUserUpdatedListener-Protocol.h"
#include "IGViewLoadListener-Protocol.h"
#include "IGXAVNetegoCTAPresenter.h"
#include "MAISKOverlayTransitionDelegate-Protocol.h"
#include "METAInAppPurchaseTransactionUpdateListener-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "_TtC22IGProfileHeaderLogging21IGProfileHeaderLogger.h"
#include "_TtC25IGProfileHeaderBioManager25IGProfileHeaderBioManager.h"
#include "_TtC26IGProfilePerformanceLogger26IGProfilePerformanceLogger.h"
#include "_TtC26IGProfilePictureFullscreen40IGProfilePictureFullscreenViewController.h"
#include "_TtC27IGProfileHeaderLinksManager27IGProfileHeaderLinksManager.h"
#include "_TtC27IGProfileHeaderMusicManager27IGProfileHeaderMusicManager.h"
#include "_TtC29IGProfileHeaderBannersManager29IGProfileHeaderBannersManager.h"
#include "_TtC30IGProfileHeaderUsernameManager30IGProfileHeaderUsernameManager.h"
#include "_TtC32IGProfileHeaderStatusPillManager32IGProfileHeaderStatusPillManager.h"
#include "_TtC33IGProfileHeaderAvatarStatsManager33IGProfileHeaderAvatarStatsManager.h"
#include "_TtC33IGProfileNUXSuggestedUsersManager33IGProfileNUXSuggestedUsersManager.h"
#include "_TtC34IGProfileHeaderTransparencyManager34IGProfileHeaderTransparencyManager.h"
#include "_TtC35IGProfileHeaderMutualContextManager35IGProfileHeaderMutualContextManager.h"
#include "_TtC36IGProfileNUXProfileCompletionManager36IGProfileNUXProfileCompletionManager.h"
#include "_TtC38IGProfileHeaderActionBarShimmerManager38IGProfileHeaderActionBarShimmerManager.h"
#include "_TtC42IGProfileHeaderNameAndBioEmptyStateManager42IGProfileHeaderNameAndBioEmptyStateManager.h"
#include "_TtC48IGProfileHeaderCreatorMarketplaceInsightsManager48IGProfileHeaderCreatorMarketplaceInsightsManager.h"
#include "_TtC8IGPokeUI26IGPokeOverlayAnimationView.h"
#include "_TtC9IGPokeKit22IGPokeNetworkingHelper.h"
#include "_TtC9IGPokeKit26IGPokeToastPresenterHelper.h"
#include "_TtP26IGProfilePictureFullscreen48IGProfilePictureFullscreenViewControllerDelegate_-Protocol.h"
#include "_TtP27IGProfileHeaderLinksManager35IGProfileHeaderLinksManagerDelegate_-Protocol.h"

@class FBTimer, IG4BLogger, IGActivityIndicationState, IGAsyncTask, IGBadgingLogger, IGBloksAsyncActionHandler, IGCollapsibleNavigationCoordinator, IGCreatorConnectionsLogger, IGDirectNoteModel, IGDirectThreadService, IGDirectionalPanGestureRecognizer, IGFanClubDataManager, IGGenericMegaphone, IGMedia, IGNavigationBar, IGPillCTAButton, IGQPMegaphone, IGQPSlotID, IGQuickPromotionCoordinator, IGRapidFeedbackController, IGSegmentedTabControl, IGStory, IGTextViewSectionController, IGUpcomingEventsViewerLogger, IGUserSession, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, UIView, UIVisualEffectView;
@protocol IGBirthdayConfettiUpdateAnnouncer, IGDirectCameraPresentationManagerProtocol, IGViewController<IGProfileTabViewController, UIViewController<_TtP38IGProfileWallOverlayViewControllerType38IGProfileWallOverlayViewControllerType_;

@interface IGProfileViewController : IGViewController<IGAccountPrivacyChangeListener, IGSettingsListener, IGAnalyticsNavigationStateProvider, IGBadgeListener, IGCreationViewControllerNavigationDelegate, IGDirectPseudoBlockDelegate, IGDirectShareSheetControllerDelegate, IGDynamicPageViewControllerDataSource, IGDynamicPageViewControllerDelegate, IGFeedCreationFlowDelegate, IGFeedCreationFlowHandler, IGFeedItemDirectResponseLoggingProviderDelegate, IGFindUsersViewDataSourceDelegate, IGFriendStatusReceivedListener, IGLabelSectionControllerDelegate, IGListAdapterUpdateListener, IGMediaDeletedListener, IGPreviewPresentationDelegate, IGProfileAvatarActionsControllerDelegate, IGProfileFeedViewControllerDelegate, IGProfileHeaderViewDataSource, IGProfileHeaderViewDelegate, IGProfileImageOptionsViewControllerDismissDelegate, IGAvatarCoinFlipCustomizationViewControllerDelegate, IGTransitionZoomFromCapable, IGProfileSimpleAvatarStatsPostCountDelegate, IGProfileUpcomingEventControllerDelegate, _TtP26IGProfilePictureFullscreen48IGProfilePictureFullscreenViewControllerDelegate_, IGQPMegaphoneSectionControllerPresenterDelegate, IGRefreshControlDelegate, IGScreenshotObserverDelegate, IGScrollViewListener, IGStoryDataControllerBroadcastItemListener, IGStoryDataControllerPostLiveItemListener, IGStoryDataControllerStoryItemListener, IGStoryHighlightsCreationControllerDelegate, IGStoryPostCaptureEditingViewControllerDelegate, IGStoryUploadListener, IGStoryViewerDelegate, IGSundialCloudDraftStoreEventListener, IGSundialContextualNavigationProtocol, IGTextViewSectionControllerDelegate, IGUserDetailDataControllerDelegate, IGUserUpdatedListener, IGViewLoadListener, METAInAppPurchaseTransactionUpdateListener, UIGestureRecognizerDelegate, IGScrollableViewControllerProtocol, IGProfileSimpleAvatarStatsSectionControllerDelegate, MAISKOverlayTransitionDelegate, IGALLogContextModelProvider, IGDirectNotesComposerViewControllerDelegate, IGDirectNoteDetailsViewControllerDelegate, IGDirectReplyToAuthorInteractionDelegate, IGDirectReplyToAuthorNoteReplySheetLauncherDelegate, IGHighlightsStoryTrayEditRowSectionControllerDelegate, IGUserAvatarStatusListener, _TtP27IGProfileHeaderLinksManager35IGProfileHeaderLinksManagerDelegate_, IGGyroMotionManagerListener, IGProfilePictureHelperDelegate, IGBusinessConversionDelegate, IGCreatorToolsCreatorConversionDelegate, IGProfileViewControllerType, IGProInvitePostFlowURLHandler, IGProOnboardingChecklistURLHandler, IGShowCreationNavigatorURLHandler, IGARLinkViewControllerPresenter, IGGestureHandler> {
  /* instance variables */
  IGProfileContext *_context;
  BOOL _isMainProfileSurface;
  NSObject<IGProfileFeedSourcesManagerProvider> *_feedSourcesManager;
  IGProOnboardingChecklistStepsCompletedTextViewModel *_proOnboardingChecklistStepsCompletedViewModel;
  IGProfileViewControllerFanClubSection *_fanClubSection;
  IGProfileActionBarViewModel *_actionBarViewModel;
  IGProfileChainingModel *_nonAutoExpandChainingModel;
  IGProfileChainingModel *_autoExpandChainingModel;
  IGProfileChainingSectionController *_profileChainingSectionController;
  IGProfileRequestBannerModel *_friendRequestModel;
  IGHighlightsStoryTrayEditRowModel *_editHighlightHeaderModel;
  IGAppStoreSurfacePresenter *_appStoreSurfacePresenter;
  IGProfileNUXController *_nuxController;
  IGProfilePictureHelper *_profilePictureHelper;
  IGProfileCTAController *_ctaController;
  IGStory *_reel;
  IGLivePostLiveItemModel *_postLiveItemModel;
  BOOL _hasLoggedProfileFundraiserPresented;
  BOOL _hasLoggedViewed;
  IGBloksAsyncActionHandler *_asyncActionHandler;
  NSObject<IGProfileLayoutMetrics> *_layoutMetrics;
  IGProfileNavigationBarController *_navigationBarController;
  BOOL _showEmptyStoryBadge;
  BOOL _showBirthdayBadge;
  IGProfileViewShopActionHandler *_viewShopActionHandler;
  IGProOnboardingChecklistFlow *_onboardingChecklistFlow;
  IGProInvitePostFlow *_proInvitePostFlow;
  NSString *_targetUserID;
  IGProfileFriendCodePresentationManager *_friendCodePresentationManager;
  NSObject<IGDirectShareSheetControlling> *_reshareController;
  IG4BLogger *_proOnboardingChecklistFlowLogger;
  struct IGProfileNavButtonExperiments { BOOL showFadingFollowButton; BOOL showNotificationButton; BOOL showShareButton; BOOL showPokeButton; BOOL profileIsInHeader; } _navButtonExperiments;
  IGProfileNavigationBarContext *_navBarContext;
  IGProDashHypercardManager *_proDashHypercardManager;
  IGProDashBloksSectionController *_proDashBloksSectionController;
  IGQuickPromotionCoordinator *_qpCoordinator;
  IGQPSlotID *_qpSlot;
  IGQPMegaphone *_qpMegaphone;
  IGQPMegaphoneSectionControllerPresenter *_qpMegaphoneSectionControllerPresenter;
  NSDictionary *_triggerContext;
  BOOL _reelNeedsLaunch;
  BOOL _highlightNeedsLaunch;
  IGDynamicPageViewController *_dynamicPageViewController;
  NSArray *_tabViewControllerIdentifiers;
  NSMutableDictionary *_tabViewControllersForIdentifiers;
  IGViewController<IGProfileTabViewController> *_currentPageViewController;
  IGProfileHeaderView *_headerView;
  IGSegmentedTabControl *_profileContentFilterControl;
  double _profileContentFilterControlHeight;
  long long _priorTabType;
  IGDirectionalPanGestureRecognizer *_multidirectionalPanGestureRecognizer;
  long long _tombstoneReportType;
  BOOL _showShareButtonForBusinessProfile;
  IGBadgingLogger *_badgingLogger;
  long long _userTagsBadgeCount;
  BOOL _shouldLaunchReel;
  BOOL _shouldLaunchBroadcastWithDeepLink;
  BOOL _shouldFetchMainGridOnReelsGridFetchCompletion;
  IGUnfollowChainingController *_unfollowChainingController;
  IGUnfollowReciprocalController *_unfollowReciprocalController;
  BOOL _lastActionWasBlockingOrUnblocking;
  IGNametagLoggingContext *_nametagLoggingContext;
  BOOL _didTapFollowForNametag;
  IGProOnboardingChecklistViewModel *_onboardingChecklistViewModel;
  IGTextViewSectionController *_onboardingChecklistSectionController;
  IGTextViewSectionController *_businessHubSectionController;
  IGProfileNavigationHeaderView *_navigationHeaderView;
  BOOL _showMainProfileNavBar;
  long long _userInfoInitialFetchState;
  BOOL _shouldShowNotificationOnStateIcon;
  BOOL _didBusinessConversionFlowHasCompleted;
  BOOL _shouldDeferRenewToast;
  BOOL _shouldShowCreatorToolsWelcomeDialog;
  BOOL _multilinkImpressionLogged;
  BOOL _recsFromFriendsMegaphoneEnabled;
  BOOL _recsFromFriendsMegaphoneDismissed;
  BOOL _recsFromFriendsMegaphoneImpressionLogged;
  IGGenericMegaphone *_recsFromFriendsMegaphone;
  NSObject<IGDirectReplyToAuthorViewControllerPresenting> *_directPresenter;
  BOOL _tooltipShowing;
  BOOL _hideClipsTab;
  IGSuggestedFindUsersViewDataSource *_suggestedUserDataSource;
  NSMutableArray *_suggestedUsers;
  BOOL _selfProfileChainingExpanded;
  BOOL _selfProfileChainingAutoExpandedOnce;
  BOOL _isEligibleForCreatorRecommendations;
  IGShoppingPermissionsLogger *_shoppingPermissionlogger;
  IGShoppingPermissionsNetworker *_shoppingPermissionsNetworker;
  BOOL _didShowMerchantCreatorLinkModal;
  BOOL _didSeeInvalidDeepLinkDialog;
  BOOL _fanClubCanSeeSubscriptionButton;
  NSString *_fanClubSubscriptionProfileButtonText;
  BOOL _didLoadFanClubProfileTab;
  IGMedia *_fanClubPromoVideo;
  IGAsyncTask *_promoVideoFetchTask;
  NSString *_fanClubOrigin;
  IGFanClubDataManager *_fanClubDataManager;
  IGAsyncTask *_fanClubInfoQuery;
  long long _subscriberCount;
  BOOL _isOpalConsumptionEnabled;
  BOOL _isOpalCreationEnabled;
  BOOL _shouldImmediatelyTransitionToOpal;
  BOOL _canImmediatelyTransitionToOpal;
  BOOL _shouldShowOpalUnship;
  IGPillCTAButton *_opalFloatingButton;
  BOOL _opalFloatingButtonEnabled;
  BOOL _opalTeaseShown;
  IGProfileUpcomingEventController *_upcomingEventPresentationController;
  IGUpcomingEventsViewerLogger *_upcomingEventsLogger;
  id _featuredEvent;
  IGProDashLogger *_proDashLogger;
  IGRapidFeedbackController *_rapidFeedbackController;
  BOOL _isOpenInCurrentTab;
  BOOL _canShareProfileToStory;
  BOOL _expandProfilePicEnabled;
  IGProfileFriendRequestSectionController *_profileFriendRequestSectionController;
  _TtC26IGProfilePictureFullscreen40IGProfilePictureFullscreenViewController *_profilePictureFullscreenViewController;
  IGUserSession *_userSession;
  IGProfilePhotoCoinFlipManager *_coinFlipManager;
  BOOL _shouldRetryEnableCoinFlipExperience;
  NSObject<IGDirectGroupsCreationCoordinatorControlling> *_creationFlowCoordinator;
  IGStoryViewerPresentationController *_storyViewerController;
  BOOL _didTapCreateSheetOptionWithNewBadge;
  BOOL _shouldLogForNewAppearance;
  _TtC36IGProfileNUXProfileCompletionManager36IGProfileNUXProfileCompletionManager *_nuxProfileCompletionManager;
  _TtC33IGProfileNUXSuggestedUsersManager33IGProfileNUXSuggestedUsersManager *_nuxSuggestedUsersManager;
  unsigned long long _oldChannelCount;
  NSString *_feedEntryMediaPk;
  BOOL _shouldLogProfileViewedWhenDidAppear;
  BOOL _shouldShowOrganicCTA;
  BOOL _didShowOrganicCTA;
  BOOL _shouldShowAdCTA;
  BOOL _didFetchReconCTA;
  BOOL _userHasDismissedReconProfileAdCTAWithinLastTwoDays;
  BOOL _shouldShowReconCTA;
  BOOL _didShowReconCTA;
  IGCTAPresenterContext *_reconCTAPresenterContext;
  IGXAVNetegoCTAPresenter *_xavNetegoCTAPresenter;
  BOOL _shouldShowCreatorCollaboration;
  IGCreatorCollaborationSettingsDataSource *_creatorCollaborationSettingsDataSource;
  IGCreatorConnectionsLogger *_creatorConnectionsLogger;
  IGCollapsibleNavigationCoordinator *_collapsibleNavigationCoordinator;
  IGBirthdayConfettiManager *_confettiManager;
  NSObject<IGBirthdayConfettiUpdateAnnouncer> *_birthdayConfettiUpdateAnnouncer;
  BOOL _didShowBirthdayReminderBanner;
  BOOL _shouldSetupConfettiAfterViewIsConstructed;
  IGBirthdayLogger *_birthdayLogger;
  BOOL _shouldAutoFollow;
  NSString *_autoFollowMediaId;
  BOOL _hasFetchedFollowStatus;
  BOOL _hasFetchedAdditionalData;
  BOOL _hasAttemptedAutoFollow;
  BOOL _hasFollowStatusRequestCompleted;
  UIViewController<_TtP38IGProfileWallOverlayViewControllerType38IGProfileWallOverlayViewControllerType_> *_profileWallOverlayViewController;
  id /* block */ _notesSheetReopenBlock;
  IGNavigationBar *_navigationBar;
  UIVisualEffectView *_navigationBarBlur;
  BOOL _hasBrowserPresented;
  BOOL _isDoneFetchingHeaderComponents;
  BOOL _shouldShowReelsOnboardingTab;
  NSString *_iabCallsiteSessionID;
  IGActivityIndicationState *_activityIndicationState;
  _TtC26IGProfilePerformanceLogger26IGProfilePerformanceLogger *_perfLogger;
  UIView *_statusBarBackgroundView;
  BOOL _hasDwelledMinimumTimeToShowProfileAndBrowseSurvey;
  FBTimer *_profileAndBrowseSurveyDwellTimer;
  BOOL _didTapSideTray;
  BOOL _didShowLargeCoverCTA;
  NSObject<IGProfilePrefetchManager> *_profilePrefetchManager;
  long long _interstitialType;
  BOOL _isPokeEnabled;
  _TtC9IGPokeKit22IGPokeNetworkingHelper *_pokeNetworkingHelper;
  _TtC9IGPokeKit26IGPokeToastPresenterHelper *_pokeToastPresenter;
  _TtC8IGPokeUI26IGPokeOverlayAnimationView *_pokeAnimationView;
  IGDirectNoteModel *_noteForSeenStateLoggingOnExit;
  NSObject<IGDirectCameraPresentationManagerProtocol> *_cameraPresentationManager;
  IGDirectThreadService *_threadService;
  BOOL _shouldForceStoryFetchOnLoad;
  BOOL _shouldDeferStoryFetch;
  BOOL _shouldPresentNotificationSettingsOnLoad;
  BOOL _didShowCreatorCommunityDialog;
  double _lastP92BadgeCountFetchTime;
  _TtC33IGProfileHeaderAvatarStatsManager33IGProfileHeaderAvatarStatsManager *_avatarStatsManager;
  _TtC27IGProfileHeaderMusicManager27IGProfileHeaderMusicManager *_musicManager;
  _TtC35IGProfileHeaderMutualContextManager35IGProfileHeaderMutualContextManager *_mutualContextManager;
  _TtC34IGProfileHeaderTransparencyManager34IGProfileHeaderTransparencyManager *_transparencyManager;
  _TtC32IGProfileHeaderStatusPillManager32IGProfileHeaderStatusPillManager *_statusPillManager;
  _TtC25IGProfileHeaderBioManager25IGProfileHeaderBioManager *_bioManager;
  _TtC42IGProfileHeaderNameAndBioEmptyStateManager42IGProfileHeaderNameAndBioEmptyStateManager *_nameAndBioEmptyStateManager;
  _TtC29IGProfileHeaderBannersManager29IGProfileHeaderBannersManager *_bannersManager;
  _TtC27IGProfileHeaderLinksManager27IGProfileHeaderLinksManager *_linksManager;
  _TtC38IGProfileHeaderActionBarShimmerManager38IGProfileHeaderActionBarShimmerManager *_actionBarShimmerManager;
  _TtC30IGProfileHeaderUsernameManager30IGProfileHeaderUsernameManager *_usernameManager;
  _TtC48IGProfileHeaderCreatorMarketplaceInsightsManager48IGProfileHeaderCreatorMarketplaceInsightsManager *_creatorMarketplaceInsightsManager;
  _TtC22IGProfileHeaderLogging21IGProfileHeaderLogger *_headerLogger;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSDictionary *magicMoveSubviews;
@property (readonly, copy, nonatomic) NSString *contextualAssetID;
@property (readonly, nonatomic) unsigned long long contextualNavigationType;
@property (readonly, nonatomic) double browserOffsetY;
@property (weak, nonatomic) NSObject<IGScrollViewListener> *scrollViewHostListner;

/* instance methods */
- (id)initWithConfiguration:(id)configuration accountSwitcherPresenter:(id)presenter isMainProfileSurface:(BOOL)surface shoppingSessionTracker:(id)tracker;
- (id)initWithConfiguration:(id)configuration accountSwitcherPresenter:(id)presenter isMainProfileSurface:(BOOL)surface feedSourcesManager:(id)manager shoppingSessionTracker:(id)tracker;
- (void)dealloc;
- (id)animatableView;
- (id)customNavigationBar;
- (id)opalFloatingButton;
- (void)setShouldImmediatelyTransitionToOpal:(BOOL)opal;
- (void)tryToShowBlockSurvey;
- (BOOL)isMainProfileSurface;
- (void)showProOnboardingChecklistFlow:(id)flow;
- (void)showShareBusinessPostToProfile:(id)profile targetUserID:(id)id;
- (BOOL)prefersNavigationBarDividerHidden;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })preferredContentInsets;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)updateUserActivityState:(id)state;
- (void)viewWillAppear:(BOOL)appear;
- (void)navigationLatencyLogging:(id)logging didStartTracking:(id)tracking;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (BOOL)prefersNavigationBarHidden;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (id)analyticsExtras;
- (id)userSession;
- (id)user;
- (id)ctaPresenterContext;
- (void)fetchAdditionalUserData;
- (id)storyTraySectionController;
- (void)findUsersViewDataSource:(id)source didLoadUserList:(id)list andNearbyBusinesses:(id)businesses;
- (void)findUsersViewDataSourceWillLoadUserList:(id)list;
- (void)findUsersViewDataSource:(id)source didLoadUserListFromCache:(id)cache;
- (void)findUsersViewDataSource:(id)source didFailWithError:(id)error;
- (void)findUsersViewDataSource:(id)source didLoadThumbnailsForUsers:(id)users;
- (void)findUsersViewDataSource:(id)source didLoadMoreUsers:(id)users allUsers:(id)users;
- (void)findUsersViewDataSource:(id)source didLoadAllUserIDs:(id)ids;
- (void)chainingSectionControllerDidDismissLocalDiscovery:(id)discovery;
- (void)chainingSectionControllerDidTapCloseButton:(id)button;
- (void)chainingSectionControllerDidTap:(id)tap reelOwner:(id)owner onStoryEntryView:(id)view;
- (void)chainingSectionControllerDidDismissAllItems:(id)items;
- (void)profileChainingSectionControllerDidTapFollow:(id)follow forUser:(id)user userAction:(long long)action;
- (void)profileChainingSectionControllerDidTapUser:(id)user;
- (void)profileChainingSectionControllerWillShowCard:(id)card forUser:(id)user;
- (void)_backPressed;
- (void)_fetchDeferredStoryPosts;
- (void)_configurePokesIfNeeded;
- (void)_showPokeButton:(BOOL)button;
- (void)_maybeRecordProfileVisitForSearchInstantSuggestions;
- (void)_didTapOpalFloatingButton;
- (id)findPinnedViewWithTooltipType:(long long)type;
- (void)userWasUpdated:(id)updated;
- (void)userTagsToReviewChanged;
- (void)_applicationDidEnterBackground:(id)background;
- (void)_networkingReachabilityDidChange:(id)change;
- (void)_applicationDidBecomeActive:(id)active;
- (void)friendStatusReceiverForUser:(id)user;
- (void)bulkFriendStatusesReceivedForUsers:(id)users;
- (void)storyUploadStartedWithCompositions:(id)compositions entryPoint:(long long)point;
- (void)storyUploadStartedWithReelOwner:(id)owner reelPK:(id)pk compositionId:(id)id shareType:(long long)type;
- (void)storyUpload:(id)upload removedFromReelOwner:(id)owner reelPK:(id)pk;
- (void)storyDidBeginUpload:(id)upload;
- (void)flagUser:(id)user;
- (void)userDetailDataControllerDidFetchMusicOnProfile:(id)profile;
- (void)userDetailDataControllerWillFetchFollowStatus:(id)status;
- (void)userDetailDataControllerDidFetchFollowStatus:(id)status;
- (void)userDetailDataController:(id)controller didFailToFetchFollowStatusWithError:(id)error;
- (void)userDetailDataControllerWillFetchAdditionalUserData:(id)data;
- (void)userDetailDataControllerDidFetchAdditionalUserData:(id)data;
- (void)userDetailDataController:(id)controller didFetchRecsFromFriendResponse:(id)response;
- (void)userDetailDataControllerDidFetchFollowRequestSocialContext:(id)context;
- (void)userDetailDataController:(id)controller checklistViewModel:(id)model;
- (void)userDetailDataControllerDidFetchReconAdCTAOnProfile:(id)profile isEligibleForOrganicCTA:(BOOL)cta;
- (void)userDetailDataController:(id)controller didFetchProfileNote:(id)note;
- (void)userDetailDataControllerDidFetchAllFetchTypes;
- (void)userDetailDataController:(id)controller didFailToFetchUserAdditionalDetailsWithErrorMessage:(id)message showAlert:(BOOL)alert isHardError:(BOOL)error;
- (void)userDetailDataControllerDidFetchUserPk:(id)pk;
- (void)userDetailDataControllerDidFetchFanClubSubscriptionNotificationStatusWithViewModel:(id)model;
- (void)userDetailDataControllerDidFailToFetchFanClubSubscriptionNotificationStatus;
- (void)userDetailDataControllerDidFetchFanClubSubscriptionDetails:(id)details canSeeButton:(BOOL)button;
- (void)didDismissQpMegaphoneSectionControllerPresenter:(id)presenter;
- (id)objectsForProfileHeader;
- (id)sectionControllerForProfileHeaderObject:(id)object listAdapter:(id)adapter;
- (void)profileActionBarControllerDidTapFollowingRelationship:(id)relationship;
- (void)profileActionBarController:(id)controller didTapFollowWithAction:(long long)action;
- (void)profileActionBarController:(id)controller didCompleteFollowAction:(long long)action;
- (void)profileActionBarController:(id)controller wantsToggleUserChaining:(BOOL)chaining;
- (void)profileActionBarControllerDidTapViewShop:(id)shop hasMultipleShopsLinked:(BOOL)linked;
- (void)profileActionBarController:(id)controller didTapContactSheetAction:(long long)action;
- (void)profileActionBarControllerDidTapSubscribeToFanClub:(id)club;
- (void)profileActionBarController:(id)controller didTapAction:(long long)action;
- (void)profileActionBarControllerDidTapMessageToOpenComposer:(id)composer;
- (void)profileActionBarController:(id)controller didTapCameraIconFromMessageComposerButton:(id)button;
- (void)_launchCameraView:(id)view;
- (void)_launchMessageComposerBottomsheet;
- (void)unfollowReciprocalControllerDidTapToast:(id)toast;
- (void)profileSimpleAvatarStatsSectionControllerDidTapPostCount:(id)count;
- (void)profileSimpleAvatarStatsSectionController:(id)controller didUpdatePostCount:(long long)count;
- (void)noteComposerViewControllerDidCreateNote:(id)note tapTarget:(long long)target destination:(id)destination;
- (void)noteComposerViewControllerDidAttemptFailedNoteMentionWithUsername:(id)username;
- (void)noteComposerViewControllerWillAppear;
- (void)noteComposerViewControllerWillDismissShouldShowBubble:(BOOL)bubble;
- (void)noteComposerViewControllerDidDismiss;
- (void)noteComposerViewControllerDidCompleteUploadForNote:(id)note;
- (void)profileAvatarActionsController:(id)controller showNoteComposerFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showNoteViewerWithNote:(id)note fromBirthdayIndicator:(BOOL)indicator;
- (void)profileAvatarActionsController:(id)controller showSelfNoteViewerWithNote:(id)note fromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showStoryCameraFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showStoryFromView:(id)view;
- (void)profileAvatarActionsControllerShowBirthdayVisibilitySettingsDialog:(id)dialog;
- (void)profileAvatarActionsControllerOpenBirthdayDirectThread:(id)thread;
- (void)_showBirthdayVisibilitySettingsDialog;
- (void)profileAvatarActionsController:(id)controller showPostLiveFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showBroadcastFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showProfilePictureActionSheetWithStory:(BOOL)story fromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showAvatarProfilePictureActionSheetFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showAvatarEditorFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showAvatarImmersiveHomeFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller showAvatarCoinFlipCustomizationScreenFromView:(id)view;
- (void)profileAvatarActionsController:(id)controller sendPoke:(id)poke isSuccess:(BOOL)success;
- (void)directNoteDetailsDidTapNewNoteWithModel:(id)model trayUserModel:(id)model itemLoggingModel:(id)model;
- (void)directNoteDetailsDidTapDeleteNote:(id)note itemLoggingModel:(id)model;
- (void)directNoteDetailsDidTapCloseFriendsAudienceLabel;
- (void)directNoteDetailsViewController:(id)controller didTapLink:(id)link note:(id)note;
- (void)directNoteDetailsViewController:(id)controller didTapLocationViewModel:(id)model;
- (void)directNoteDetailsViewController:(id)controller didOpenReactionListWithViewModel:(id)model noteModel:(id)model itemLoggingModel:(id)model;
- (void)directNoteDetailsViewControllerDidTapAudienceSize:(id)size;
- (void)directNoteDetailsViewController:(id)controller noteId:(id)id;
- (void)launchReplySheetOnInboxOpenForNote:(id)note;
- (void)profileAvatarActionsController:(id)controller showExpandedProfilePicFromView:(id)view isLongPress:(BOOL)press;
- (void)profileAvatarActionsController:(id)controller showExpandedAvatarViewFromView:(id)view;
- (void)directNoteDetailsViewController:(id)controller didTapViewProfileFromReactionForUser:(id)user;
- (BOOL)profilePictureHelperShouldShowRemovePicture:(id)picture;
- (void)profilePictureHelperRemovePictureButtonTapped:(id)tapped;
- (void)profilePictureHelperRemoveBirthdayEffectsButtonTapped:(id)tapped;
- (void)profilePictureHelper:(id)helper didFinishDownloadingProfilePicture:(id)picture fromOption:(long long)option;
- (void)profilePictureHelper:(id)helper didFinishDownloadingProfilePicture:(id)picture fromOption:(long long)option completion:(id /* block */)completion;
- (void)_presentProfilePictureUploadCompletedToast;
- (BOOL)profilePictureHelper:(id)helper supportsPresentingPhotoSyncReminderForProfilePictureAction:(long long)action;
- (void)profilePictureHelper:(id)helper showPhotoSyncedReminderDialogForAction:(long long)action withCompletionHandler:(id /* block */)handler;
- (void)profilePictureHelperShowAvatarCustomizationInterface:(id)interface;
- (BOOL)profilePictureHelperShouldShowRemoveBirthdayEffectsOption;
- (void)profilePictureHelperDidOpenEditProfilePicActionSheet;
- (id)profilePictureHelperAvatarPromptTitle:(id)title;
- (id)profilePictureHelperAvatarLoggingSurface;
- (id)profilePictureHelperAvatarLoggingMechanism;
- (id)profilePictureHelperAvatarPostCreationNuxLoggingSurface;
- (void)profileHeaderLinksManagerShouldOpenEnhancedLinkSheet:(id)sheet;
- (void)didSelectTextViewSectionController:(id)controller;
- (void)textViewSectionController:(id)controller didTapOnString:(id)string URL:(id)url;
- (void)textViewSectionController:(id)controller didLongTapOnString:(id)string URL:(id)url;
- (void)textViewSectionController:(id)controller didTapOnNonLinkedString:(id)string touchEvent:(unsigned long long)event;
- (void)navigationItemsControllerDidTapMore:(id)more;
- (void)navigationItemsControllerDidTapBack:(id)back;
- (void)navigationItemsControllerDidTapSideTray:(id)tray;
- (void)navigationItemsControllerLongPressSideTray:(id)tray;
- (void)navigationItemsControllerDidTapBagButton:(id)button;
- (void)navigationItemsControllerDidTapHeaderFollowButton:(id)button;
- (id)navigationBarTitleView;
- (void)_navigationItemsControllerDidTapManageButton;
- (void)navigationItemsControllerDidTapAdd:(id)add;
- (void)navigationItemsControllerDidTapWonderwallButton:(id)button;
- (void)navigationItemsControllerDidTapTitle:(id)title;
- (void)navigationItemsControllerDidTapAdditionalButton:(id)button;
- (void)navigationItemsControllerDidTapNotification:(id)notification;
- (void)navigationItemsControllerDidTapDirectButton:(id)button;
- (void)navigationItemsControllerDidTapShare:(id)share;
- (void)navigationItemsControllerDidChangeNotificationState:(id)state;
- (void)navigationItemsControllerDidTapPokeButton:(id)button;
- (void)navigationItemsControllerDidTapDiscoverAccountsButton:(id)button;
- (void)creationSheetDidSelectNewFeedPost:(id)post;
- (void)creationSheetDidSelectNewProfileOnlyPost:(id)post;
- (void)creationSheetDidSelectNewStory:(id)story;
- (void)creationSheetDidSelectNewStoryHighlight:(id)highlight;
- (void)creationSheetDidSelectNewMusicHighlight:(id)highlight;
- (void)creationSheetDidSelectNewReelsVideo:(id)video;
- (void)creationSheetDidSelectNewLive:(id)live;
- (void)creationSheetDidSelectNewPromotion:(id)promotion;
- (void)creationSheetDidSelectNewFundraiser:(id)fundraiser;
- (void)creationSheetDidSelectNewEvent:(id)event;
- (void)creationSheetDidSelectChannel:(id)channel withSessionID:(id)id;
- (void)creationSheetDidSelectRowWithNewBadge:(id)badge;
- (void)creationSheetDidSelectMadeForYou:(id)you;
- (void)creationSheetDidSelectCollection:(id)collection;
- (void)creatorViewController:(id)controller didCreateCollection:(id)collection hasSelectedItems:(BOOL)items module:(id)module;
- (void)businessConversionDidCompleteFlowShouldShowRenewedPrompt:(BOOL)prompt;
- (void)businessConversionPageContactExportFailedWithErrorMessage:(id)message;
- (void)creatorConversionDidComplete;
- (void)titleViewControllerDidTapTitle:(id)title;
- (void)titleViewControllerWillToggleAccountTray:(id)tray on:(BOOL)on;
- (void)blockedSectionControllerDidVerifyOverage:(id)overage;
- (struct CGSize { double x0; double x1; })blockedSectionControllerCellSize:(id)size;
- (void)profileMoreActionsSheetDidTapReportActionWithExtras:(id)extras;
- (void)profileMoreActionsSheetDidTapMuteUnmuteAction;
- (void)profileMoreActionsSheetDidTapRemoveFollower;
- (void)profileMoreActionsSheetDidTapAddToListAction;
- (void)profileMoreActionsSheetDidTapManageNotifications;
- (void)profileMoreActionsSheetDidTapSeeSharedActivity;
- (void)actionSheetDismissedWithButtonTitled:(id)titled;
- (void)tombstoneSectionControllerWantsDismissed:(id)dismissed;
- (struct CGSize { double x0; double x1; })tombstoneSectionControllerCellSize:(id)size;
- (void)invitePostFlow:(id)flow didCancelWithViewController:(id)controller;
- (void)invitePostFlow:(id)flow didCompleteWithViewController:(id)controller;
- (void)onboardingChecklistFlowDidComplete:(id)complete didPostFeedItem:(BOOL)item didStartFromRenewActivation:(BOOL)activation;
- (void)didDismissMegaphoneSectionController:(id)controller;
- (void)megaphoneSectionController:(id)controller didSelectButton:(id)button;
- (void)megaphoneSectionController:(id)controller logButtonClickIfNeeded:(id)needed;
- (void)mediaItemDeleted:(id)deleted storyReelPK:(id)pk;
- (void)storyDataController:(id)controller didUpdateReel:(id)reel refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller fetchItemsDidFailForReelPK:(id)pk error:(id)error refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didReturnNoStoryItemResultsForReelPK:(id)pk refreshType:(long long)type updateDuration:(double)duration;
- (void)storyViewer:(id)viewer didNavigateToStoryItem:(id)item;
- (void)storyViewerShouldRemoveEmptyStateStory:(id)story navigationAction:(long long)action;
- (void)storyViewerDidFinish:(id)finish navigationAction:(long long)action lastMediaID:(id)id viewerExitContextDict:(id)dict completion:(id /* block */)completion;
- (BOOL)storyViewerShouldPresentCamera:(id)camera;
- (void)storyViewer:(id)viewer didFocusOnReelWithPK:(id)pk;
- (void)storyViewerDidTapTryItOn:(id)on onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)storyViewerDidTapViewDay:(id)day;
- (void)storyViewerDidMute:(id)mute didMutePosts:(BOOL)posts;
- (void)storyViewerDidUnfollow:(id)unfollow;
- (void)storyViewerDidFollow:(id)follow;
- (void)storyViewerPresentationControllerDidFinishOnMediaId:(id)id;
- (void)storyViewerPresentationControllerDidPresentViewer:(id)viewer withReel:(id)reel;
- (void)storyViewerPresentationControllerDidFailToPresentViewer:(id)viewer;
- (void)storyViewerPresentationControllerWillFinishOnMediaId:(id)id viewerExitContextDict:(id)dict;
- (void)storyViewerPresentationControllerDidNavigateToMediaId:(id)id;
- (void)storyViewerPresentationControllerDidFocusOnReelWithPK:(id)pk;
- (void)storyDataController:(id)controller didUpdateBroadcast:(id)broadcast updateDuration:(double)duration;
- (void)storyDataController:(id)controller didDeleteBroadcast:(id)broadcast updateDuration:(double)duration;
- (void)storyDataController:(id)controller fetchBroadcastItemsDidFailWithError:(id)error refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didReturnNoBroadcastItemResultsForUserPK:(id)pk refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didUpdatePostLiveItem:(id)item updateDuration:(double)duration;
- (void)storyDataController:(id)controller didDeletePostLiveItem:(id)item updateDuration:(double)duration;
- (void)storyDataController:(id)controller fetchPostLiveItemsDidFailWithError:(id)error refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didReturnNoPostLiveItemResultsForUserPK:(id)pk updateDuration:(double)duration;
- (void)userSession:(id)session didChangeToPrivacyStatus:(long long)status;
- (void)didAcknowledgePrivacyToggleWarning;
- (void)accountTypeDidChange;
- (void)accountPrivacyDidChange;
- (void)accountLinkingDidChange;
- (void)favoriteUsersDidChange;
- (void)closeFriendsDidChange;
- (void)blockedUsersDidChange;
- (void)restrictedUsersDidChange;
- (void)mutedUsersDidChange;
- (void)profileScrollViewDidScrollPassingCTACell;
- (void)showARLinkViewController:(id)controller;
- (void)previewControllerWillPresentDirectShareSheetController:(id)controller;
- (void)directShareSheetControllerDidDismissReshareSheet:(id)sheet willPresentConfirmationToast:(BOOL)toast hasShared:(BOOL)shared;
- (void)directShareSheetControllerDidDismissConfirmationToast:(id)toast;
- (void)directShareSheetController:(id)controller didTapRecipient:(id)recipient selected:(BOOL)selected;
- (void)directShareSheetControllerDidSelect:(id)select sender:(id)sender directRecipients:(id)recipients externalServices:(id)services text:(id)text media:(id)media selectedPostPk:(id)pk sharedAttachments:(id)attachments;
- (void)directShareSheetControllerWillPresentConfirmationToast:(id)toast;
- (void)directShareSheetControllerDidTapSave:(id)save;
- (void)directShareSheetControllerDidShareToStory:(id)story;
- (void)highlightsCreationControllerDidFinish:(id)finish mode:(long long)mode reel:(id)reel highlightCoverModel:(id)model;
- (void)highlightsCreationControllerDidTapCancel:(id)cancel;
- (void)highlightsCreationControllerDidEditSuggestedHighlight:(id)highlight addedItems:(id)items removedItems:(id)items title:(id)title coverModel:(id)model;
- (void)highlightsCreationController:(id)controller didPublishSuggestHighlightType:(long long)type;
- (void)didSelectLabelSectionController:(id)controller;
- (void)screenshotObserverDidSeeScreenshotTaken:(id)taken;
- (void)screenshotObserverDidSeeActiveScreenCapture:(id)capture event:(long long)event;
- (void)profilePictureFullscreenViewControllerDidTakeScreenshot:(id)screenshot;
- (void)profilePictureFullscreenViewControllerDismissed:(id)dismissed;
- (void)profilePictureFullscreenViewController:(id)controller didFlipToSide:(long long)side;
- (void)profilePictureFullscreenViewController:(id)controller navigateToProfileTabUsingURL:(id)url after:(double)after;
- (void)profilePictureFullscreenViewControllerDidCompleteZoomTransition:(id)transition;
- (void)profilePictureFullscreenViewControllerDidBeginUserZoom:(id)zoom;
- (void)profilePictureFullscreenViewControllerDidEndUserZoom:(id)zoom;
- (void)creationViewController:(id)controller didDismissWithExitPoint:(long long)point destination:(long long)destination storySendTarget:(long long)target toDirectRecipients:(id)recipients image:(id)image storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids completion:(id /* block */)completion;
- (void)creationViewController:(id)controller didEnterState:(long long)state;
- (void)creationViewController:(id)controller willShareToDirectRecipients:(id)recipients;
- (void)creationViewController:(id)controller didFinishWithExitPoint:(long long)point shouldAnimateTransition:(BOOL)transition isNavigationHandledByPresenter:(BOOL)presenter;
- (void)creationViewControllerWillDismiss:(id)dismiss;
- (id)storyTrayViewModelsForLoggingContext;
- (long long)partialModalSheetViewControllerPreferredTabBarBehavior:(id)behavior;
- (id)dynamicPageViewController:(id)controller viewControllerForPageWithIdentifier:(id)identifier;
- (BOOL)dynamicPageViewController:(id)controller canDisplayPlaceholderViewForPageWithIdentifier:(id)identifier;
- (id)dynamicPageViewController:(id)controller placeholderViewForPageWithIdentifier:(id)identifier;
- (void)dynamicPageViewController:(id)controller didSelectPageWithIdentifier:(id)identifier reason:(long long)reason;
- (void)dynamicPageViewController:(id)controller willDisplayPageWithIdentifier:(id)identifier;
- (void)dynamicPageViewControllerWillBeginDragging:(id)dragging;
- (void)dynamicPageViewController:(id)controller didEndDisplayingPageWithIdentifier:(id)identifier;
- (void)dynamicPageViewController:(id)controller willChangeRepresentationStylePageWithIdentifier:(id)identifier newRepresentationStyle:(long long)style previousRepresentationStyle:(long long)style;
- (void)dynamicPageViewController:(id)controller didUpdateSelectionProgress:(double)progress betweenPageWithIdentifier:(id)identifier andPageWithIdentifier:(id)identifier;
- (double)profileTabViewControllerAdditionalTopContentInset:(id)inset;
- (double)profileTabViewControllerAdditionalTopObstructingContentInset:(id)inset;
- (BOOL)profileTabViewControllerIsDisplayedInPopover:(id)popover;
- (BOOL)profileTabViewControllerShouldReloadContentOnPullToRefresh;
- (void)profileTabViewControllerNeedsContentOffsetUpdate:(id)update;
- (void)profileTabViewControllerDidInitiatePullToRefresh:(id)refresh;
- (void)switchToGridsTab;
- (void)sundialProfileGridViewControllerDidSelectMedia;
- (void)sundialProfileGridViewControllerDidLoadWithSucccess:(BOOL)succcess;
- (void)sundialProfileGridViewLoadFinished;
- (void)profileFeedViewController:(id)controller didTapGridPost:(id)post;
- (void)profileFeedViewController:(id)controller didCommitPreviewFromGridPost:(id)post;
- (void)profileFeedViewController:(id)controller showOpenCarouselPendingPostToast:(id)toast;
- (void)_sendOpenCarouselDismissPendingMediaProfileBannerMutationWithMediaId:(id)id;
- (void)profileFeedViewControllerDidChangeFeedObjects:(id)objects;
- (void)profileFeedViewLoadFinished;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)refreshControl:(id)control didReleaseWithRefreshControlState:(long long)state;
- (void)refreshControl:(id)control didUpdateAppearingProgress:(double)progress;
- (void)refreshControlDidEndFinishLoadingAnimation:(id)animation;
- (void)didChangePrivacyFollowingAcceptRateLimit;
- (void)viewControllerViewDidLoad:(id)load;
- (void)profileHeaderViewDidChangeContentSize:(id)size;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (void)_multidirectionalPanGestureRecognizerDidRecognize:(id)recognize;
- (void)_tabControlValueChanged:(id)changed;
- (id)trackingModel;
- (void)didDisplayUnfollowChainingController:(id)controller;
- (void)feedCreationFlowDidFinishWithType:(long long)type sharingInfo:(id)info postId:(id)id;
- (void)feedCreationFlowDidCancelWithSelectedAssetMetadatas:(id)metadatas;
- (id)feedCreationFlowWillNavigateToTarget;
- (void)feedCreationFlowDidSaveSundialDraft:(id)draft;
- (void)feedCreationFlowDidShareSundialComposition:(id)composition toDestination:(long long)destination;
- (id)extraDictionaryForMedia:(id)media directResponseInfo:(id)info;
- (void)pseudoBlockAlertBlockActionWasPressed:(id)pressed actionString:(id)string threadInfo:(id)info;
- (void)pseudoBlockAlertMainActionWasPressed:(id)pressed threadInfo:(id)info;
- (void)presentCameraWithMetadata:(id)metadata captureFlowViewModel:(id)model mode:(long long)mode entryPoint:(long long)point;
- (void)presentCameraWithMetadata:(id)metadata captureFlowViewModel:(id)model mode:(long long)mode entryPoint:(long long)point existingWaterfallEventName:(id)name animated:(BOOL)animated;
- (void)presentSidecarEditorWithComposition:(id)composition metadata:(id)metadata captureFlowViewModel:(id)model mode:(long long)mode entryPoint:(long long)point;
- (void)presentShareMediaOptionsWithMediaMetadata:(id)metadata;
- (BOOL)isUserInFeedCreationFlow;
- (void)sundialDraftStore:(id)store didUpdateNumberOfSavedDrafts:(long long)drafts;
- (void)sundialDraftStoreDidFinishLoadingSavedDrafts:(id)drafts;
- (void)sundialDraftStore:(id)store didFinishDuplicatingDraft:(id)draft;
- (void)sundialDraftStore:(id)store didSaveDraft:(id)draft;
- (void)sundialDraftStoreClearPreviewImageCache:(id)cache;
- (void)sundialCloudDraftStore:(id)store didUpdateNumberOfCloudDrafts:(long long)drafts;
- (void)sundialCloudDraftStore:(id)store didFetchedDraft:(id)draft;
- (void)sundialCloudDraftStore:(id)store didFailToDownloadDraftWithId:(id)id;
- (void)didReorderProfileGridForUserPk:(id)pk;
- (void)profileInfoUpdated;
- (void)didUpdateBadge:(id)badge;
- (void)listAdapter:(id)adapter didFinishUpdate:(long long)update animated:(BOOL)animated;
- (void)didReceiveTransactionUpdate:(id)update;
- (BOOL)accessibilityScroll:(long long)scroll;
- (BOOL)_shouldShowNUXProfileCompletion;
- (void)standaloneFundraiserDidChangeForUser:(id)user;
- (void)featuredUserDismissed:(id)dismissed;
- (BOOL)canRespondToGesture:(id)gesture;
- (void)profileUpcomingEventControllerDidTapOpenSettings:(id)settings;
- (void)profileUpcomingEventControllerDidTapOpenLiveNotificationSettings:(id)settings;
- (void)profileUpcomingEventController:(id)controller didEditUpcomingEvent:(id)event;
- (void)profileUpcomingEventController:(id)controller didDeleteUpcomingEvent:(id)event;
- (void)profileUpcomingEventController:(id)controller didTapShareStoryForEvent:(id)event;
- (void)profileUpcomingEventController:(id)controller didTapShareAsPostForEvent:(id)event mediaCaptureMode:(long long)mode mediaMetadat:(id)metadat captureFlowViewModel:(id)model;
- (void)storyPostCaptureEditingViewController:(id)controller didShareToStory:(long long)story andDirectRecipients:(id)recipients storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids exitPoint:(long long)point completion:(id /* block */)completion;
- (void)storyPostCaptureEditingViewControllerDidCancel:(id)cancel;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendRollCallWithDirectRecipients:(id)recipients;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendPermanentMediaWithAsset:(id)asset entryPoint:(long long)point;
- (void)storyPostCaptureEditingViewController:(id)controller didTapConfirmNotesPogVideoWithComposition:(id)composition;
- (void)storyTrayDataSourceWillUpdate:(id)update;
- (void)storyTrayDataSource:(id)source didUpdateReel:(id)reel positionChanged:(BOOL)changed;
- (void)storyTrayDataSource:(id)source updateFailedWithRefreshType:(long long)type error:(id)error;
- (void)storyTrayDataSource:(id)source didUpdateWithRefreshType:(long long)type deliveryLoggingKey:(id)key;
- (void)refreshTraySectionControllerWithStoryAdItems:(id)items;
- (void)showCreationSheet;
- (void)hypercardManager:(id)manager didUpdateHypercardWithViewModel:(id)model;
- (id)navState;
- (id)analyticsModuleUri;
- (void)profileImageOptionsViewControllerDidDismiss:(id)dismiss;
- (void)profileImageOptionsViewControllerShouldForceUpdateViewForCoinFlipEnabled:(id)enabled;
- (void)coinFlipCustomizationViewControllerDidDismiss:(id)dismiss;
- (void)tabBarChangedTab:(id)tab launcherSetProvider:(id)provider;
- (id)scrollView;
- (id)scrollViewAnnouncer;
- (void)cleanupAfterTabBarResetIfNecessary;
- (void)scrollToTopOnTappedTabBar;
- (void)profileSimpleAvatarStatsSectionControllerDidFlipToAvatarView:(id)view;
- (void)profileSimpleAvatarStatsSectionControllerDidTapAvatarView:(id)view;
- (void)profileSimpleAvatarStatsSectionControllerShouldLogProfileNoteImpressionWithNoteModel:(id)model;
- (void)profileSimpleAvatarStatsSectionControllerDidUpdateHeight:(id)height;
- (void)profileSimpleAvatarStatsSectionControllerDidConfigureProfilePictureView:(id)view;
- (void)collapsibleNavigationCoordinator:(id)coordinator didUpdateNavigationBarPercentCollapsed:(double)collapsed;
- (void)collapsibleNavigationCoordinator:(id)coordinator didUpdateTabBarPercentCollapsed:(double)collapsed;
- (void)browser:(id)browser willExpandToFullscreen:(unsigned long long)fullscreen;
- (void)browser:(id)browser willDismiss:(unsigned long long)dismiss completion:(id /* block */)completion;
- (void)browser:(id)browser isPeekState:(BOOL)state;
- (id)bottomSheetViewPassThrough:(id)through hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (id)directResponseInfo;
- (void)_navigateToProfileWallComposer:(id)composer;
- (void)directReplyControllerDidTapLocationViewModel:(id)model;
- (void)directReplyControllerDidTapNotesActionMenuButtonWithViewModel:(id)model;
- (void)directReplyControllerDidTapProfileNoteActionMenuButtonWithNoteModel:(id)model;
- (void)directReplyControllerDidReactToNoteWithEmojiUnicode:(id)unicode noteModel:(id)model isFromDeepLink:(BOOL)link;
- (void)directReplyControllerDidTapProfileAvatarWithNoteModel:(id)model notePosition:(long long)position;
- (void)directReplyControllerDidTapBirthdaySettings;
- (void)_openBirthdayVisibilitySettings;
- (void)highlightsStoryTrayEditRowSectionControllerDidTapEditButton:(id)button;
- (void)avatarStatusManager:(id)manager didUpdateAvatarStatus:(long long)status;
- (void)avatarStatusManagerDidCreateAvatar:(id)avatar;
- (void)avatarStatusManagerDidDeleteAvatar:(id)avatar;
- (void)avatarStatusManagerDidUpdateAvatar:(id)avatar;
- (void)highlightsTrayUpdatedForUserPk:(id)pk;
- (void)highlightUpdated:(id)updated;
- (void)zoomTransitionWillPrepareWithContext:(id)context;
- (void)zoomTransitionWillBeginWithContext:(id)context;
- (BOOL)shouldZoomFromTransition;
- (void)prepareBackwardZoomTransitionWithContext:(id)context completionHandler:(id /* block */)handler;
- (id)transitionZoomViewFromItem:(id)item withZoomContext:(id)context shouldMoveToVisiblePosition:(BOOL)position;
- (void)didCompleteBackwardZoomTransition;
- (void)didDeleteFollowRequestFromUser:(id)user;
- (void)gyroMotionManagerDidUpdateWithRotationX:(double)x rotationY:(double)y rotationZ:(double)z;
- (void)gyroMotionManagerDidRaiseDevice;
- (void)gyroMotionManagerDidLowerDevice;
- (void)presentationManagerWillSend:(id)send withDirectRecipients:(id)recipients;
- (void)presentationManagerWillDismiss:(id)dismiss withDirectRecipients:(id)recipients;
- (void)dismissalDestinationViewForRecipients:(id)recipients sourceIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)presentationManagerDidDismiss:(id)dismiss cameraType:(long long)type withDirectRecipients:(id)recipients;
@end

#endif /* IGProfileViewController_h */
