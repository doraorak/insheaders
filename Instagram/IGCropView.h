//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGCropView_h
#define IGCropView_h
@import Foundation;

#include "UIView.h"
#include "IGCropViewScrollView.h"
#include "IGCropViewUserInteractionDelegate-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"

@class IGCameraGuideView, NSString, UIPanGestureRecognizer, UITapGestureRecognizer, UIView;

@interface IGCropView : UIView<UIScrollViewDelegate> {
  /* instance variables */
  IGCropViewScrollView *_scrollView;
  BOOL _isInteracting;
  BOOL _didSetPinchProperties;
  BOOL _nonSquareEnabled;
  long long _preLockCropMode;
  UIView *_circularCropperView;
  UIView *_cardCropperView;
  IGCameraGuideView *_guideView;
  UIView *_nonSquareCropper;
  struct CGSize { double width; double height; } _nonSquareCropperSize;
  double _currentMinAspectRatio;
  double _currentMaxAspectRatio;
  BOOL _shouldUseFirstInformedRatio;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _firstInformedRect;
  long long _aspectRatioState;
  BOOL _aspectRatioLocked;
  BOOL _canResizeToFullScreen;
  BOOL _showsGuideView;
  BOOL _alwaysShowGuideView;
  double _cropAngle;
  long long _maskStyle;
  UITapGestureRecognizer *_tap;
  UIPanGestureRecognizer *_minimizePan;
  NSObject<IGCropViewUserInteractionDelegate> *_userInteractionDelegate;
}

@property (retain, nonatomic) UIView *contentView;
@property (nonatomic) BOOL zoomEnabled;
@property (nonatomic) BOOL bounces;
@property (nonatomic) struct CGPoint { double x0; double x1; } cropCenter;
@property (nonatomic) long long cropMode;
@property (nonatomic) BOOL mixedAspectRationM1Enabled;
@property (nonatomic) BOOL mixedAspectRationM2Enabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame minAspectRatio:(double)ratio maxAspectRatio:(double)ratio;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)resetCropViewWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)isZoomEnabled;
- (void)setCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRect;
- (double)_unlockedAspectRatio:(double)ratio useAllowedBounding:(BOOL)bounding;
- (struct IGCropInfo { struct CGSize { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })cropInfo;
- (id)viewForZoomingInScrollView:(id)view;
- (BOOL)scrollViewShouldScrollToTop:(id)top;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewDidZoom:(id)zoom;
- (void)scrollViewDidEndZooming:(id)zooming withView:(id)view atScale:(double)scale;
- (void)_checkInteractions:(id)interactions;
- (void)setShouldUseFirstInformedRatio:(BOOL)ratio withRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
@end

#endif /* IGCropView_h */
