//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFHeadlessAudioEngine_h
#define FNFHeadlessAudioEngine_h
@import Foundation;

#include "FNFPlayerAudioEngine-Protocol.h"

@class NSString;
@protocol FNFPlayerAudioEngineDelegate, FNFPlayerAudioEngineFrameDataDelegate, FNFPlayerHeaderDataDelegate;

@interface FNFHeadlessAudioEngine : NSObject<FNFPlayerAudioEngine> {
  /* instance variables */
  NSObject<FNFPlayerAudioEngineFrameDataDelegate> *_audioEngineFrameDataDelegate;
  NSObject<FNFPlayerAudioEngineDelegate> *_audioEngineDelegate;
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _asbd;
  BOOL _hasNoMoreFramesToEnqueue;
  float _volume;
  float _rate;
}

@property (weak, nonatomic) NSObject<FNFPlayerHeaderDataDelegate> *headerDataDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDelegate:(id)delegate;
- (void)setAudioEngineFrameDataDelegate:(id)delegate;
- (void)setAudioStreamBasicDescription:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })description extraParameters:(id)parameters sampleFrameSize:(unsigned int)size minSampleFrameSize:(unsigned int)size isAudioABR:(BOOL)abr representationID:(id)id;
- (void)setAudioEngineDelegate:(id)delegate;
- (void)setTimeDomainPitchAlgorithmEnabled:(BOOL)enabled;
- (void)setVarispeedPitchAlgorithmEnabled:(BOOL)enabled;
- (BOOL)isReadyToPlayWithStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)prepareToPlay;
- (double)playWithStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)pause;
- (void)pauseWithoutDevicePause;
- (void)stop;
- (void)reset;
- (void)flush;
- (void)stopLoadingData;
- (void)resumeEnqueuingData;
- (void)invalidate;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })getCurrentTime;
- (void)setVolume:(float)volume rampTime:(float)time;
- (float)volume;
- (void)enableLevelMeteringWithCallback:(id /* block */)callback;
- (void)sendCurrentAudioLevelToCallback;
- (void)removeLevelMetering;
- (void)setRate:(float)rate;
- (float)rate;
- (void)setOutputEffects:(id)effects;
- (void)setLoggingContext:(id)context;
- (id)stateInfo;
- (BOOL)isABRSupported;
- (void)pauseRequestingAudioData;
- (void)audioQueueDidOutputForBuffer:(struct AudioQueueBuffer *)buffer;
- (void)audioQueueDidError:(id)error withStatus:(int)status;
- (void)audioQueueDidChangeRunning:(BOOL)running;
- (void)_readDataIntoBuffer;
@end

#endif /* FNFHeadlessAudioEngine_h */
