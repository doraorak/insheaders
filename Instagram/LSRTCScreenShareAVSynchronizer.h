//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef LSRTCScreenShareAVSynchronizer_h
#define LSRTCScreenShareAVSynchronizer_h
@import Foundation;

@class NSMutableArray, NSThread;
@protocol OS_dispatch_queue, {AudioConverterInputData="bytes"{vector<char, std::allocator<char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<char *, std::allocator<char>>="__value_"*}}"offset"Q}, {vector<unsigned char, std::allocator<unsigned char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::allocator<unsigned char>>="__value_"*}};

@interface LSRTCScreenShareAVSynchronizer : NSObject {
  /* instance variables */
  NSMutableArray *_audioQueue;
  NSMutableArray *_videoQueue;
  NSThread *_workingThread;
  long long _firstFlushedMediaTimestamp;
  long long _firstFlushedPayloadTimestamp;
  unsigned int _sampleRate;
  BOOL _active;
  BOOL _multipleAudioChannelsEnabled;
  BOOL _audioEnabled;
  double _synchronizerFrequencyInMs;
  double _appVolumeMultiplier;
  struct OpaqueVTDecompressionSession * _decompressionSession;
  struct vector<unsigned char, std::allocator<unsigned char>> { char *__begin_; char *__end_; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char *__value_; } __end_cap_; } _tmpBuffer;
  id _context;
  struct { undefined *didRequestResetCompressionSession; } _funcTable;
  struct OpaqueAudioConverter * _audioConverter;
  struct AudioConverterInputData { struct vector<char, std::allocator<char>> { char *__begin_; char *__end_; struct __compressed_pair<char *, std::allocator<char>> { char *__value_; } __end_cap_; } bytes; unsigned long long offset; } _dataBuffer;
  unsigned int _currentFrameOrientation;
  struct __CVPixelBufferPool * _frameBufferPool;
  struct __RSScreenShareApi * _screenShareApi;
  struct __RSAudioModule * _audioModule;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;

/* instance methods */
- (id)initWithScreenShareApi:(struct __RSScreenShareApi *)api audioModule:(struct __RSAudioModule *)module multipleAudioChannelsEnabled:(BOOL)enabled audioEnabled:(BOOL)enabled frequencyInMs:(double)ms appVolumeMultiplier:(double)multiplier highKhzEnabled:(BOOL)enabled callbackQueue:(id)queue funcTable:(struct { undefined * x0; })table context:(id)context;
- (void)_runWorkingThread;
- (void)stopSynchronizer;
- (void)dealloc;
@end

#endif /* LSRTCScreenShareAVSynchronizer_h */
