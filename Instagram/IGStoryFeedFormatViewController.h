//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryFeedFormatViewController_h
#define IGStoryFeedFormatViewController_h
@import Foundation;

#include "UIViewController.h"
#include "IGActionableConfirmationToastPresenting-Protocol.h"
#include "IGBugReportingRageShakeInterceptionProtocol-Protocol.h"
#include "IGCameraAspectRatioOverlayView.h"
#include "IGCameraNavigationController.h"
#include "IGCameraViewController.h"
#include "IGCameraZoomControllerDelegate-Protocol.h"
#include "IGCreationNavigationPresentable-Protocol.h"
#include "IGFeedCreationFlowDelegate-Protocol.h"
#include "IGQuickCamCaptureButtonDelegate-Protocol.h"
#include "IGStoryCameraOverlayViewControllerDelegate-Protocol.h"
#include "IGSundialFormatViewControllerProtocol-Protocol.h"
#include "IGSundialPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "_TtC16IGFeedSharingQPL22IGFeedSharingQPLLogger.h"

@class IGAPIMediaPromptData, IGAudioTrackClip, IGCameraZoomController, IGStoryDrawerViewController, IGUserSession, NSString;
@protocol IGSundialFormatViewControllerProtocolDelegate, UIViewController<IGStoryCameraOverlayViewControlling;

@interface IGStoryFeedFormatViewController : UIViewController<IGStoryCameraOverlayViewControllerDelegate, IGCameraZoomControllerDelegate, IGQuickCamCaptureButtonDelegate, IGFeedCreationFlowDelegate, UIGestureRecognizerDelegate, IGSundialPostCaptureEditingViewControllerDelegate, IGActionableConfirmationToastPresenting, IGBugReportingRageShakeInterceptionProtocol, IGSundialFormatViewControllerProtocol> {
  /* instance variables */
  IGUserSession *_userSession;
  IGCameraZoomController *_zoomController;
  IGCameraAspectRatioOverlayView *_aspectRatioOverlayView;
  IGCameraNavigationController *_feedCameraNavigationController;
  IGStoryDrawerViewController *_feedGalleryDrawerViewController;
  double _galleryRevealPercentage;
  NSString *_upcomingEventPk;
  IGAudioTrackClip *_audioTrackClip;
  IGAPIMediaPromptData *_addYoursPromptModel;
  NSString *_customTitle;
  BOOL _mediaLibraryScrolling;
  _TtC16IGFeedSharingQPL22IGFeedSharingQPLLogger *_feedQPLLogger;
  BOOL _isMultiSelecting;
  long long _mediaAudience;
  BOOL _hideFormatPicker;
  BOOL _shouldLandOnDrafts;
  BOOL _shouldShareToFeed;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<IGSundialFormatViewControllerProtocolDelegate> *delegate;
@property (readonly, nonatomic) long long prefersBottomLeftButtonType;
@property (readonly, nonatomic) BOOL isManagingCameraView;
@property (readonly, nonatomic) BOOL requiresCameraAccess;
@property (retain, nonatomic) IGCameraViewController *cameraViewController;
@property (retain, nonatomic) UIViewController<IGStoryCameraOverlayViewControlling> *overlayViewController;
@property (copy, nonatomic) id /* block */ galleryViewControllerProvider;
@property (retain, nonatomic) NSObject<IGCreationNavigationPresentable> *creationPresenter;

/* instance methods */
- (id)initWithUserSession:(id)session upcomingEvent:(id)event audioTrackClip:(id)clip addYoursPromptModel:(id)model customTitle:(id)title mediaAudience:(long long)audience shouldLandOnDrafts:(BOOL)drafts shouldShareToFeed:(BOOL)feed;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidLayoutSubviews;
- (BOOL)canRespondToGesture:(id)gesture;
- (void)storyFormatViewControllerWillAppear:(BOOL)appear;
- (void)storyFormatViewControllerDidAppear:(BOOL)appear;
- (void)storyFormatViewControllerWillDisappear:(BOOL)disappear;
- (void)storyFormatViewControllerDidDisappear:(BOOL)disappear;
- (void)didDismissPostCaptureWithoutSharing;
- (void)didDismissPostCaptureBySharing;
- (void)_handleDoubleTap:(id)tap;
- (void)_handleSingleTap:(id)tap;
- (void)_handleGalleryPanGesture:(id)gesture;
- (void)zoomController:(id)controller didChangeZoomScaleBy:(double)by;
- (void)captureButtonDidZoomScale:(double)scale;
- (void)zoomControllerDidStopZoom:(id)zoom withGestureRecognizer:(id)recognizer;
- (void)captureButtonDidReleaseBeforeExpandingFinished;
- (void)captureButtonDidReleaseAfterExpandingFinished;
- (void)captureButtonDidTouchDown;
- (void)captureButtonDidReleaseFromInterruption;
- (void)captureButtonDidBeginExpanding;
- (void)captureButtonDidEndExpanding;
- (void)captureButtonDidConfirm;
- (void)feedCreationFlowDidCancelWithSelectedAssetMetadatas:(id)metadatas;
- (void)feedCreationFlowDidFinishWithType:(long long)type sharingInfo:(id)info postId:(id)id;
- (id)feedCreationFlowWillNavigateToTarget;
- (void)feedCreationFlowDidShareSundialComposition:(id)composition toDestination:(long long)destination;
- (void)feedCreationFlowDidSaveSundialDraft:(id)draft;
- (BOOL)storyCameraOverlayViewControllerDialShouldAllowVideoCapture:(id)capture;
- (void)storyCameraOverlayViewController:(id)controller didSwitchFromCameraMode:(id)mode toCameraMode:(id)mode;
- (void)storyCameraOverlayViewControllerDidTapSwitchCameras:(id)cameras;
- (void)storyCameraOverlayViewControllerDidTapHistoryButton:(id)button;
- (void)storyCameraOverlayViewControllerDidAbortCameraPermissions:(id)permissions;
- (void)storyCameraOverlayViewControllerDidTapCloseButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapLightingButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapGalleryButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapAudioButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapShutterButton:(id)button;
- (void)storyCameraOverlayViewController:(id)controller didEndScrollOnCameraMode:(id)mode;
- (void)storyCameraOverlayViewControllerDidTapSettingsButton:(id)button;
- (void)storyCameraOverlayViewMoreInfoSheetDidEnterFullscreenMode:(id)mode;
- (void)storyCameraOverlayViewMoreInfoSheetDidLeaveFullscreenMode:(id)mode;
- (void)storyCameraOverlayViewController:(id)controller didToggleNetworkAccess:(BOOL)access;
- (void)storyCameraOverlayViewControllerDialDidFailVideoCapture:(id)capture;
- (void)storyCameraOverlayViewControllerDialDidStartVideoCapture:(id)capture;
- (void)storyCameraOverlayViewControllerDialDidStopVideoCapture:(id)capture;
- (void)storyCameraOverlayViewController:(id)controller didSelectAREffectScrollingSelectorItemAtIndex:(long long)index;
- (void)storyCameraOverlayViewController:(id)controller didEndScrollingOnAREffectScrollingSelectorItemIndex:(long long)index;
- (void)storyCameraOverlayViewController:(id)controller canvasModeViewControllerDidShareToStory:(long long)story andDirectRecipients:(id)recipients;
- (BOOL)storyCameraOverlayViewController:(id)controller shouldTapSticker:(id)sticker;
- (void)storyCameraOverlayViewController:(id)controller didTapSticker:(id)sticker;
- (void)storyCameraOverlayViewController:(id)controller didToggleMuteButton:(BOOL)button;
- (void)storyCameraOverlayViewDidUpdatePermissions:(id)permissions;
- (void)storyCameraOverlayView:(id)view didScaleZoom:(double)zoom;
- (void)storyCameraOverlayView:(id)view didZoomByPercent:(double)percent;
- (void)storyCameraOverlayViewControllerDidBeginHandsFreeCountdown:(id)countdown;
- (void)storyCameraOverlayViewController:(id)controller didFinishHandsFreeCountdown:(BOOL)countdown;
- (void)storyCameraOverlayView:(id)view didChangePickerValueWithIndex:(long long)index;
- (void)storyCameraOverlayView:(id)view didChangeSliderWithValue:(double)value;
- (void)storyCameraOverlayView:(id)view didChangeText:(id)text;
- (void)storyCameraOverlayViewDidExitTextInput:(id)input;
- (void)storyCameraOverlayViewDidExitEditableTextInput:(id)input text:(id)text;
- (void)storyCameraOverlayViewControllerTrayDidAppear:(id)appear;
- (void)storyCameraOverlayViewControllerTrayDidDisappear:(id)disappear;
- (void)storyCameraOverlayViewControllerDidTapTryIt:(id)it onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)storyCameraOverlayViewController:(id)controller didSelectShareUpcomingEvent:(id)event;
- (void)storyCameraOverlayViewControllerDidTapUpcomingEventsOption:(id)option;
- (void)storyCameraOverlayViewController:(id)controller didTapShareStoryForEvent:(id)event;
- (void)storyCameraOverlayViewControllerDidExitAddYoursBrowsing:(id)browsing withPromptStickerView:(id)view;
- (void)storyCameraOverlayViewController:(id)controller didTapSUPButton:(long long)supbutton completion:(id /* block */)completion;
- (void)storyCameraOverlayViewControllerDidTapSUPRequestCapture:(id)capture;
- (void)storyCameraOverlayViewControllerDidTapAnonymityButton:(id)button;
- (long long)preferredStatusBarStyle;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })cameraViewControllerSafeAreaInsets:(id)insets;
- (void)cameraViewController:(id)controller didChangeLightingMode:(long long)mode;
- (void)cameraViewControllerWillStopRecording:(id)recording;
- (void)cameraViewControllerDidStopRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration error:(id)error;
- (void)cameraViewController:(id)controller didUpdateRecordProgress:(double)progress;
- (void)cameraViewController:(id)controller didFinishWithDevicePosition:(long long)position videoInfos:(id)infos images:(id)images;
- (void)cameraViewController:(id)controller failedToCapturePhotoWithError:(id)error;
- (void)cameraViewController:(id)controller didFinishWithBoomerangManager:(id)manager;
- (void)cameraViewController:(id)controller didChangeCameraState:(long long)state;
- (void)cameraViewController:(id)controller willSwitchFromCameraPosition:(long long)position;
- (void)cameraViewController:(id)controller didSwitchToCameraPosition:(long long)position withUserInput:(unsigned long long)input;
- (void)cameraViewController:(id)controller captureDidBecomeAvailable:(BOOL)available;
- (void)cameraViewController:(id)controller didStartCaptureSessionWithCameraPosition:(long long)position cameraOrientation:(long long)orientation;
- (void)cameraViewControllerDidReceiveFirstFrame:(id)frame;
- (void)cameraViewControllerDidStartCameraSwitch:(id)switch;
- (void)cameraViewController:(id)controller didReceiveFirstFrameAfterSwitchingCamerasWithCameraPosition:(long long)position cameraOrientation:(long long)orientation;
- (void)cameraViewControllerDidStopCapture:(id)capture;
- (void)cameraViewControllerWillRequestStartRecording:(id)recording;
- (void)cameraViewControllerDidRequestStartRecording:(id)recording;
- (void)cameraViewControllerDidStartRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)cameraViewController:(id)controller startAudioSessionDidError:(id)error;
- (void)cameraViewControllerDidUpdateLightingCapability:(id)capability;
- (void)cameraViewController:(id)controller didToggleHDR:(BOOL)hdr;
- (void)cameraViewControllerDidPauseRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)cameraViewControllerDidResumeRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)cameraViewControllerWantsDisableOfMultiCam:(id)cam;
- (void)cameraNavigationController:(id)controller didUpdateChildViewControllers:(id)controllers;
- (void)cameraNavigationController:(id)controller didShowSelectAlbumVC:(BOOL)vc;
- (void)cameraNavigationControllerDidTapCameraButton:(id)button;
- (void)cameraNavigationControllerDidToggleMultiSelectButton:(id)button isSelected:(BOOL)selected;
- (void)cameraNavigationController:(id)controller mediaLibraryDidUpdateScrollState:(BOOL)state;
- (void)cameraNavigationController:(id)controller didResetMediaMetadata:(id)metadata;
- (void)cameraNavigationController:(id)controller mediaLibraryDidTapAsset:(id)asset selectedAssetsCount:(unsigned long long)count;
- (void)showAREffectTextInstructions:(id)instructions;
- (void)showAREffectTextInstructions:(id)instructions forDuration:(double)duration;
- (void)hideAREffectInstructions;
- (id)analyticsModule;
- (long long)preferredTabBarBehavior;
- (double)actionableConfirmationToastBottomPadding;
- (double)actionableConfirmationToastTopPadding;
- (void)sundialPostCaptureEditingViewController:(id)controller didCancelWithComposition:(id)composition isNavigationHandledByPresenter:(BOOL)presenter deselectAssets:(BOOL)assets;
- (BOOL)sundialPostCaptureEditingViewControllerMustExitTimelineEditorBeforeCancelling:(id)cancelling;
- (void)sundialPostCaptureEditingViewController:(id)controller didShareComposition:(id)composition toDestination:(long long)destination withPostId:(id)id shareOnFacebookPreferences:(id)preferences isNavigationHandledByPresenter:(BOOL)presenter;
- (void)sundialPostCaptureEditingViewController:(id)controller didSaveDraft:(id)draft fromPostCapture:(BOOL)capture isNavigationHandledByPresenter:(BOOL)presenter;
- (void)sundialPostCaptureEditingViewControllerDidResume:(id)resume;
- (void)sundialPostCaptureEditingViewControllerDidDismiss:(id)dismiss;
- (BOOL)shouldPerformActionInsteadOfReportingForRageShakeInterval:(double)interval;
- (id /* block */)actionToPerformOnRageShake;
- (long long)preferredPostCaptureDismissButtonStyle;
- (void)navigationLatencyLogging:(id)logging didStartTracking:(id)tracking;
@end

#endif /* IGStoryFeedFormatViewController_h */
