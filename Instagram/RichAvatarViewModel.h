//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RichAvatarViewModel_h
#define RichAvatarViewModel_h
@import Foundation;

#include "AEEffectLifecycleListenerDelegate-Protocol.h"
#include "AEEmbodimentLiveEditingRenderingDelegate-Protocol.h"
#include "AEEmbodimentRenderingInterface-Protocol.h"
#include "AERAVDependenciesProvider.h"
#include "AERAVPlatformEventsParser.h"
#include "AERAVPlatformEventsPreParserDelegate-Protocol.h"
#include "AERichAvatarViewModelFlipperBridge.h"
#include "AvatarRendererPlatformEventsListenerAnnouncer.h"
#include "AvatarRendererStateListenerAnnouncer.h"
#include "FBRichMediaViewerAREffectProvider.h"
#include "RichAvatarViewEffectDescriptor-Protocol.h"

@class AEEmbodimentPreview2DFallbackController, FBARAvatarsGltfTransferDataProviderDelegateWrapper, FBARPlatformEventsDataProviderConfiguration, NSDictionary, NSString, UIView;
@protocol FBRMVCaptureManagerInterface;

@interface RichAvatarViewModel : NSObject<AERAVPlatformEventsPreParserDelegate, AEEffectLifecycleListenerDelegate, AEEmbodimentRenderingInterface> {
  /* instance variables */
  FBRichMediaViewerAREffectProvider *_arEffectProvider;
  AERAVPlatformEventsParser *_platformEventsParser;
  AERAVDependenciesProvider *_dependenciesProvider;
  NSObject<FBRMVCaptureManagerInterface> *_cameraCapture;
  FBARPlatformEventsDataProviderConfiguration *_platformEventsConfig;
  FBARAvatarsGltfTransferDataProviderDelegateWrapper *_delegateWrapper;
  id _analyticsReporterStrongRef;
  BOOL _useFaceTracking;
  long long _cameraPosition;
  NSDictionary *_effectConfigPlatformEventsData;
  BOOL _isInitialEffectConfigSent;
  AERichAvatarViewModelFlipperBridge *_flipperBridge;
}

@property (retain, nonatomic) NSObject<RichAvatarViewEffectDescriptor> *effectDescriptor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView *renderingView;
@property (readonly, nonatomic) AvatarRendererStateListenerAnnouncer *stateAnnouncer;
@property (readonly, nonatomic) AvatarRendererPlatformEventsListenerAnnouncer *platformEventsAnnouncer;
@property (readonly, nonatomic) AEEmbodimentPreview2DFallbackController *fallbackController;
@property (weak, nonatomic) NSObject<AEEmbodimentLiveEditingRenderingDelegate> *liveEditingRenderingDelegate;

/* instance methods */
- (id)initWithArEffectProvider:(id)provider;
- (id)initWithArEffectProvider:(id)provider analyticsReporter:(id)reporter fallbackController:(id)controller delegateWrapper:(id)wrapper;
- (id)initWithArEffectProvider:(id)provider analyticsReporter:(id)reporter fallbackController:(id)controller delegateWrapper:(id)wrapper platformEventsParser:(id)parser dependenciesProvider:(id)provider;
- (void)onBloksSendPlatformEvent:(id)event;
- (void)startRenderingWithFrameSize:(struct CGSize { double x0; double x1; })size backgroundColorFor3DView:(id)dview completion:(id /* block */)completion;
- (void)stopRenderingWithCompletion:(id /* block */)completion;
- (void)updateAvatarGltf:(id)gltf requestID:(id)id;
- (void)updateAvatarColorRamps:(id)ramps requestID:(id)id;
- (void)onSliderValueChange:(id)change;
- (void)updateAvatarRampValues:(id)values requestID:(id)id;
- (void)updateAvatarBlendWeights:(id)weights;
- (void)setEffectConfigParameters:(id)parameters;
- (void)platformEventsServiceForEffectDescriptor:(id)descriptor didReceiveEventWithData:(id)data;
- (void)sendPlatformEvent:(id)event;
- (void)triggerPlatformEvent:(id)event;
- (void)platformEventsParserDidReceiveFetchStartedForEffect:(id)effect;
- (void)platformEventsParserDidReceiveFetchCompletedForEffect:(id)effect;
- (void)platformEventsParserDidReceiveFetchFailedForEffect:(id)effect;
- (void)platformEventsParserDidReceiveAnimationStartedWithID:(id)id effect:(id)effect;
- (void)platformEventsParserDidReceiveEvent:(id)event type:(id)type data:(id)data;
- (void)pluginDidLoadWithUserId:(id)id success:(BOOL)success;
- (void)pluginDidLoadAvatar:(id)avatar;
- (void)pluginDidRenderAvatar:(id)avatar;
- (void)pluginDidFailToLoadAvatar:(id)avatar error:(id)error;
- (void)pluginDidUpdateDynamicRamps;
- (void)pluginDidFailColorization:(id)colorization;
- (id)pluginRequestsAle;
- (void)didLoadEffect:(id)effect timeStamp:(long long)stamp;
- (void)didRenderFirstFrameForEffect:(id)effect timeStamp:(long long)stamp;
- (void)failedToLoadEffect:(id)effect error:(id)error;
@end

#endif /* RichAvatarViewModel_h */
