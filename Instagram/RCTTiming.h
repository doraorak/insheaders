//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTTiming_h
#define RCTTiming_h
@import Foundation;

#include "RCTBridge.h"
#include "RCTBridgeModule-Protocol.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTFrameUpdateObserver-Protocol.h"
#include "RCTInitializing-Protocol.h"
#include "RCTInvalidating-Protocol.h"
#include "RCTModuleRegistry.h"
#include "RCTViewRegistry.h"

@class NSMutableDictionary, NSString, NSTimer;
@protocol OS_dispatch_queue, RCTTimingDelegate;

@interface RCTTiming : NSObject<RCTBridgeModule, RCTInvalidating, RCTFrameUpdateObserver, RCTInitializing> {
  /* instance variables */
  NSMutableDictionary *_timers;
  NSTimer *_sleepTimer;
  BOOL _sendIdleEvents;
  BOOL _inBackground;
  NSObject<RCTTimingDelegate> *_timingDelegate;
}

@optional
@property (weak, nonatomic) RCTModuleRegistry *moduleRegistry;
@optional
@property (weak, nonatomic) RCTViewRegistry *viewRegistry_DEPRECATED;
@optional
@property (weak, nonatomic) RCTBundleManager *bundleManager;
@optional
@property (weak, nonatomic) RCTCallableJSModules *callableJSModules;
@optional
@property (readonly, weak, nonatomic) RCTBridge *bridge;
@optional
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL paused;
@property (copy, nonatomic) id /* block */ pauseCallback;

/* class methods */
+ (id)moduleName;
+ (void)load;
+ (const struct RCTMethodInfo *)__rct_export__3600;
+ (const struct RCTMethodInfo *)__rct_export__4121;
+ (const struct RCTMethodInfo *)__rct_export__4222;

/* instance methods */
- (id)initWithDelegate:(id)delegate;
- (void)initialize;
- (void)setup;
- (void)dealloc;
- (void)invalidate;
- (void)appDidMoveToBackground;
- (void)appDidMoveToForeground;
- (void)proximityChanged;
- (void)stopTimers;
- (void)startTimers;
- (BOOL)hasPendingTimers;
- (void)didUpdateFrame:(id)frame;
- (void)scheduleSleepTimer:(id)timer;
- (void)timerDidFire;
- (void)createTimer:(double)timer duration:(double)duration jsSchedulingTime:(double)time repeats:(BOOL)repeats;
- (void)createTimerForNextFrame:(id)frame duration:(double)duration jsSchedulingTime:(id)time repeats:(BOOL)repeats;
- (void)deleteTimer:(double)timer;
- (void)setSendIdleEvents:(BOOL)events;
- (BOOL)isPaused;
@end

#endif /* RCTTiming_h */
