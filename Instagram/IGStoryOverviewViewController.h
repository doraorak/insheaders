//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryOverviewViewController_h
#define IGStoryOverviewViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAlertHUDHandling-Protocol.h"
#include "IGBloksViewControllerNetworkEventListener-Protocol.h"
#include "IGFavoritesPresentationManager.h"
#include "IGInsightsPerfLogger.h"
#include "IGNotificationHandler-Protocol.h"
#include "IGPageViewControllerDataSource-Protocol.h"
#include "IGPageViewControllerDelegate-Protocol.h"
#include "IGPerformanceNavigationAppearListener-Protocol.h"
#include "IGStoryCarouselView.h"
#include "IGStoryFullscreenSectionLoggingContext.h"
#include "IGStoryItemType-Protocol.h"
#include "IGStoryOverviewNubView.h"
#include "IGStoryViewersListControllerContext.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class IGPageViewController, IGSponsoredSupportConfiguration, IGStoryViewerConfiguration, IGStoryViewerViewModel, IGTapButton, IGUserSession, NSObject, NSString, UISwipeGestureRecognizer, UIViewController;
@protocol IGStoryOverviewDelegate;

@interface IGStoryOverviewViewController : IGViewController<IGPerformanceNavigationAppearListener, IGBloksViewControllerNetworkEventListener, IGPageViewControllerDataSource, IGPageViewControllerDelegate, UIGestureRecognizerDelegate, IGNotificationHandler> {
  /* instance variables */
  IGSponsoredSupportConfiguration *_sponsoredSupportConfiguration;
  NSObject<IGAlertHUDHandling> *_alertHandler;
  IGStoryViewersListControllerContext *_listControllerContext;
  BOOL _insightsShowing;
  NSObject *_storyPromoteEntryController;
  UIViewController *_cachedController;
  NSObject<IGStoryItemType> *_cachedCurrentItem;
  BOOL _isScrollingViewersFromInteraction;
  BOOL _shouldShowInsights;
  IGStoryCarouselView *_carouselView;
  IGPageViewController *_viewersPageViewController;
  IGTapButton *_closeButton;
  IGTapButton *_settingsButton;
  UISwipeGestureRecognizer *_closeSwipeGesture;
  IGStoryOverviewNubView *_nubView;
  IGFavoritesPresentationManager *_favoritesPresentationManager;
  IGInsightsPerfLogger *_perfLogger;
}

@property (readonly, nonatomic) IGStoryViewerViewModel *viewModel;
@property (readonly, nonatomic) IGUserSession *userSession;
@property (readonly, nonatomic) IGStoryViewerConfiguration *configuration;
@property (nonatomic) BOOL showInsights;
@property (readonly, nonatomic) IGStoryFullscreenSectionLoggingContext *loggingContext;
@property (readonly, nonatomic) NSObject<IGStoryItemType> *currentItem;
@property (nonatomic) double presentationProgress;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<IGStoryOverviewDelegate> *delegate;

/* instance methods */
- (id)initWithUserSession:(id)session viewerConfiguration:(id)configuration shouldShowInsights:(BOOL)insights analyticsModule:(id)module loggingContext:(id)context insightsShowing:(BOOL)showing;
- (void)setViewModel:(id)model currentViewerItem:(id)item;
- (void)prefetch;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (id)destinationViewForPresentation;
- (void)viewWillAppear:(BOOL)appear;
- (void)_handleCloseGesture:(id)gesture;
- (BOOL)gestureRecognizer:(id)recognizer shouldBeRequiredToFailByGestureRecognizer:(id)recognizer;
- (void)_closeButtonTapped;
- (void)_settingsButtonTapped;
- (BOOL)prefersNavigationBarHidden;
- (long long)preferredTabBarBehavior;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (long long)numberOfPagesForPageViewController:(id)controller;
- (id)pageViewController:(id)controller controllerForIndex:(long long)index;
- (void)pageViewController:(id)controller willShowViewController:(id)controller;
- (void)pageViewController:(id)controller didChangeCurrentViewControllerToController:(id)controller atIndex:(long long)index;
- (void)pageViewControllerWillBeginDragging:(id)dragging;
- (void)pageViewControllerDidFinishScrolling:(id)scrolling;
- (void)storyMediaDetailsDidTapDelete:(id)delete;
- (void)storyMediaDetailsDidTapInsights:(id)insights;
- (void)storyMediaDetailsDidTapViewersIcon:(id)icon;
- (void)storyMediaDetailsDidTapAudienceIcon:(id)icon;
- (void)storyMediaDetailsDidTapPromote:(id)promote;
- (void)prompStickerParticipantList:(id)list didTapShareButtonWithModel:(id)model fromInternalSticker:(BOOL)sticker sharedList:(id)list;
- (void)prompStickerParticipantList:(id)list didTapInviteFriendButton:(id)button;
- (void)prompStickerParticipantList:(id)list didTapAuthorAttribution:(id)attribution;
- (void)prompStickerParticipantList:(id)list didTapParticipantId:(id)id promptStickerModel:(id)model;
- (void)carouselView:(id)view didSelectItemAtIndex:(unsigned long long)index;
- (void)carouselView:(id)view didScrollToIndex:(unsigned long long)index;
- (void)carouselView:(id)view didEndScrollingAtIndex:(unsigned long long)index;
- (void)carouselViewWillBeginDragging:(id)dragging;
- (void)carouselViewDidEndDecelerating:(id)decelerating;
- (unsigned long long)notificationPresentationPermissionsForNotificationSource:(unsigned long long)source;
- (void)bloksNetworkRequestStarted;
- (void)bloksNetworkRequestEndedWithError:(id)error;
- (void)markViewInteractable;
- (void)markViewControllerInit;
- (void)markViewDidLoad;
- (void)markViewDidAppear;
- (void)markViewWillDisappear;
- (void)markViewWillAppearWithAnalyticsModule:(id)module;
- (void)didUpdateStoryPromotionState;
- (void)adManagerViewControllerDidUpdatePromotionState;
@end

#endif /* IGStoryOverviewViewController_h */
