//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FB_RTCWrappedNativeVideoEncoder_h
#define FB_RTCWrappedNativeVideoEncoder_h
@import Foundation;

#include "FB_RTCVideoEncoder-Protocol.h"

@class NSString;
@protocol {unique_ptr<webrtc_legacy::VideoEncoder, std::default_delete<webrtc_legacy::VideoEncoder>>="__ptr_"{__compressed_pair<webrtc_legacy::VideoEncoder *, std::default_delete<webrtc_legacy::VideoEncoder>>="__value_"^{VideoEncoder}}};

@interface FB_RTCWrappedNativeVideoEncoder : NSObject<FB_RTCVideoEncoder> {
  /* instance variables */
  struct unique_ptr<webrtc_legacy::VideoEncoder, std::default_delete<webrtc_legacy::VideoEncoder>> { struct __compressed_pair<webrtc_legacy::VideoEncoder *, std::default_delete<webrtc_legacy::VideoEncoder>> { struct VideoEncoder *__value_; } __ptr_; } _wrappedEncoder;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithNativeEncoder:(struct unique_ptr<webrtc_legacy::VideoEncoder, std::default_delete<webrtc_legacy::VideoEncoder>> { struct __compressed_pair<webrtc_legacy::VideoEncoder *, std::default_delete<webrtc_legacy::VideoEncoder>> { struct VideoEncoder * x0; } x0; })encoder;
- (struct unique_ptr<webrtc_legacy::VideoEncoder, std::default_delete<webrtc_legacy::VideoEncoder>> { struct __compressed_pair<webrtc_legacy::VideoEncoder *, std::default_delete<webrtc_legacy::VideoEncoder>> { struct VideoEncoder * x0; } x0; })releaseWrappedEncoder;
- (void)setCallback:(id /* block */)callback;
- (long long)startEncodeWithSettings:(id)settings numberOfCores:(int)cores;
- (long long)releaseEncoder;
- (long long)encode:(id)encode codecSpecificInfo:(id)info frameTypes:(id)types;
- (int)setBitrate:(unsigned int)bitrate framerate:(unsigned int)framerate;
- (id)implementationName;
- (id)scalingSettings;
- (BOOL)supportsLtr;
- (void)onLtrAck:(long long)ack;
@end

#endif /* FB_RTCWrappedNativeVideoEncoder_h */
