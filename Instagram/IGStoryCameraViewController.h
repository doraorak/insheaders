//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryCameraViewController_h
#define IGStoryCameraViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGActionableConfirmationToastPresenting-Protocol.h"
#include "IGApplicationWillEnterForegroundCriticalEventsListener-Protocol.h"
#include "IGAudioStatusChangeListener-Protocol.h"
#include "IGBugReportingRageShakeInterceptionProtocol-Protocol.h"
#include "IGCameraEffectCollectionDataSourceListener-Protocol.h"
#include "IGCameraEffectMiniGalleryFeedDataProvider.h"
#include "IGCameraEffectMiniGalleryPerfLoggingContext.h"
#include "IGCameraEffectMiniGalleryViewModel.h"
#include "IGCameraToolsMenu.h"
#include "IGCameraViewController.h"
#include "IGCameraViewControllerSampleBufferObserver-Protocol.h"
#include "IGCameraVisibilityTracker.h"
#include "IGCameraZoomControllerDelegate-Protocol.h"
#include "IGCreationNavigationPresentable-Protocol.h"
#include "IGCreationSessionStateProvider-Protocol.h"
#include "IGGreenScreenGalleryPickerViewController.h"
#include "IGNametagLoggingContext.h"
#include "IGPartialModalSheetListener-Protocol.h"
#include "IGQuickCamCaptureButtonDelegate-Protocol.h"
#include "IGStoryCameraAREffectNativeUIDelegateCoordinator.h"
#include "IGStoryCameraARLinkCoordinator.h"
#include "IGStoryCameraFormatTransitionCoordinator.h"
#include "IGStoryCameraGalleryVCDelegate.h"
#include "IGStoryCameraOverlayViewControllerDelegate-Protocol.h"
#include "IGStoryCameraToolsMenuCoordinator.h"
#include "IGStoryCameraViewControllerOverlayDataSource.h"
#include "IGStoryCameraViewControllerProtocol-Protocol.h"
#include "IGStoryDrawerDismissDelegate-Protocol.h"
#include "IGStoryFormatViewControllerProtocolDelegate-Protocol.h"
#include "IGStoryGalleryFirstViewControllerDelegate-Protocol.h"
#include "IGStoryMediaReplyOverlayController.h"
#include "IGStoryMusicFirstCreationHandlerDelegate-Protocol.h"
#include "IGStoryMusicStickerProtocol-Protocol.h"
#include "IGStoryStickerGestureControllerDelegate-Protocol.h"
#include "IGStoryStickerTrayViewControllerDelegate-Protocol.h"
#include "IGSundialFormatViewControlling-Protocol.h"
#include "IGSundialPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "IGSystemicNavigationLatencyViewControllerTracking-Protocol.h"
#include "IGUserAvatarStatusListener-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UINavigationControllerDelegate-Protocol.h"
#include "UITextViewDelegate-Protocol.h"
#include "_TtC18IGStoryBurstFormat32IGStoryBurstFormatViewController.h"
#include "_TtC25IGGreenScreenGallerySwift43IGGreenScreenGalleryPickerNewViewController.h"
#include "_TtC26IGAvatarCameraEffectLogger26IGAvatarCameraEffectLogger.h"
#include "_TtC28IGAvatarCameraEffectQPLogger28IGAvatarCameraEffectQPLogger.h"
#include "_TtP13SUPConnecting13SUPConnecting_-Protocol.h"
#include "_TtP22SUPEngagementProducing22SUPEngagementProducing_-Protocol.h"
#include "_TtP25IGCreationFormatPresenter33IGCreationFormatPresenterProtocol_-Protocol.h"
#include "_TtP25IGCreationFormatPresenter44IGCreationFormatPresentingControllerProtocol_-Protocol.h"
#include "_TtP25IGCreationFormatProtocols47IGCreationFormatPresentingConfigurationProtocol_-Protocol.h"
#include "_TtP25IGGreenScreenGallerySwift51IGGreenScreenGalleryPickerViewControllerNewDelegate_-Protocol.h"
#include "_TtP27SUPConnectorCaptureDelegate27SUPConnectorCaptureDelegate_-Protocol.h"
#include "_TtP39IGStoryFormatMediaCompositionGenerating39IGStoryFormatMediaCompositionGenerating_-Protocol.h"

@class FBTimer, IGAREffectModel, IGAREffectTargetModel, IGAsyncTask, IGAudioSessionClient, IGBloksActionNavigationController, IGCameraAREffectsLoggingContext, IGCameraLoggerContext, IGCameraOpenPerfComponentsModel, IGCameraTargetModel, IGCameraZoomController, IGDirectionalPanGestureRecognizer, IGPopoverController, IGStoryAudioPlayer, IGStoryCameraFormatModel, IGStoryCreationConfiguration, IGStoryGalleryViewController, IGSundialCreationConfiguration, IGUserSession, NSArray, NSDate, NSMutableDictionary, NSMutableSet, NSString, NSTimer, UIImage, UIImageView, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView, UIViewController;
@protocol IGCameraEffectMiniGalleryProtocol, IGStoryCameraDirectShareRecipientSource, IGStoryCameraLiveControllerDelegate, IGStoryCameraSundialControllerDelegate, IGStoryCameraViewControllerDelegate, IGSystemicNavigationLatencyEarlyTracking, UIViewController<IGLiveBroadcastMainViewControllerProtocol, UIViewController<IGStoryCameraOverlayViewControlling, UIViewController<IGStoryFormatViewControllerProtocol, UIViewController<IGStoryGalleryFirstViewControllerProtocol;

@interface IGStoryCameraViewController : IGViewController<IGActionableConfirmationToastPresenting, IGAudioStatusChangeListener, IGCameraZoomControllerDelegate, IGQuickCamCaptureButtonDelegate, UIGestureRecognizerDelegate, UINavigationControllerDelegate, UITextViewDelegate, IGStoryCameraOverlayViewControllerDelegate, _TtP39IGStoryFormatMediaCompositionGenerating39IGStoryFormatMediaCompositionGenerating_, IGCameraViewControllerSampleBufferObserver, IGStoryDrawerDismissDelegate, IGStoryStickerGestureControllerDelegate, IGStoryGalleryFirstViewControllerDelegate, IGStoryStickerTrayViewControllerDelegate, IGUserAvatarStatusListener, _TtP25IGCreationFormatPresenter44IGCreationFormatPresentingControllerProtocol_, _TtP25IGCreationFormatProtocols47IGCreationFormatPresentingConfigurationProtocol_, IGApplicationWillEnterForegroundCriticalEventsListener, _TtP25IGGreenScreenGallerySwift51IGGreenScreenGalleryPickerViewControllerNewDelegate_, IGPartialModalSheetListener, _TtP27SUPConnectorCaptureDelegate27SUPConnectorCaptureDelegate_, IGBugReportingRageShakeInterceptionProtocol, IGCreationSessionStateProvider, IGStoryMusicFirstCreationHandlerDelegate, IGStoryCameraViewControllerProtocol, IGStoryFormatViewControllerProtocolDelegate, IGCameraEffectCollectionDataSourceListener> {
  /* instance variables */
  IGUserSession *_userSession;
  IGStoryCreationConfiguration *_originalConfiguration;
  UIView *_contentView;
  UIView *_captureContainerView;
  UIView *_gestureContainerView;
  IGDirectionalPanGestureRecognizer *_galleryVerticalPanGesture;
  UILongPressGestureRecognizer *_longPressGesture;
  UITapGestureRecognizer *_singleTapGesture;
  UITapGestureRecognizer *_doubleTapGestureRecognizer;
  IGCameraZoomController *_zoomController;
  BOOL _cancelOnRelease;
  IGPopoverController *_draftEffectConsentPopoverController;
  NSObject<IGCameraEffectMiniGalleryProtocol> *_effectMiniGalleryViewController;
  IGCameraEffectMiniGalleryFeedDataProvider *_effectMiniGallerySavedFeedDataProvider;
  NSMutableDictionary *_effectMiniGalleryFeedDataProviderPerSourceID;
  NSMutableDictionary *_effectMiniGalleryCategoryPrefetcherPerSourceID;
  IGCameraEffectMiniGalleryViewModel *_miniGalleryViewModel;
  BOOL _onScreen;
  BOOL _active;
  BOOL _shouldClearSelectedOptionsOnDisappear;
  BOOL _dismissGalleryFirstOnDisappear;
  BOOL _isFromEffectTargeting;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _detectedFaceRect;
  BOOL _isFlashScene;
  BOOL _isVolumeButtonPressed;
  NSTimer *_volumeReleaseTimer;
  NSDate *_lastVolumePress;
  long long _soundBehavior;
  UIImageView *_galleryPreviewImageView;
  NSArray *_preferredMediaTypes;
  UIViewController<IGLiveBroadcastMainViewControllerProtocol> *_liveViewController;
  BOOL _currentAREffectSupportVolumeCapture;
  NSMutableSet *_appliedAREffectIDsDuringRecording;
  NSMutableSet *_appliedAREffectInstanceIDsDuringRecording;
  BOOL _shouldTriggerAREffectOnStartRecording;
  BOOL _didLogEffectSourceFromEntryPoint;
  IGAREffectModel *_previousEffectModel;
  UIImage *_firstFrameOfVideoCapture;
  long long _targetSwitcherMode;
  IGAREffectTargetModel *_draftEffectTarget;
  IGCameraTargetModel *_pendingCameraTargetModel;
  IGAREffectTargetModel *_availableEffectTarget;
  IGStoryCameraFormatModel *_availableFormatTarget;
  IGCameraAREffectsLoggingContext *_effectsLoggingContext;
  unsigned long long _multiCaptureCurrentSegmentCount;
  NSMutableDictionary *_videoCreationTasks;
  IGAsyncTask *_remixReactionOriginalAsset;
  IGStoryAudioPlayer *_remixReactionOriginalAudioPlayer;
  IGAsyncTask *_boomerangCaptureTask;
  double _captureButtonTapTime;
  NSObject<IGSundialFormatViewControlling> *_clipsFormatViewController;
  BOOL _isInUltraWideCamera;
  BOOL _enableUltraWideCapture;
  BOOL _switchingCaptureDevice;
  IGCameraOpenPerfComponentsModel *_perfComponents;
  IGAudioSessionClient *_audioSessionClient;
  IGCameraVisibilityTracker *_cameraVisibilityTracker;
  BOOL _shownPreloadAudioOrEffectPill;
  IGCameraEffectMiniGalleryPerfLoggingContext *_effectMiniGalleryPerfLoggingContext;
  IGAsyncTask *_greenScreenEffectApplication;
  NSArray *_postCaptureMediaCompositions;
  NSString *_initialCaptureDeviceIDWhenRecordingStarted;
  BOOL _useIGTemporaryDirectory;
  BOOL _didDisplayUserSafetyWarningDialog;
  BOOL _shouldShowCameraAuthorizationScreen;
  IGBloksActionNavigationController *_bloksNavigationController;
  struct { IGStrictUserFlowLogger *strictLogger; unsigned long long userFlowInstanceId; } _recordingLoggerStruct;
  struct { IGStrictUserFlowLogger *strictLogger; unsigned long long userFlowInstanceId; } _photoCaptureLoggerStruct;
  _TtC18IGStoryBurstFormat32IGStoryBurstFormatViewController *_burstFormatViewController;
  FBTimer *_arDelayedTrayLoadToastTimer;
  NSMutableSet *_loadedEffectDataSources;
  NSObject<_TtP25IGCreationFormatPresenter33IGCreationFormatPresenterProtocol_> *_formatPresenter;
  BOOL _hdrEnabled;
  NSObject<_TtP13SUPConnecting13SUPConnecting_> *_supConnector;
  NSObject<_TtP22SUPEngagementProducing22SUPEngagementProducing_> *_engagementProducer;
  BOOL _hasToggledToSUPCameraDuringVideoRecording;
  BOOL _didStartVideoRecordingWithOnScreenCaptureButton;
  _TtC28IGAvatarCameraEffectQPLogger28IGAvatarCameraEffectQPLogger *_avatarCameraPerformanceLogger;
  _TtC26IGAvatarCameraEffectLogger26IGAvatarCameraEffectLogger *_avatarCameraEffectLogger;
  BOOL _isAvatarEffectLoading;
  BOOL _containsTemplatizedStickers;
  IGAsyncTask *_anonymityEffectTask;
  long long _previousMarkerEndCount;
  IGCameraLoggerContext *_cameraLoggerContext;
  IGCameraTargetModel *_initialCameraTargetModel;
  IGStoryCameraFormatTransitionCoordinator *_formatTransitionCoordinator;
  IGStoryCameraViewControllerOverlayDataSource *_storyCameraViewControllerOverlayDataSource;
  IGStoryCameraARLinkCoordinator *_ARLinkCoordinator;
  IGStoryCameraGalleryVCDelegate *_galleryVCDelegate;
  IGStoryCameraToolsMenuCoordinator *_toolsMenuCoordinator;
  IGStoryCameraAREffectNativeUIDelegateCoordinator *_arEffectNativeUIDelegateCoordinator;
  NSObject<IGSystemicNavigationLatencyEarlyTracking> *_slateEarlyTracking;
  NSObject<IGSystemicNavigationLatencyViewControllerTracking> *_slateNavLatencyTracking;
  BOOL _isSlateCustomCancelNavigationFlowEnabled;
  BOOL _hasShownCollabEducationNux;
  BOOL _didSelectMusic;
  BOOL _volumeButtonCaptureEnabled;
}

@property (nonatomic) long long state;
@property (retain, nonatomic) IGStoryGalleryViewController *storyGalleryViewController;
@property (readonly, nonatomic) BOOL isShowingShutter;
@property (readonly, nonatomic) double cameraPreviewCornerRadius;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIViewController<IGStoryCameraOverlayViewControlling> *overlayViewController;
@property (retain, nonatomic) IGCameraViewController *cameraViewController;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } preferredCaptureFrame;
@property (readonly, nonatomic) double contentCornerRadius;
@property (retain, nonatomic) UIViewController<IGStoryFormatViewControllerProtocol> *presentedFormatViewController;
@property (readonly, nonatomic) IGSundialCreationConfiguration *sundialCreationConfiguration;
@property (readonly, nonatomic) IGStoryCreationConfiguration *storyCreationConfiguration;
@property (readonly, nonatomic) NSObject<IGStoryFormatViewControllerProtocolDelegate> *formatDelegate;
@property (readonly, nonatomic) NSObject<IGSundialPostCaptureEditingViewControllerDelegate> *sundialPostCaptureDelegate;
@property (readonly, nonatomic) IGStoryCreationConfiguration *configuration;
@property (readonly, nonatomic) IGAREffectModel *currentEffect;
@property (readonly, nonatomic) IGStoryGalleryViewController *effectMediaGalleryViewController;
@property (readonly, nonatomic) UIViewController<IGStoryGalleryFirstViewControllerProtocol> *galleryFirstViewController;
@property (readonly, nonatomic) IGGreenScreenGalleryPickerViewController *greenScreenGalleryViewController;
@property (readonly, nonatomic) _TtC25IGGreenScreenGallerySwift43IGGreenScreenGalleryPickerNewViewController *greenScreenGalleryNewViewController;
@property (readonly, nonatomic) UIViewController *presentedViewController;
@property (readonly, nonatomic) IGCameraToolsMenu *toolsMenu;
@property (readonly, nonatomic) IGStoryCameraFormatModel *cameraSwitcherMode;
@property (readonly, nonatomic) NSObject<IGStoryMusicStickerProtocol> *templateMusicSticker;
@property (readonly, nonatomic) double templateMusicStickerOriginalDuration;
@property (readonly, nonatomic) NSString *loggingSessionID;
@property (readonly, nonatomic) double cameraRequestedTimestamp;
@property (readonly, nonatomic) long long cameraPosition;
@property (readonly, nonatomic) UIView *storyCameraView;
@property (readonly, nonatomic) BOOL hideStatusBar;
@property (nonatomic) BOOL multiSelectEnabled;
@property (nonatomic) BOOL isApplyingVideoToCameraEffect;
@property (readonly, nonatomic) struct { float x0; float x1; long long x2; } cameraCaptureInfo;
@property (readonly, nonatomic) UIViewController<IGStoryFormatViewControllerProtocol> *currentFormatViewController;
@property (readonly, nonatomic) BOOL isHandsFreeCountingDown;
@property (readonly, nonatomic) BOOL isPreparingToCapture;
@property (readonly, nonatomic) BOOL isGalleryFirstViewControllerPresent;
@property (nonatomic) long long entryPoint;
@property (nonatomic) BOOL visible;
@property (readonly, nonatomic) IGStoryMediaReplyOverlayController *mediaReplyOverlayController;
@property (retain, nonatomic) NSObject<IGCreationNavigationPresentable> *creationPresenter;
@property (weak, nonatomic) NSObject<IGStoryCameraSundialControllerDelegate> *sundialDelegate;
@property (weak, nonatomic) NSObject<IGStoryCameraViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<IGStoryCameraLiveControllerDelegate> *liveDelegate;
@property (readonly, nonatomic) IGStoryCameraFormatModel *currentCameraFormat;
@property (readonly, nonatomic) BOOL hasGrantedAllPermissions;
@property (copy, nonatomic) NSString *caption;
@property (readonly, nonatomic) NSArray *switcherModes;
@property (retain, nonatomic) IGNametagLoggingContext *nametagLoggingContext;
@property (readonly, nonatomic) BOOL canBeginScrollingToFeed;
@property (weak, nonatomic) NSObject<IGStoryCameraDirectShareRecipientSource> *recipientSource;
@property (readonly, nonatomic) BOOL isRecording;

/* instance methods */
- (id)initWithUserSession:(id)session configuration:(id)configuration sundialCreationConfiguration:(id)configuration initialCameraTargetModel:(id)model initialCapturePosition:(long long)position presentationStyle:(long long)style cameraLoggerContext:(id)context localSendSpeedPerformanceLogger:(id)logger;
- (id)analyticsExtras;
- (id)analyticsModule;
- (id)_analyticsModuleStringForGalleryOpen;
- (void)_startSlateEarlyTrackingForGalleryOpen;
- (void)setTarget:(id)target;
- (BOOL)setEffectListWithIDs:(id)ids;
- (void)setTargetStickerId:(id)id targetStickerType:(long long)type actionSourceType:(long long)type;
- (void)updateConfigurationWithCameraCreationViewMode:(id)mode;
- (void)setLiveAudienceType:(unsigned long long)type;
- (void)showLiveAudienceOptions;
- (void)showPreliveViewType:(unsigned long long)type;
- (void)setupLiveDefaultValues;
- (BOOL)startCaptureSessionIfNeeded;
- (void)startCaptureOrShowAuthorizationScreenIfPermissionsAreNotGranted;
- (BOOL)accessibilityPerformEscape;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (id)childViewControllerForStatusBarHidden;
- (long long)preferredStatusBarUpdateAnimation;
- (BOOL)prefersNavigationBarHidden;
- (long long)preferredTabBarBehavior;
- (double)actionableConfirmationToastBottomPadding;
- (double)actionableConfirmationToastTopPadding;
- (id)ig_keyViewControllers;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)lastDisplayedFrameWithCompletion:(id /* block */)completion;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)_appWillTerminate:(id)terminate;
- (void)_didDoubleTap:(id)tap;
- (void)_didSingleTap:(id)tap;
- (void)didLongPress:(id)press;
- (void)_didPanVertically:(id)vertically;
- (void)cameraVisibilityTrackerDidDetectPrivacyViolation:(id)violation;
- (void)storyFormatViewController:(id)controller didCreateMediaCompositions:(id)compositions;
- (void)storyFormatViewControllerDidTapCloseButton:(id)button;
- (void)storyFormatViewController:(id)controller didSwitchFromCameraMode:(id)mode toCameraMode:(id)mode withGesture:(id)gesture;
- (id)prepopulatedStickersForStoryFormatViewController:(id)controller;
- (void)storyFormatViewControllerDidShareToFeed:(id)feed postId:(id)id;
- (void)storyFormatViewController:(id)controller didShareSundialComposition:(id)composition toDestination:(long long)destination;
- (void)storyFormatViewController:(id)controller didEndScrollOnCameraMode:(id)mode;
- (void)storyLiveFormatViewControllerWillGoLive:(id)live;
- (void)storyLiveFormatViewControllerDidGoLive:(id)live;
- (void)storyLiveFormatViewControllerDidSwitchToLiveActiveState:(id)state;
- (void)storyLiveFormatViewController:(id)controller didEndLiveSuccessfully:(BOOL)successfully sharedToIGTV:(BOOL)igtv sharedLiveToStory:(BOOL)story startNewLive:(BOOL)live;
- (void)storyLiveFormatViewController:(id)controller didSelectShareUpcomingEvent:(id)event;
- (void)storyCameraOverlayViewControllerDidTapUpcomingEventsOption:(id)option;
- (void)storyLiveFormatViewController:(id)controller didTapSUPButton:(long long)supbutton completion:(id /* block */)completion;
- (void)storyLiveFormatViewControllerDidTapSUPRequestCapture:(id)capture;
- (void)storyLiveFormatViewControllerDidUpdatePermissions:(id)permissions;
- (void)sundialFormatViewController:(id)controller didCreateSundialComposition:(id)composition withAutoTrimmedClips:(BOOL)clips lastGalleryPosition:(id)position;
- (void)sundialFormatViewController:(id)controller galleryDidSelectReplaceWithLongerVideoForIndex:(long long)index videoClip:(id)clip;
- (BOOL)sundialFormatViewController:(id)controller canCreateNewCompositionAfterDismissWithAction:(long long)action;
- (id)sundialFormatViewControllerCurrentAREffectModel:(id)model;
- (void)sundialFormatViewControllerSetEffectTargetModel:(id)model;
- (void)sundialFormatViewControllerSelectGreenScreenEffect;
- (void)sundialFormatViewController:(id)controller willProcessVideoBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (void)sundialFormatViewControllerDidSelectEffectMiniGallery:(id)gallery;
- (void)sundialFormatViewController:(id)controller galleryDidSelectAssetForGreenScreen:(id)screen;
- (void)sundialFormatViewController:(id)controller galleryDidSelectVideoForGreenScreen:(id)screen;
- (void)sundialFormatViewController:(id)controller didSelectAssetForGreenScreenRemixLayout:(id)layout completion:(id /* block */)completion;
- (void)sundialFormatViewController:(id)controller didTapSUPButton:(long long)supbutton completion:(id /* block */)completion;
- (void)sundialFormatViewControllerDidTapSUPRequestCapture:(id)capture;
- (void)sundialFormatViewController:(id)controller sundialGalleryMediaSelectionViewWillDisappearWithPosition:(id)position;
- (void)sundialFormatViewController:(id)controller didUpdateAudioStateWith:(id)with;
- (void)sundialFormatViewController:(id)controller willShowDrawerViewController:(id)controller;
- (void)sundialFormatViewController:(id)controller transitionDidFinishForDrawerViewController:(id)controller didShow:(BOOL)show;
- (void)shouldRedirectToStackedTimeline:(BOOL)timeline;
- (BOOL)storyDrawerShouldBeginGestureRecognizer:(id)recognizer;
- (void)storyDrawerWillShow:(id)show;
- (void)storyDrawerWillDismiss:(id)dismiss withDismissStyle:(unsigned long long)style;
- (void)storyDrawerDidDismiss:(id)dismiss;
- (void)storyDrawerTransitionDidFinish:(id)finish didShow:(BOOL)show;
- (void)storyMediaReplyOverlayController:(id)controller willUpdateToOverlayStyle:(long long)style animationDuration:(double)duration;
- (void)storyMediaReplyOverlayController:(id)controller didUpdateToOverlayStyle:(long long)style;
- (id)storyMediaReplyOverlayControllerNuxHostingView;
- (void)captureButtonDidConfirm;
- (void)captureButtonDidBeginExpanding;
- (void)captureButtonDidTouchDown;
- (void)captureButtonDidReleaseBeforeExpandingFinished;
- (void)captureButtonDidReleaseAfterExpandingFinished;
- (void)captureButtonDidReleaseFromInterruption;
- (void)captureButtonDidEndExpanding;
- (void)сonsentStateHasChanged;
- (void)_applicationDidEnterBackground:(id)background;
- (void)applicationWillEnterForegroundListener;
- (void)_volumeButtonReleased;
- (void)_volumeButtonPressed:(id)pressed;
- (void)fetchMediaForGalleryPickerFromAsset:(id)asset identifier:(id)identifier;
- (void)fetchMediaForGalleryPickerFromVideoAsset:(id)asset;
- (void)cameraEffectApplyVideoAsset:(id)asset useHighQuality:(BOOL)quality;
- (void)hideGalleryFirstViewController:(BOOL)controller withCameraSwitcherPillBackground:(BOOL)background;
- (id)storyCameraOverlayViewControllerCameraCaptureView:(id)view;
- (void)storyCameraOverlayViewController:(id)controller setOverlayHidden:(BOOL)hidden;
- (void)storyLiveFormatViewController:(id)controller setOverlayHidden:(BOOL)hidden;
- (void)storyLiveFormatViewController:(id)controller setOverlayHeaderViewHidden:(BOOL)hidden;
- (void)liveMainViewController:(id)controller didTapSUPButton:(long long)supbutton completion:(id /* block */)completion;
- (void)liveMainViewControllerDidSwitchToActiveState:(id)state;
- (void)liveMainViewControllerDidFinishSession:(id)session afterSuccessfulBroadcasting:(BOOL)broadcasting sharedToIGTV:(BOOL)igtv sharedLiveToStory:(BOOL)story startNewLive:(BOOL)live;
- (void)liveMainViewController:(id)controller didFailWithMessage:(id)message;
- (void)liveMainViewController:(id)controller didTapWithGestureRecognizer:(id)recognizer;
- (void)zoomController:(id)controller didChangeZoomScaleBy:(double)by;
- (void)zoomControllerDidStopZoom:(id)zoom withGestureRecognizer:(id)recognizer;
- (void)captureButtonDidZoomScale:(double)scale;
- (void)audioStatusDidChangeIsAudioEnabled:(BOOL)enabled forReason:(long long)reason;
- (void)browserControllerDidDismissWithUrl:(id)url;
- (void)browserControllerDidChangeUrl:(id)url;
- (void)didRequestPopupForNavigationAction:(id)action;
- (void)updateHasAddYourBrowsingSticker:(BOOL)sticker;
- (void)didBecomeActiveFromDraftsEditingSheetCamera;
- (void)didDismissPostCaptureWithoutSharingComposition:(id)composition;
- (void)didDismissPostCaptureBySharing;
- (void)didDismissPostCaptureBySavingDraft;
- (void)resetMediaReplyOverlayController;
- (void)startCaptureSession;
- (void)stopCaptureSession;
- (void)_showAREffectTrayFromTapToFocus;
- (void)willBecomeActiveFromEntryPoint:(long long)point;
- (void)willBecomeActiveFromEntryPoint:(long long)point switcherMode:(id)mode;
- (void)willBecomeActiveFromEntryPoint:(long long)point switcherMode:(id)mode shouldExitVCIfNeeded:(BOOL)needed configuration:(id)configuration;
- (void)didBecomeActive;
- (void)willBecomeInactive;
- (void)tabBarControllerDidScroll;
- (void)cameraEffectCollectionDataSource:(id)source didUpdateUsingPage:(id)page resultSource:(long long)source;
- (void)cameraEffectCollectionDataSource:(id)source didFailWithError:(id)error resultSource:(long long)source;
- (void)cameraEffectMiniGalleryViewController:(id)controller didSelectEffect:(id)effect;
- (void)cameraEffectMiniGalleryViewController:(id)controller logSelectedEffect:(id)effect index:(long long)index;
- (void)cameraEffectMiniGalleryViewControllerDidClearSelection:(id)selection;
- (void)cameraEffectMiniGalleryViewControllerDidTapSwitchCamera:(id)camera;
- (void)cameraEffectMiniGalleryViewControllerWillExitFullscreen:(id)fullscreen;
- (void)cameraEffectMiniGalleryViewControllerDidEnterFullscreen:(id)fullscreen;
- (void)cameraEffectMiniGalleryViewControllerDidSwitchCategories:(id)categories;
- (void)cameraEffectMiniGalleryViewControllerWillDismiss:(id)dismiss;
- (void)cameraEffectMiniGalleryViewControllerDidLogImpressionForEffectID:(id)id;
- (BOOL)cameraEffectMiniGalleryViewControllerEffectIdIsLogged:(id)logged;
- (void)cameraEffectMiniGalleryPlusViewControllerLogImpressionForEffectID:(id)id categoryID:(id)id;
- (BOOL)cameraEffectMiniGalleryPlusViewControllerEffectIdIsLogged:(id)logged categoryID:(id)id;
- (id)cameraEffectMiniGalleryViewControllerAREffectAttributionForCurrentItem:(id)item;
- (void)storyCameraOverlayViewControllerDidSelectMiniGallery:(id)gallery;
- (void)storyCameraOverlayViewControllerDidTapAddARSticker:(id)arsticker;
- (void)presentEffectGallery;
- (void)presentSavedEffectGallery;
- (void)presentGreenScreenTool;
- (void)storyCameraOverlayViewController:(id)controller didToggleNetworkAccess:(BOOL)access;
- (void)storyCameraOverlayViewController:(id)controller didToggleMuteButton:(BOOL)button;
- (void)storyCameraOverlayView:(id)view didScaleZoom:(double)zoom;
- (void)storyCameraOverlayView:(id)view didZoomByPercent:(double)percent;
- (void)storyCameraOverlayViewDidUpdatePermissions:(id)permissions;
- (void)storyCameraOverlayViewControllerDidTapShutterButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapGalleryButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapSwitchCameras:(id)cameras;
- (void)storyCameraOverlayViewControllerDidTapHistoryButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapLightingButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapAudioButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapAnonymityButton:(id)button;
- (void)storyCameraOverlayViewController:(id)controller didSwitchFromCameraMode:(id)mode toCameraMode:(id)mode;
- (void)storyCameraOverlayViewControllerDidTapTryIt:(id)it onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)storyCameraOverlayViewControllerDidExitAddYoursBrowsing:(id)browsing withPromptStickerView:(id)view;
- (void)storyCameraOverlayViewController:(id)controller didTapSUPButton:(long long)supbutton completion:(id /* block */)completion;
- (void)storyCameraOverlayViewControllerDidTapSUPRequestCapture:(id)capture;
- (void)storyCameraOverlayViewController:(id)controller didEndScrollOnCameraMode:(id)mode;
- (void)storyCameraOverlayViewControllerDidAbortCameraPermissions:(id)permissions;
- (void)storyCameraOverlayViewControllerDidTapCloseButton:(id)button;
- (void)storyCameraOverlayViewControllerDidTapSettingsButton:(id)button;
- (void)storyCameraOverlayViewControllerDidBeginHandsFreeCountdown:(id)countdown;
- (void)storyCameraOverlayViewController:(id)controller didFinishHandsFreeCountdown:(BOOL)countdown;
- (void)storyCameraOverlayViewController:(id)controller didSelectAREffectScrollingSelectorItemAtIndex:(long long)index;
- (void)storyCameraOverlayViewController:(id)controller didEndScrollingOnAREffectScrollingSelectorItemIndex:(long long)index;
- (void)storyCameraOverlayViewController:(id)controller canvasModeViewControllerDidShareToStory:(long long)story andDirectRecipients:(id)recipients;
- (BOOL)storyCameraOverlayViewController:(id)controller shouldTapSticker:(id)sticker;
- (void)storyCameraOverlayViewController:(id)controller didTapSticker:(id)sticker;
- (void)storyCameraOverlayViewController:(id)controller didSelectMusicClip:(id)clip;
- (void)storyCameraOverlayViewController:(id)controller didSelectShareUpcomingEvent:(id)event;
- (void)storyCameraOverlayViewController:(id)controller didTapShareStoryForEvent:(id)event;
- (BOOL)storyCameraOverlayViewControllerDialShouldAllowVideoCapture:(id)capture;
- (void)storyCameraOverlayViewControllerDialDidFailVideoCapture:(id)capture;
- (void)storyCameraOverlayViewControllerDialDidStartVideoCapture:(id)capture;
- (void)storyCameraOverlayViewControllerDialDidStopVideoCapture:(id)capture;
- (void)storyCameraOverlayViewControllerTrayDidAppear:(id)appear;
- (void)storyCameraOverlayViewControllerTrayDidDisappear:(id)disappear;
- (void)storyCameraOverlayView:(id)view didChangePickerValueWithIndex:(long long)index;
- (void)storyCameraOverlayView:(id)view didChangeSliderWithValue:(double)value;
- (void)storyCameraOverlayView:(id)view didChangeText:(id)text;
- (void)storyCameraOverlayViewDidExitTextInput:(id)input;
- (void)storyCameraOverlayViewDidExitEditableTextInput:(id)input text:(id)text;
- (BOOL)storyCameraOverlayViewController:(id)controller shouldHideModeSwitcherForTrayItem:(id)item;
- (BOOL)storyCameraOverlayViewControllerShouldReloadDialTray;
- (BOOL)storyCameraOverlayViewController:(id)controller shouldHideToolMenuTitlesForTrayItem:(id)item;
- (void)storyCameraOverlayViewControllerDidTapClearEffect:(id)effect;
- (void)storyCameraOverlayViewController:(id)controller dialDidSelectAREffect:(id)areffect atIndex:(unsigned long long)index usingData:(id)data;
- (void)storyCameraOverlayViewControllerDialDidDeselectCurrentAREffect:(id)areffect reason:(long long)reason;
- (void)storyCameraOverlayViewController:(id)controller didRequestRemovalOfAREffectWithID:(id)id;
- (void)storyCameraOverlayViewController:(id)controller didManuallyScrollToDialItemAt:(long long)at;
- (void)storyCameraOverlayViewControllerDidTapEffectNetworkConsentPill:(id)pill;
- (void)storyCameraOverlayViewControllerDidTapAddGalleryPickerEffectMedia:(id)media;
- (void)presentViewController:(id)controller animated:(BOOL)animated completion:(id /* block */)completion;
- (long long)storyCameraOverlayViewControllerNumberOfAREffectDialItems:(id)items;
- (long long)storyCameraOverlayViewControllerNumberOfSavedAREffectDialItems:(id)items;
- (long long)storyCameraOverlayViewControllerSurface:(id)surface;
- (id)arEffectModelsForStoryCameraOverlayViewController:(id)controller;
- (id)unsavedAREffectModelsForStoryCameraOverlayViewController:(id)controller;
- (id)savedAREffectModelsForStoryCameraOverlayViewController:(id)controller;
- (id)miniGalleryEffectsInStoryCameraOverlayViewController:(id)controller;
- (id)miniGallerySavedEffectsInStoryCameraOverlayViewController:(id)controller;
- (id)storyCameraOverlayViewController:(id)controller modelForAREffectID:(id)id;
- (id)pendingEffectTargetForStoryCameraOverlayViewController:(id)controller;
- (id)storyCameraOverlayViewControllerAREffectAttributionForCurrentItem:(id)item;
- (long long)storyCameraOverlayViewControllerAREffectButtonAppearance:(id)appearance;
- (BOOL)storyCameraOverlayViewControllerAreAREffectsAvailable:(id)available;
- (void)cameraViewControllerWantsDisableOfMultiCam:(id)cam;
- (void)cameraViewControllerWillStopRecording:(id)recording;
- (void)cameraViewControllerDidStopRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration error:(id)error;
- (void)cameraViewController:(id)controller didUpdateRecordProgress:(double)progress;
- (void)cameraViewController:(id)controller didFinishWithDevicePosition:(long long)position videoInfos:(id)infos images:(id)images;
- (void)cameraViewController:(id)controller failedToCapturePhotoWithError:(id)error;
- (void)cameraViewController:(id)controller didFinishWithBoomerangManager:(id)manager;
- (void)cameraViewController:(id)controller willSwitchFromCameraPosition:(long long)position;
- (void)cameraViewController:(id)controller didSwitchToCameraPosition:(long long)position withUserInput:(unsigned long long)input;
- (void)cameraViewController:(id)controller didChangeLightingMode:(long long)mode;
- (void)cameraViewControllerDidUpdateLightingCapability:(id)capability;
- (void)cameraViewController:(id)controller captureDidBecomeAvailable:(BOOL)available;
- (void)cameraViewController:(id)controller didChangeCameraState:(long long)state;
- (void)cameraViewController:(id)controller didStartCaptureSessionWithCameraPosition:(long long)position cameraOrientation:(long long)orientation;
- (void)cameraViewControllerDidReceiveFirstFrame:(id)frame;
- (void)cameraViewControllerDidStartCameraSwitch:(id)switch;
- (void)cameraViewController:(id)controller didReceiveFirstFrameAfterSwitchingCamerasWithCameraPosition:(long long)position cameraOrientation:(long long)orientation;
- (void)cameraViewControllerDidStopCapture:(id)capture;
- (void)cameraViewControllerWillRequestStartRecording:(id)recording;
- (void)cameraViewControllerDidRequestStartRecording:(id)recording;
- (void)cameraViewControllerDidStartRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })cameraViewControllerSafeAreaInsets:(id)insets;
- (void)cameraViewController:(id)controller startAudioSessionDidError:(id)error;
- (void)cameraViewControllerDidPauseRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)cameraViewControllerDidResumeRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)storyCameraOverlayViewMoreInfoSheetDidEnterFullscreenMode:(id)mode;
- (void)storyCameraOverlayViewMoreInfoSheetDidLeaveFullscreenMode:(id)mode;
- (void)cameraViewController:(id)controller didToggleHDR:(BOOL)hdr;
- (BOOL)cameraViewControllerCropAspectRatio:(id)ratio;
- (void)cameraViewController:(id)controller didDetectFaceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)cameraViewController:(id)controller didUpdateFlashScene:(BOOL)scene;
- (void)arEffectApplicatorUserDidTurnOffAREffect:(id)areffect;
- (void)arEffectApplicatorAREffectDidBecomeAvailable:(id)available;
- (void)arEffectApplicator:(id)applicator didFailWithTargetEffectResponse:(id)response;
- (void)arEffectApplicator:(id)applicator didFailFetchWithError:(id)error;
- (void)arEffectApplicator:(id)applicator didFailToDownloadAssetForAssetModel:(id)model;
- (void)arEffectApplicatorDidFailToDownload:(id)download;
- (void)arEffectApplicatorDidFailToDownloadRemoteModel:(id)model;
- (void)arEffectApplicator:(id)applicator didUpdateAREffectTouchSupportedStatus:(BOOL)status;
- (void)arEffectApplicatorDidUpdateEffectList:(id)list fromNetwork:(BOOL)network;
- (void)arEffectApplicator:(id)applicator didDownloadAREffectAsset:(id)asset withIsPrefetch:(BOOL)prefetch;
- (void)instructionServiceHandler:(id)handler requestsShowAREffectTextInstructions:(id)instructions forDuration:(double)duration;
- (void)instructionServiceHandler:(id)handler requestsShowAREffectImages:(id)images;
- (void)instructionServiceHandlerRequestsHideAREffectInstructions:(id)instructions;
- (void)cameraViewController:(id)controller didBeginFetchingEffectTarget:(id)target;
- (void)cameraViewController:(id)controller didCompleteFetchForEffectTarget:(id)target;
- (void)cameraViewControllerDidTurnOffAREffects:(id)areffects;
- (void)cameraViewController:(id)controller didFailFetchForEffectTarget:(id)target response:(id)response;
- (void)cameraViewController:(id)controller didFailFetchWithError:(id)error;
- (BOOL)cameraViewControllerShouldFetchForSwitcherMode:(id)mode;
- (void)arEffectApplicator:(id)applicator willApplyAREffect:(id)areffect;
- (void)arEffectApplicatorWillUnApplyAREffect:(id)areffect isSwitchingAREffect:(BOOL)areffect;
- (void)arEffectApplicator:(id)applicator willAddFilterWithConfig:(id)config assetModel:(id)model completion:(id /* block */)completion;
- (void)arEffectApplicator:(id)applicator willAddFilter:(id)filter completion:(id /* block */)completion;
- (BOOL)arEffectApplicatorCanUseAREngineFilterFlow:(id)flow;
- (void)arEffectApplicator:(id)applicator willAddFilter:(id)filter completionWithServiceHost:(id /* block */)host;
- (void)arEffectApplicator:(id)applicator didSetEffect:(id)effect withAttribution:(id)attribution;
- (void)arEffectApplicator:(id)applicator didRenderEffect:(id)effect;
- (void)arEffectApplicatorDidFailToRender:(id)render;
- (void)cameraViewController:(id)controller willProcessVideoBuffer:(struct opaqueCMSampleBuffer *)buffer metadata:(id)metadata;
- (void)cameraViewController:(id)controller didReceiveProcessedVideoBuffer:(struct opaqueCMSampleBuffer *)buffer metadata:(id)metadata;
- (void)cameraViewController:(id)controller didReceiveAudioBuffer:(struct opaqueCMSampleBuffer *)buffer withVolumeLevel:(float)level;
- (void)addFundraiserInPreLiveWithExistingFundraiser:(id)fundraiser fundraiserTitle:(id)title;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)willDismissStickerTrayViewController:(id)controller trayStateModel:(id)model;
- (void)stickerTrayViewController:(id)controller didChangeContentState:(unsigned long long)state;
- (BOOL)canRespondToGesture:(id)gesture;
- (void)cameraEffectCategoryProviderDidUpdate:(id)update;
- (void)cameraEffectCategoryProvider:(id)provider didFailWithError:(id)error;
- (BOOL)stickerGestureController:(id)controller stickerCanBePlacedOffscreen:(id)offscreen;
- (BOOL)stickerGestureController:(id)controller stickerCanBePlacedOffGuidelines:(id)guidelines;
- (BOOL)stickerGestureController:(id)controller stickerCanBeDeleted:(id)deleted;
- (id)stickerGestureController:(id)controller additionalStickersForDeletionWithSticker:(id)sticker;
- (BOOL)stickerGestureController:(id)controller shouldBeginPositioningSticker:(id)sticker withGesture:(id)gesture;
- (BOOL)stickerGestureController:(id)controller shouldBringStickerToFront:(id)front withGesture:(id)gesture;
- (void)stickerGestureController:(id)controller didTapSticker:(id)sticker atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)stickerGestureController:(id)controller willBeginPositioningSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didFinishPositioningSticker:(id)sticker deleted:(BOOL)deleted;
- (void)stickerGestureController:(id)controller didUpdateStickerPosition:(id)position;
- (void)stickerGestureController:(id)controller willDeleteSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didDeleteSticker:(id)sticker deleteVariant:(long long)variant;
- (void)stickerGestureController:(id)controller didLongPressOnSticker:(id)sticker longPressGesture:(id)gesture;
- (void)stickerGestureController:(id)controller didUpdateAlignmentGuideState:(unsigned long long)state;
- (double)stickerGestureController:(id)controller maximumScaleForSticker:(id)sticker;
- (double)stickerGestureController:(id)controller minimumScaleForSticker:(id)sticker;
- (long long)stickerGestureController:(id)controller minimumIndexForSticker:(id)sticker;
- (long long)stickerGestureController:(id)controller maximumIndexForSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didBringStickerToFront:(id)front;
- (id)footerViewForTransition;
- (id)headerViewForTransition;
- (void)upcomingEventDetailsViewController:(id)controller didEditUpcomingEvent:(id)event;
- (void)upcomingEventDetailsViewController:(id)controller didDeleteUpcomingEvent:(id)event;
- (void)galleryFirstViewControllerCloseTapped:(id)tapped;
- (void)galleryFirstViewControllerHeaderTapped:(id)tapped;
- (void)_didTapCloseButton;
- (void)receivedAvatarPlatformEventWithData:(id)data;
- (void)_showAICharacterEffectNotAvailableAlert;
- (void)receivedCharacterPlatformEventWithData:(id)data;
- (void)avatarStatusManagerDidCreateAvatar:(id)avatar;
- (void)avatarStatusManager:(id)manager didUpdateAvatarStatus:(long long)status;
- (void)avatarStatusManagerDidDeleteAvatar:(id)avatar;
- (void)avatarStatusManagerDidUpdateAvatar:(id)avatar;
- (void)addFormatView:(id)view;
- (void)addCameraView:(id)view;
- (void)addOverlayView:(id)view;
- (void)addTransitionView:(id)view;
- (void)creationFormat:(id)format willAppear:(BOOL)appear;
- (void)creationFormat:(id)format didAppear:(BOOL)appear;
- (void)creationFormat:(id)format willDisappear:(BOOL)disappear;
- (void)creationFormat:(id)format didDisappear:(BOOL)disappear;
- (void)storyFormatViewControllerWantsClearOfCurrentCameraFormat:(id)format;
- (void)greenScreenGalleryPickerViewControllerDidTapSwitchCamera:(id)camera;
- (void)greenScreenGalleryPickerViewControllerWillExitFullscreen:(id)fullscreen;
- (void)greenScreenGalleryPickerViewControllerDidEnterFullscreen:(id)fullscreen;
- (void)greenScreenGalleryPickerViewControllerWillDismiss:(id)dismiss;
- (void)greenScreenGalleryPickerViewController:(id)controller selectSceneWithImageData:(id)data identifier:(id)identifier;
- (void)greenScreenGalleryPickerViewController:(id)controller selectGIFWithUrl:(id)url;
- (void)greenScreenGalleryPickerNewViewControllerDidTapSwitchCamera:(id)camera;
- (void)greenScreenGalleryPickerNewViewControllerWillExitFullscreen:(id)fullscreen;
- (void)greenScreenGalleryPickerNewViewControllerDidEnterFullscreen:(id)fullscreen;
- (void)greenScreenGalleryPickerNewViewControllerWillDismiss:(id)dismiss;
- (void)greenScreenGalleryPickerNewViewController:(id)controller selectSceneWithImageData:(id)data identifier:(id)identifier;
- (void)greenScreenGalleryPickerNewViewController:(id)controller selectGIFWithUrl:(id)url;
- (void)_setSmartGlassesDidStartRecordingIfNecessary;
- (void)_setSmartGlassesDidStopRecordingIfNecessary;
- (void)_smartGlassesMaybeDidTakePicture;
- (BOOL)_isSwitchingCameraFormatFromCameraMode:(long long)mode toCameraMode:(long long)mode;
- (void)didReceivePhotoCaptureGesture;
- (void)didReceiveToggleVideoCaptureGesture;
- (void)didDismissWithStoryTarget:(long long)target exitPoint:(long long)point directRecipients:(id)recipients storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids completion:(id /* block */)completion;
- (void)didUpdateCameraCreationViewMode:(id)mode;
- (void)dismissViewControllerAnimated:(BOOL)animated;
- (void)handleUserScopedIntent:(id)intent;
- (void)updateCurrentCameraFormat:(id)format;
- (void)storyFormatViewControllerDidProcessWithMediaComposition:(id)composition;
- (BOOL)shouldPerformActionInsteadOfReportingForRageShakeInterval:(double)interval;
- (id /* block */)actionToPerformOnRageShake;
- (void)navigationLatencyLogging:(id)logging didStartTracking:(id)tracking;
- (id)cssCameraSessionId;
- (id)cssEntryPoint;
- (id)cssCameraDestination;
- (id)cssSurface;
- (void)musicFirstCreationHandlerDidProduceMediaCompositionState:(id)state;
- (void)musicFirstCreationHandlerDidCancelAudioSelection;
- (void)_presentAudioBrowserForMusicFirstFormat;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (BOOL)isVisible;
@end

#endif /* IGStoryCameraViewController_h */
