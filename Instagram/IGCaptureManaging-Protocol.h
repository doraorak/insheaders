//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGCaptureManaging_Protocol_h
#define IGCaptureManaging_Protocol_h
@import Foundation;

@protocol IGCaptureManaging <IGVideoCapturing, IGAudioCapturing, IGCameraSLAMControllerProvider>

@property (nonatomic, readonly) AVCaptureVideoPreviewLayer *previewLayer;
@property (nonatomic, weak) NSObject<IGCaptureManagerDelegate> *delegate;
@property (nonatomic, weak) NSObject<IGCaptureManagerVideoSampleBufferProcessing> *videoSampleBufferProcessor;
@property (nonatomic, weak) NSObject<IGCaptureManagerVideoPreviewSampleBufferDelegate> *videoPreviewSampleBufferDelegate;
@property (nonatomic, weak) NSObject<IGCaptureManagerVideoSampleBufferDelegate> *videoSampleBufferDelegate;
@property (nonatomic, weak) NSObject<IGCaptureManagerAudioSampleBufferDelegate> *audioSampleBufferDelegate;
@property (nonatomic, weak) NSObject<IGCaptureManagerAudioSessionDelegate> *audioSessionDelegate;
@property (nonatomic, weak) NSObject<IGCaptureManagerVideoSessionDelegate> *videoSessionDelegate;
@property (nonatomic, weak) NSObject<IGCaptureManagerAdditionalCaptureMetadataDelegate> *additionalCaptureMetadataDelegate;
@property (nonatomic, weak) NSObject<IGCaptureManagerPreviewSizeProvider> *previewSizeProvider;
@property (nonatomic, weak) NSObject<IGMediaSharePlayerProtocol> *mediaSharePlayer;
@property (nonatomic, readonly) NSString *postARFBFilterIdentifier;
@property (nonatomic, readonly) double postARFBFilterStrength;
@property (nonatomic, readonly) NSArray *captureDevices;
@property (nonatomic, readonly) BOOL multiCaptureEnabled;
@property (nonatomic, readonly) NSString *mainCameraDeviceID;
@property (nonatomic) long long cameraPosition;
@property (nonatomic, readonly) long long videoOutputOrientation;
@property (nonatomic) long long sessionPreset;
@property (nonatomic) long long flashMode;
@property (nonatomic) long long torchMode;
@property (nonatomic) double zoom;
@property (nonatomic) double zoomScale;
@property (nonatomic, readonly) BOOL audioEnabled;
@property (nonatomic) BOOL audioCaptureIgnoreRTCClientNotification;
@property (nonatomic) BOOL videoMirrored;
@property (nonatomic) BOOL videoCapturePaused;
@property (nonatomic) BOOL hasAREffect;
@property (nonatomic) BOOL livePhotoEnabled;
@property (nonatomic) BOOL bracketedCaptureEnabled;
@property (nonatomic, readonly) unsigned long long supportedCameraCapabilities;
@property (nonatomic, readonly) double currentISO;
@property (nonatomic, readonly) double maxISO;
@property (nonatomic) long long frameRate;
@property (nonatomic) BOOL allowHighResolutionCapture;
@property (nonatomic) BOOL hdrVideoCaptureEnabled;
@property (nonatomic) BOOL consumeAudioWhenSessionStopped;

/* instance methods */
- (struct CGSize { double x0; double x1; })videoSizeForCurrentSessionPreset;
- (void)setPostARFBFilterWithIdentifier:(id)identifier filterParameters:(id)parameters index:(unsigned long long)index completion:(id /* block */)completion;
- (void)updateCurrentFilterInputs:(id)inputs parameters:(id)parameters index:(unsigned long long)index completion:(id /* block */)completion;
- (BOOL)currentDeviceHasFlash;
- (BOOL)currentSessionSupportsFlash;
- (void)prepareForStartSession;
- (void)startSessionWithCompletion:(id /* block */)completion;
- (void)startSessionWithCompletion:(id /* block */)completion;
- (void)didRenderFirstVideoFrameWithCameraSessionID:(id)id cameraDestination:(id)destination renderStartTime:(id)time renderFinishTime:(double)time previewLayerType:(unsigned long long)type;
- (void)didRenderFirstVideoFrameWithCameraSessionID:(id)id cameraDestination:(id)destination renderStartTime:(id)time renderFinishTime:(double)time previewLayerType:(unsigned long long)type;
- (void)stopAllSessionsAndCleanUpWithCompletion:(id /* block */)completion;
- (void)stopAllSessionsAndCleanUpWithCompletion:(id /* block */)completion;
- (void)didBecomeActive;
- (void)willBecomeInactive;
- (void)interruptSessionWithCompletion:(id /* block */)completion;
- (void)interruptSessionWithCompletion:(id /* block */)completion;
- (BOOL)isVideoSessionRunning;
- (BOOL)isAudioCaptureRunning;
- (void)setAudioEnabled:(BOOL)enabled allowBgAudioMixing:(BOOL)mixing;
- (void)setShouldFrontCameraVideoMirrored:(BOOL)mirrored completion:(id /* block */)completion;
- (void)switchCaptureDevice:(id)device withVideoMirroredIfNeeded:(BOOL)needed completion:(id /* block */)completion;
- (void)switchCaptureDevice:(id)device withVideoMirroredIfNeeded:(BOOL)needed completion:(id /* block */)completion;
- (void)setCaptureDevices:(id)devices useMultiCaptureIfPossible:(BOOL)possible completion:(id /* block */)completion;
- (void)setVideoOrientation:(long long)orientation;
- (void)focusAndExposeAtPoint:(struct CGPoint { double x0; double x1; })point completion:(id /* block */)completion;
- (void)focusAndExposeAtPoint:(struct CGPoint { double x0; double x1; })point completion:(id /* block */)completion;
- (void)lockFocusWithCompletion:(id /* block */)completion;
- (void)lockFocusWithCompletion:(id /* block */)completion;
- (void)unlockFocusWithCompletion:(id /* block */)completion;
- (void)unlockFocusWithCompletion:(id /* block */)completion;
- (void)takePictureWithCompletionHandler:(id /* block */)handler;
- (void)takePictureWithCompletionHandler:(id /* block */)handler;
- (void)takePicturesWithCaptureDevices:(id)devices useHighResolutionIfPossible:(BOOL)possible completion:(id /* block */)completion;
- (void)takePicturesWithCaptureDevices:(id)devices useHighResolutionIfPossible:(BOOL)possible completion:(id /* block */)completion;
- (BOOL)isUsingVideoSessionPreset;
- (BOOL)detectedLowLightConditions;
- (void)captureControllerDidStartRecording;
- (void)captureControllerDidStopRecording;
- (void)deactivateSystemAudioSession;
- (void)deactivateAudioSession;
- (void)deactivateAndDestroyAudioSession;
- (void)setProductSessionId:(id)id;
- (void)setProductName:(unsigned long long)name;
- (void)logCameraEvent:(id)event extras:(id)extras error:(id)error;
- (void)setSpeakerMuted:(BOOL)muted;
- (void)setSpeakerDefaultMuted:(BOOL)muted;
- (BOOL)isSpeakerMuted;
- (id)previewLayerForPosition:(long long)position;
- (id)previewLayerForPosition:(long long)position;
- (id)previewLayerForDevice:(id)device;
- (id)previewLayerForDevice:(id)device;
- (struct CGPoint { double x0; double x1; })captureDevicePointOfInterestForPoint:(struct CGPoint { double x0; double x1; })point view:(id)view;
- (struct CGPoint { double x0; double x1; })captureDevicePointOfInterestForPoint:(struct CGPoint { double x0; double x1; })point view:(id)view;
- (void)pauseCameraCaptureSession;
- (void)pauseCameraCaptureSessionAndAudio:(BOOL)audio;
- (void)resumeCameraCaptureSession;
@end

#endif /* IGCaptureManaging_Protocol_h */
