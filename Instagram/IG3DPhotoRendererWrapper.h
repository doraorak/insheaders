//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IG3DPhotoRendererWrapper_h
#define IG3DPhotoRendererWrapper_h
@import Foundation;

#include "IG3DPhotoViewParams.h"
#include "NSObject-Protocol.h"

@class NSString;
@protocol {shared_ptr<photo3d::renderer::Photo3DRenderer>="__ptr_"^{Photo3DRenderer}"__cntrl_"^{__shared_weak_count}};

@interface IG3DPhotoRendererWrapper : NSObject<NSObject> {
  /* instance variables */
  struct shared_ptr<photo3d::renderer::Photo3DRenderer> { struct Photo3DRenderer *__ptr_; struct __shared_weak_count *__cntrl_; } _photoRenderSession;
  struct Size { float width; float height; } _renderSize;
  BOOL _loadSuccess;
}

@property (readonly, nonatomic) IG3DPhotoViewParams *viewParams;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithViewParams:(id)params device:(struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; })device;
- (BOOL)glbLoaded;
- (void)renderWithCommandBuffer:(struct shared_ptr<igl::ICommandBuffer> { struct ICommandBuffer * x0; struct __shared_weak_count * x1; })buffer renderPassDescriptor:(struct RenderPassDesc { struct vector<igl::RenderPassDesc::ColorAttachmentDesc, std::allocator<igl::RenderPassDesc::ColorAttachmentDesc>> { struct ColorAttachmentDesc * x0; struct ColorAttachmentDesc * x1; struct __compressed_pair<igl::RenderPassDesc::ColorAttachmentDesc *, std::allocator<igl::RenderPassDesc::ColorAttachmentDesc>> { struct ColorAttachmentDesc * x0; } x2; } x0; struct DepthAttachmentDesc { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; float x5; } x1; struct StencilAttachmentDesc { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned int x5; } x2; })descriptor framebuffer:(struct shared_ptr<igl::IFramebuffer> { struct IFramebuffer * x0; struct __shared_weak_count * x1; })framebuffer;
- (BOOL)isReady;
- (struct CGSize { double x0; double x1; })extraFovForDepthPhoto;
- (unsigned long long)numberOfTriangles;
- (unsigned long long)numberOfVertices;
- (unsigned long long)totalTextureSize;
@end

#endif /* IG3DPhotoRendererWrapper_h */
