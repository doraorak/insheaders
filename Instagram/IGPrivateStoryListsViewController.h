//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGPrivateStoryListsViewController_h
#define IGPrivateStoryListsViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGGestureHandler-Protocol.h"
#include "IGListAdapterDataSource-Protocol.h"
#include "IGPrivateStoryListViewModel.h"
#include "IGScopedListener-Protocol.h"
#include "IGStoryAudienceSelectionViewControllerDelegate-Protocol.h"
#include "IGStoryViewerAudiencePresenting-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"

@class IGBottomButtonsView, IGListAdapter, IGUser, IGUserSession, NSArray, NSMutableOrderedSet, NSString, UICollectionView;
@protocol IGPrivateStoryListsViewControllerDelegate;

@interface IGPrivateStoryListsViewController : IGViewController<IGListAdapterDataSource, IGStoryAudienceSelectionViewControllerDelegate, UIScrollViewDelegate, IGGestureHandler, IGStoryViewerAudiencePresenting, IGScopedListener> {
  /* instance variables */
  IGUserSession *_userSession;
  UICollectionView *_collectionView;
  IGBottomButtonsView *_footerButton;
  IGListAdapter *_listAdapter;
  BOOL _isLoading;
  NSArray *_privateLists;
  NSMutableOrderedSet *_selectedLists;
  NSArray *_mediaAudienceLists;
  long long _entryPoint;
  IGPrivateStoryListViewModel *_swipedOpenViewModel;
  IGUser *_user;
}

@property (weak, nonatomic) NSObject<IGPrivateStoryListsViewControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session entryPoint:(long long)point;
- (id)initWithUserSession:(id)session entryPoint:(long long)point mediaAudienceLists:(id)lists;
- (id)initWithUserSession:(id)session entryPoint:(long long)point user:(id)user;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidLayoutSubviews;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (BOOL)canRespondToGesture:(id)gesture;
- (id)objectsForListAdapter:(id)adapter;
- (id)listAdapter:(id)adapter sectionControllerForObject:(id)object;
- (id)emptyViewForListAdapter:(id)adapter;
- (void)didInitiateSecondaryActionForList:(id)list;
- (void)didSelectCellForList:(id)list;
- (void)didSelectMultiSelectCellForList:(id)list;
- (void)didDeselectMultiSelectCellForList:(id)list;
- (void)didTapDeleteButtonForList:(id)list;
- (void)didShowSwipeActionsForCellWithViewModel:(id)model;
- (void)_backButtonTapped;
- (void)_openCreatePrivateListViewController;
- (void)audienceSelectionViewControllerDidTapCreateSharedList:(id)list;
- (void)audienceSelectionViewControllerDidSuccessfullyCreateSharedList:(id)list sharedListID:(id)id;
- (void)audienceSelectionViewControllerDidFailToCreateSharedList:(id)list;
- (void)audienceSelectionViewControllerDidTapBackButton:(id)button;
- (void)audienceSelectionViewControllerDidTapDoneButton:(id)button;
- (void)audienceSelectionViewControllerDidTapShare:(id)share privateStoryList:(id)list;
- (void)audienceSelectionViewControllerDidTapShare:(id)share audienceSelectionType:(long long)type selectedMembers:(id)members;
- (void)audienceSelectionViewControllerWillDismissWithMembers:(id)members andExitPoint:(long long)point;
- (void)audienceSelectionViewControllerDidTapDeletePrivateStoryList:(id)list privateStoryList:(id)list;
- (void)audienceSelectionViewControllerDidCreatePrivateStoryList:(id)list privateStoryList:(id)list;
- (void)didUpdateMembersForMainList:(id)list;
- (void)didUpdateMembersForPrivateList:(id)list members:(id)members;
- (void)didUpdatePrivateLists:(id)lists;
- (void)didUpdateSelectedPrivateList;
- (void)didEditOrDeletePrivateList;
- (void)presentStoryViewerAudienceAlertForStoryItem:(id)item loggingEntrypoint:(long long)entrypoint presentingViewController:(id)controller onDismiss:(id /* block */)dismiss;
- (void)scrollViewDidScroll:(id)scroll;
- (void)shareSheetActionSectionControllerDidTapAction:(id)action;
@end

#endif /* IGPrivateStoryListsViewController_h */
