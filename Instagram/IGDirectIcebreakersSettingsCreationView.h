//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGDirectIcebreakersSettingsCreationView_h
#define IGDirectIcebreakersSettingsCreationView_h
@import Foundation;

#include "UIView.h"
#include "IGUserLauncherSetProviding-Protocol.h"
#include "UITableViewDataSource-Protocol.h"
#include "UITableViewDelegate-Protocol.h"
#include "UITextViewDelegate-Protocol.h"

@class CALayer, IGTextView, NSMutableArray, NSString, UIButton, UILabel, UITableView;
@protocol IGDirectIcebreakersSettingsCreationViewDelegate;

@interface IGDirectIcebreakersSettingsCreationView : UIView<UITextViewDelegate, UITableViewDelegate, UITableViewDataSource> {
  /* instance variables */
  BOOL _editMode;
  NSObject<IGDirectIcebreakersSettingsCreationViewDelegate> *_delegate;
  UILabel *_titleLabel;
  UILabel *_descriptionLabel;
  UILabel *_questionLabel;
  UILabel *_questionError;
  CALayer *_questionTextFieldBottomSeparator;
  UILabel *_questionTextViewDescriptionLabel;
  UILabel *_responseLabel;
  UILabel *_responseError;
  UILabel *_responseTextViewDescriptionLabel;
  CALayer *_responseTextFieldBottomSeparator;
  UIButton *_deleteQuestionButton;
  NSString *_initialQuestionText;
  BOOL _shouldAllowResponse;
  NSString *_initialResponseText;
  NSMutableArray *_defaultIcebreakerSuggestion;
  NSMutableArray *_filteredSuggestion;
  NSObject<IGUserLauncherSetProviding> *_launcherSet;
  BOOL _useUpdatedSetupUI;
  BOOL _suggestionEnabled;
  UITableView *_suggestionTableView;
  IGTextView *_questionTextView;
  IGTextView *_responseTextView;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame questionText:(id)text shouldAllowResponse:(BOOL)response editMode:(BOOL)mode suggestionEnabled:(BOOL)enabled responseText:(id)text launcherSet:(id)set delegate:(id)delegate;
- (void)layoutSubviews;
- (id)viewState;
- (void)scrollViewDidScroll:(id)scroll;
- (long long)tableView:(id)view numberOfRowsInSection:(long long)section;
- (long long)numberOfSectionsInTableView:(id)view;
- (void)tableView:(id)view didSelectRowAtIndexPath:(id)path;
- (double)tableView:(id)view heightForRowAtIndexPath:(id)path;
- (id)tableView:(id)view cellForRowAtIndexPath:(id)path;
- (double)tableView:(id)view heightForHeaderInSection:(long long)section;
- (double)tableView:(id)view heightForFooterInSection:(long long)section;
- (id)tableView:(id)view viewForHeaderInSection:(long long)section;
- (id)tableView:(id)view viewForFooterInSection:(long long)section;
- (void)textViewDidBeginEditing:(id)editing;
- (void)textViewDidEndEditing:(id)editing;
- (void)textViewDidChange:(id)change;
- (void)_didTapDeleteQuestion;
@end

#endif /* IGDirectIcebreakersSettingsCreationView_h */
