//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBMKMapView_h
#define FBMKMapView_h
@import Foundation;

#include "UIView.h"
#include "FBMKContentManager-Protocol.h"
#include "FBMapCamera.h"
#include "FBMapLogger.h"
#include "MKMapViewDelegate-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class MKMapView, NSString;
@protocol FBMKMapViewRegionDelegate, FBMapViewDelegate;

@interface FBMKMapView : UIView<MKMapViewDelegate, UIGestureRecognizerDelegate> {
  /* instance variables */
  NSObject<FBMKContentManager> *_contentManager;
  MKMapView *_mapView;
  FBMapLogger *_mapLogger;
  BOOL _isRegionChangeUserDriven;
  BOOL _didFinishLoading;
  BOOL _didFinishRendering;
  BOOL _didLogMarkersLoaded;
  double _currentZoomLevel;
}

@property (weak, nonatomic) NSObject<FBMKMapViewRegionDelegate> *regionDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<FBMapViewDelegate> *delegate;
@property (nonatomic) double direction;
@property (nonatomic) BOOL showsUserLocation;
@property (nonatomic) BOOL locationArrowEnabled;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } compassInsets;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } attributionInsets;
@property (nonatomic) double attributionDrawerInset;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } contentInset;
@property (nonatomic) double zoomLevel;
@property (retain, nonatomic) FBMapCamera *camera;
@property (nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } centerCoordinate;

/* instance methods */
- (id)initWithSession:(id)session configuration:(struct FBMapConfiguration { unsigned long long x0; int x1; id x2; struct FBMapCameraConfiguration { id x0; double x1; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x2; } x3; struct CGSize { double x0; double x1; } x4; id x5; double x6; double x7; double x8; double x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; struct FBMapDebugConfiguration { BOOL x0; BOOL x1; BOOL x2; id x3; id x4; BOOL x5; double x6; double x7; BOOL x8; } x16; })configuration contentManager:(id)manager;
- (void)layoutSubviews;
- (void)willMoveToWindow:(id)window;
- (void)dealloc;
- (void)setContentInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })inset animated:(BOOL)animated;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate animated:(BOOL)animated;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate latitudeDelta:(double)delta longitudeDelta:(double)delta animated:(BOOL)animated;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate zoom:(double)zoom animated:(BOOL)animated;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate zoom:(double)zoom padding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding animated:(BOOL)animated;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate screenOffset:(struct CGPoint { double x0; double x1; })offset zoom:(unsigned long long)zoom animated:(BOOL)animated;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate radius:(double)radius animated:(BOOL)animated;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate radius:(double)radius padding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding animated:(BOOL)animated;
- (void)setVisibleCoordinates:(const struct CLLocationCoordinate2D *)coordinates count:(unsigned long long)count padding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding animated:(BOOL)animated completion:(id /* block */)completion;
- (struct CGPoint { double x0; double x1; })convertCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate toPointToView:(id)view;
- (struct CLLocationCoordinate2D { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point toCoordinateFromView:(id)view;
- (struct FBMapCoordinateBox { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct CLLocationCoordinate2D { double x0; double x1; } x1; })visibleCoordinateBox;
- (struct FBMapCoordinateBox { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct CLLocationCoordinate2D { double x0; double x1; } x1; })visibleCoordinateBoxWithInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (void)mapPanDetected:(id)detected;
- (void)mapPinchDetected:(id)detected;
- (void)mapTapDetected:(id)detected;
- (void)setRegion:(struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; })region animated:(BOOL)animated;
- (void)addGestureRecognizersToMapView:(id)view;
- (void)sendGestureSingleTapActionToFunnel;
- (void)mapView:(id)view regionWillChangeAnimated:(BOOL)animated;
- (void)mapView:(id)view regionDidChangeAnimated:(BOOL)animated;
- (void)mapViewDidChangeVisibleRegion:(id)region;
- (void)mapViewWillStartLoadingMap:(id)map;
- (void)mapViewDidFinishLoadingMap:(id)map;
- (void)mapViewDidFailLoadingMap:(id)map withError:(id)error;
- (void)mapViewWillStartRenderingMap:(id)map;
- (void)mapViewDidFinishRenderingMap:(id)map fullyRendered:(BOOL)rendered;
- (id)mapView:(id)view viewForAnnotation:(id)annotation;
- (void)mapView:(id)view didAddAnnotationViews:(id)views;
- (void)mapView:(id)view didSelectAnnotationView:(id)view;
- (void)mapView:(id)view didDeselectAnnotationView:(id)view;
- (id)mapView:(id)view clusterAnnotationForMemberAnnotations:(id)annotations;
- (void)mapViewWillStartLocatingUser:(id)user;
- (void)mapViewDidStopLocatingUser:(id)user;
- (void)mapView:(id)view didUpdateUserLocation:(id)location;
- (void)mapView:(id)view didFailToLocateUserWithError:(id)error;
- (id)mapView:(id)view rendererForOverlay:(id)overlay;
- (void)mapView:(id)view didAddOverlayRenderers:(id)renderers;
- (id)mapView:(id)view viewForOverlay:(id)overlay;
- (void)mapView:(id)view didAddOverlayViews:(id)views;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
@end

#endif /* FBMKMapView_h */
