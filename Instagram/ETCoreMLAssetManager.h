//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef ETCoreMLAssetManager_h
#define ETCoreMLAssetManager_h
@import Foundation;

#include "NSFileManagerDelegate-Protocol.h"

@class NSFileManager, NSMapTable, NSString, NSURL;
@protocol OS_dispatch_queue, {ModelAssetsMetaStore="impl_"{unique_ptr<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long>, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long>>>="__ptr_"{__compressed_pair<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long> *, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long>>>="__value_"^v}}}, {ModelAssetsStore="impl_"{unique_ptr<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>>, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>>>>="__ptr_"{__compressed_pair<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>> *, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>>>>="__value_"^v}}};

@interface ETCoreMLAssetManager : NSObject<NSFileManagerDelegate> {
  /* instance variables */
  struct ModelAssetsStore { struct unique_ptr<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>>, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>>>> { struct __compressed_pair<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>> *, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, executorchcoreml::Asset, executorchcoreml::sqlite::JSONConverter<executorchcoreml::Asset>>>> { void *__value_; } __ptr_; } impl_; } _assetsStore;
  struct ModelAssetsMetaStore { struct unique_ptr<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long>, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long>>> { struct __compressed_pair<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long> *, std::default_delete<executorchcoreml::sqlite::KeyValueStore<std::string, unsigned long>>> { void *__value_; } __ptr_; } impl_; } _assetsMetaStore;
}

@property long long estimatedSizeInBytes;
@property (readonly, copy, nonatomic) NSURL *assetsDirectoryURL;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *syncQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *trashQueue;
@property (readonly, nonatomic) NSMapTable *assetsInUseMap;
@property (readonly, nonatomic) long long maxAssetsSizeInBytes;
@property (readonly, copy, nonatomic) NSURL *trashDirectoryURL;
@property (readonly, nonatomic) NSFileManager *fileManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDatabase:(const void *)database assetsDirectoryURL:(id)url trashDirectoryURL:(id)url maxAssetsSizeInBytes:(long long)bytes error:(id *)error;
- (id)initWithDatabaseURL:(id)url assetsDirectoryURL:(id)url trashDirectoryURL:(id)url maxAssetsSizeInBytes:(long long)bytes error:(id *)error;
- (id)moveURL:(id)url toUniqueURLInDirectory:(id)directory error:(id *)error;
- (void)cleanupAssetIfNeeded:(id)needed;
- (id)_storeAssetAtURL:(id)url withIdentifier:(id)identifier error:(id *)error;
- (void)triggerCompaction;
- (id)storeAssetAtURL:(id)url withIdentifier:(id)identifier error:(id *)error;
- (id)_assetWithIdentifier:(id)identifier error:(id *)error;
- (id)assetWithIdentifier:(id)identifier error:(id *)error;
- (BOOL)_containsAssetWithIdentifier:(id)identifier error:(id *)error;
- (BOOL)hasAssetWithIdentifier:(id)identifier error:(id *)error;
- (BOOL)_removeAssetWithIdentifier:(id)identifier error:(id *)error;
- (BOOL)removeAssetWithIdentifier:(id)identifier error:(id *)error;
- (id)_recentlyUsedAssetsWithMaxCount:(unsigned long long)count error:(id *)error;
- (id)mostRecentlyUsedAssetsWithMaxCount:(unsigned long long)count error:(id *)error;
- (BOOL)_canPurgeStore;
- (unsigned long long)_compact:(unsigned long long)_compact error:(id *)error;
- (unsigned long long)compact:(unsigned long long)compact error:(id *)error;
- (void)removeFilesInTrashDirectory;
- (BOOL)_purge:(id *)_purge;
- (BOOL)purge:(id *)purge;
- (BOOL)fileManager:(id)manager shouldProceedAfterError:(id)error removingItemAtURL:(id)url;
@end

#endif /* ETCoreMLAssetManager_h */
