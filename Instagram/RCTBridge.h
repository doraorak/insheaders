//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTBridge_h
#define RCTBridge_h
@import Foundation;

#include "RCTBridge.h"
#include "RCTBridgeDelegate-Protocol.h"
#include "RCTInvalidating-Protocol.h"
#include "RCTModuleRegistry.h"
#include "RCTPerformanceLogger.h"
#include "RCTReloadListener-Protocol.h"

@class NSArray, NSDictionary, NSLock, NSString, NSURL;
@protocol {optional<int>=""(?="__null_state_"c"__val_"i)"__engaged_"B}, {shared_ptr<facebook::react::jsinspector_modern::HostTarget>="__ptr_"^{HostTarget}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<RCTBridgeHostTargetDelegate, std::default_delete<RCTBridgeHostTargetDelegate>>="__ptr_"{__compressed_pair<RCTBridgeHostTargetDelegate *, std::default_delete<RCTBridgeHostTargetDelegate>>="__value_"^{RCTBridgeHostTargetDelegate}}};

@interface RCTBridge : NSObject<RCTReloadListener, RCTInvalidating> {
  /* instance variables */
  NSURL *_delegateBundleURL;
  struct unique_ptr<RCTBridgeHostTargetDelegate, std::default_delete<RCTBridgeHostTargetDelegate>> { struct __compressed_pair<RCTBridgeHostTargetDelegate *, std::default_delete<RCTBridgeHostTargetDelegate>> { struct RCTBridgeHostTargetDelegate *__value_; } __ptr_; } _inspectorHostDelegate;
  struct shared_ptr<facebook::react::jsinspector_modern::HostTarget> { struct HostTarget *__ptr_; struct __shared_weak_count *__cntrl_; } _inspectorTarget;
  struct optional<int> { union { char __null_state_; int __val_; } x0; BOOL __engaged_; } _inspectorPageId;
}

@property (nonatomic) long long flowID;
@property (nonatomic) struct __CFDictionary * flowIDMap;
@property (retain, nonatomic) NSLock *flowIDMapLock;
@property (copy, nonatomic) NSString *bridgeDescription;
@property (retain) RCTBridge *batchedBridge;
@property (readonly, copy, nonatomic) id /* block */ moduleProvider;
@property (retain, nonatomic) NSURL *bundleURL;
@property (readonly, nonatomic) RCTModuleRegistry *moduleRegistry;
@property (readonly, copy, nonatomic) NSArray *moduleClasses;
@property (retain, nonatomic) Class executorClass;
@property (readonly, weak, nonatomic) NSObject<RCTBridgeDelegate> *delegate;
@property (readonly, copy, nonatomic) NSDictionary *launchOptions;
@property (readonly, nonatomic) BOOL loading;
@property (readonly, nonatomic) BOOL valid;
@property (readonly, nonatomic) RCTPerformanceLogger *performanceLogger;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)currentBridge;
+ (void)setCurrentBridge:(id)bridge;

/* instance methods */
- (id)initWithDelegate:(id)delegate launchOptions:(id)options;
- (id)initWithBundleURL:(id)url moduleProvider:(id /* block */)provider launchOptions:(id)options;
- (id)initWithDelegate:(id)delegate bundleURL:(id)url moduleProvider:(id /* block */)provider launchOptions:(id)options;
- (id)init;
- (void)dealloc;
- (void)setRCTTurboModuleRegistry:(id)registry;
- (id)bridgeModuleDecorator;
- (void)didReceiveReloadCommand;
- (id)moduleForName:(id)name;
- (id)moduleForName:(id)name lazilyLoadIfNecessary:(BOOL)necessary;
- (id)moduleForClass:(Class)class;
- (id)modulesConformingToProtocol:(id)protocol;
- (BOOL)moduleIsInitialized:(Class)initialized;
- (void)reload;
- (void)reloadWithReason:(id)reason;
- (void)onFastRefresh;
- (void)requestReload;
- (Class)bridgeClass;
- (void)setUp;
- (BOOL)isLoading;
- (BOOL)isValid;
- (BOOL)isBatchActive;
- (void)invalidate;
- (void)updateModuleWithInstance:(id)instance;
- (void)registerAdditionalModuleClasses:(id)classes;
- (void)enqueueJSCall:(id)jscall args:(id)args;
- (void)enqueueJSCall:(id)jscall method:(id)method args:(id)args completion:(id /* block */)completion;
- (void)enqueueCallback:(id)callback args:(id)args;
- (void)registerSegmentWithId:(unsigned long long)id path:(id)path;
- (void *)inspectorTarget;
@end

#endif /* RCTBridge_h */
