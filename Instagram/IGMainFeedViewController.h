//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGMainFeedViewController_h
#define IGMainFeedViewController_h
@import Foundation;

#include "IGViewController.h"
#include "FBContentRectProviding-Protocol.h"
#include "IGAccessibilityFeedAggregationController.h"
#include "IGAdsBrowserDestinationPeekViewController.h"
#include "IGAdsCTABrowserPeekLauncher-Protocol.h"
#include "IGAlertBarPresenter-Protocol.h"
#include "IGApplicationWillEnterForegroundCriticalEventsListener-Protocol.h"
#include "IGAutomatedImageTrackerListener-Protocol.h"
#include "IGBugReportingProtocol-Protocol.h"
#include "IGCollapsibleNavigationPausing-Protocol.h"
#include "IGCollapsibleNavigationProviding-Protocol.h"
#include "IGContactsFriendsHelper.h"
#include "IGDeferredPostController.h"
#include "IGDynamicPageChildViewControllerDelegate-Protocol.h"
#include "IGDynamicPageChildViewControllerType-Protocol.h"
#include "IGFeedItemPostedListener-Protocol.h"
#include "IGFeedPlaybackEventRelay.h"
#include "IGFeedPreviewingHandler.h"
#include "IGFeedPreviewingType-Protocol.h"
#include "IGFeedRugpullAnalyzer.h"
#include "IGFeedStatusViewDelegate-Protocol.h"
#include "IGFindFriendsHelperDelegate-Protocol.h"
#include "IGFloatingSocialContextActionHandlerDelegate-Protocol.h"
#include "IGListAdapterDelegate-Protocol.h"
#include "IGListAdapterProviderListener-Protocol.h"
#include "IGMainFeedAppHeaderController.h"
#include "IGMainFeedGroupHelper.h"
#include "IGMainFeedListAdapterDataSource.h"
#include "IGMainFeedLogger.h"
#include "IGMainFeedPickerMenuController.h"
#include "IGMainFeedPickerTooltipNuxController.h"
#include "IGMainFeedPostFrictionHelper.h"
#include "IGMainFeedRefreshFeedParameters.h"
#include "IGMainFeedStatusViewDataSource.h"
#include "IGMainFeedToastController.h"
#include "IGMainFeedVerticalStoriesTrayListAdapterDataSource.h"
#include "IGMainFeedViewControllerType-Protocol.h"
#include "IGMainFeedViewModel.h"
#include "IGMainFeedViewStateProvider-Protocol.h"
#include "IGModernFeedVideoCellListener-Protocol.h"
#include "IGPostCreationEventBroadcaster.h"
#include "IGRUXCoordinator.h"
#include "IGRefreshControlContentInsetDataSource-Protocol.h"
#include "IGRefreshControlDelegate-Protocol.h"
#include "IGScreenshotObserverDelegate-Protocol.h"
#include "IGScrollViewListener-Protocol.h"
#include "IGScrollableViewControllerProtocol-Protocol.h"
#include "IGStoryTraySubscriptionListener-Protocol.h"
#include "IGStoryUploadListener-Protocol.h"
#include "IGSundialDraftsShareSheetViewControllerDelegate-Protocol.h"
#include "IGSundialSeeAllDraftsViewControllerDelegate-Protocol.h"
#include "IGSundialVideoUploadEventBroadcaster.h"
#include "IGSundialViewerInteractionCompatibleType-Protocol.h"
#include "IGTransitionZoomFromCapable-Protocol.h"
#include "IGWarmStartListener-Protocol.h"
#include "UINavigationBarDelegate-Protocol.h"
#include "_TtC16IGFeedLoggingKit24IGMainFeedItemLoadLogger.h"
#include "_TtC23IGContextualFeedLogging30IGContextualFeedPageLoadLogger.h"
#include "_TtC24IGFeedPerformanceLogging23IGFeedPerformanceLogger.h"
#include "_TtC24IGFeedPerformanceLogging27IGFeedItemPerformanceLogger.h"
#include "_TtC30IGImmersiveEndOfFeedTransition42IGImmersiveEndOfFeedTransitionOrchestrator.h"
#include "_TtC8IGPokeUI27IGPokeOverlayViewController.h"
#include "_TtP30IGImmersiveEndOfFeedTransition50IGImmersiveEndOfFeedTransitionOrchestratorDelegate_-Protocol.h"

@class DspDataManager, FBTimer, IGActionableConfirmationToastController, IGContactsUserStore, IGFeedPosition, IGListAdapter, IGMainFeedContext, IGMedia, IGMediaMetadata, IGNavigationController, IGPerformanceTailFetchLogger, IGPerformanceTailLoadLogger, IGRapidFeedbackController, IGRefreshControl, IGUserSession, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, UICollectionView, UIView, UIWindow;
@protocol IGBirthdayConfettiUpdateAnnouncer, IGListSectionController<IGStoryTraySectionControlling, OS_dispatch_queue;

@interface IGMainFeedViewController : IGViewController<FBContentRectProviding, IGAlertBarPresenter, IGAutomatedImageTrackerListener, IGModernFeedVideoCellListener, IGFeedItemPostedListener, IGFeedPreviewingType, IGFeedStatusViewDelegate, IGFloatingSocialContextActionHandlerDelegate, _TtP30IGImmersiveEndOfFeedTransition50IGImmersiveEndOfFeedTransitionOrchestratorDelegate_, IGListAdapterDelegate, IGMainFeedViewStateProvider, IGRefreshControlContentInsetDataSource, IGRefreshControlDelegate, IGScreenshotObserverDelegate, IGScrollViewListener, IGScrollableViewControllerProtocol, IGStoryTraySubscriptionListener, IGStoryUploadListener, IGSundialDraftsShareSheetViewControllerDelegate, IGSundialSeeAllDraftsViewControllerDelegate, IGSundialViewerInteractionCompatibleType, IGTransitionZoomFromCapable, IGWarmStartListener, UINavigationBarDelegate, IGAdsCTABrowserPeekLauncher, IGApplicationWillEnterForegroundCriticalEventsListener, IGFindFriendsHelperDelegate, IGMainFeedViewControllerType, IGBugReportingProtocol, IGCollapsibleNavigationPausing, IGCollapsibleNavigationProviding, IGDynamicPageChildViewControllerType, IGListAdapterProviderListener> {
  /* instance variables */
  IGMainFeedStatusViewDataSource *_feedStatusViewDataSource;
  IGMainFeedAppHeaderController *_headerController;
  BOOL _isStoriesTrayVisible;
  long long _presentedShareSheetType;
  IGMainFeedLogger *_logger;
  IGDeferredPostController *_deferredPostController;
  UICollectionView *_collectionView;
  UICollectionView *_verticalStoryTrayCollectionView;
  IGMainFeedVerticalStoriesTrayListAdapterDataSource *_verticalStoriesTrayDataSource;
  double _feedScrollDistance;
  _TtC30IGImmersiveEndOfFeedTransition42IGImmersiveEndOfFeedTransitionOrchestrator *_immersiveEndOfFeedTransitionOrchestrator;
  BOOL _didShowImmersiveTransitionToast;
  IGMainFeedGroupHelper *_groupHelper;
  IGFeedPosition *_scrollPosition;
  IGFeedPlaybackEventRelay *_playbackEventRelay;
  IGAccessibilityFeedAggregationController *_feedAggregationController;
  BOOL _managesHeader;
  BOOL _isVisible;
  double _lastScrollViewOffset;
  NSObject<OS_dispatch_queue> *_feedWarmupQueue;
  BOOL _isNetworkReachable;
  IGMainFeedToastController *_toastController;
  IGActionableConfirmationToastController *_screenShotToastController;
  IGSundialVideoUploadEventBroadcaster *_sundialVideoUploadEventBroadcaster;
  IGPostCreationEventBroadcaster *_postCreationEventBroadcaster;
  BOOL _hidesStoriesTray;
  BOOL _didLogFirstRenderForDelivery;
  BOOL _didLogTrayDidAppearForDelivery;
  BOOL _shouldAvoidNextAttemptToShowUnseen;
  BOOL _shouldFetchStoryTrayOnNextScrollToTopFinish;
  BOOL _shouldResortStoriesTrayOnNextScrollToTop;
  IGRefreshControl *_refreshControl;
  IGFeedPosition *_initialScrollPosition;
  UIWindow *_flexWindow;
  IGMainFeedRefreshFeedParameters *_pendingRefreshFeedParameters;
  IGPerformanceTailFetchLogger *_tailFetchLogger;
  IGPerformanceTailLoadLogger *_tailLoadLogger;
  BOOL _shouldDelayDismissSpinnerForClientPrefetch;
  NSArray *_taggedProducts;
  BOOL _mediaItemWillPost;
  BOOL _didAttemptAggressiveTailFetch;
  IGMainFeedPostFrictionHelper *_postFrictionHelper;
  IGMainFeedPickerMenuController *_feedPickerMenuController;
  IGMainFeedPickerTooltipNuxController *_feedPickerNuxController;
  NSMutableDictionary *_secondaryFeedViewModels;
  IGMedia *_firstVisibleFeedItemBeforeRefresh;
  long long _firstVisibleFeedItemIndexBeforeRefresh;
  double _scrollToTopActionCooldown;
  BOOL _isAtTop;
  long long _lastRenderedItemCount;
  NSDate *_lastRenderedDate;
  DspDataManager *_dspDataManager;
  BOOL _noFetchOnScrollUp;
  BOOL _isScrollingToTopOfVideo;
  double _focusedVideoOffsetY;
  IGMedia *_focusedVideo;
  NSArray *_pendingInjectMediaQueue;
  NSMutableArray *_injectedMediaQueue;
  BOOL _shouldResetInjectedMediasOnPTR;
  BOOL _recentlyClearedCheckpoint;
  BOOL _isViewSweepEnabledForOrganic;
  BOOL _isViewSweepEnabledForAds;
  BOOL _isForYouTitleShown;
  FBTimer *_dsaForYouTransitionTimer;
  IGActionableConfirmationToastController *_draftSaveToast;
  id /* block */ _bloksActionOnAppear;
  IGFeedRugpullAnalyzer *_feedRugPullAnalyzer;
  IGMainFeedContext *_feedContext;
  UIView *_statusBarBackgroundView;
  IGMediaMetadata *_media;
  NSObject<IGBirthdayConfettiUpdateAnnouncer> *_birthdayConfettiUpdateAnnouncer;
  BOOL _avoidFeedAnimationsEnabled;
  BOOL _avoidPTRFeedAnimationsEnabled;
  BOOL _viewpointUpdateOnFeedNetworkRender;
  IGAdsBrowserDestinationPeekViewController *_adsBrowserDestinationPeekViewController;
  _TtC16IGFeedLoggingKit24IGMainFeedItemLoadLogger *_itemLoadLogger;
  _TtC23IGContextualFeedLogging30IGContextualFeedPageLoadLogger *_pageLoadLogger;
  _TtC24IGFeedPerformanceLogging23IGFeedPerformanceLogger *_feedPerformanceLogger;
  _TtC24IGFeedPerformanceLogging27IGFeedItemPerformanceLogger *_itemPerformanceLogger;
  BOOL _shouldFireAggressiveFirstTailLoadAfterRequestDone;
  BOOL _shouldTryToRefreshSyncOnMain;
  BOOL _shouldHideStatusBar;
  double _presentingContextHeight;
  BOOL _hasAggressiveFetchPendingQueuedUpdate;
  BOOL _storiesTrayPushBasedDeliveryEnabled;
  _TtC8IGPokeUI27IGPokeOverlayViewController *_pokeOverlayViewController;
  BOOL _canDisplaySIFUTooltip;
  IGContactsFriendsHelper *_contactsFriendsHelper;
  IGContactsUserStore *_contactsUserStore;
  BOOL _forceSimplifiedFeedUpdatesForShimmer;
  BOOL _hasQueuedUpdate;
  IGListAdapter *_verticalStoryTrayListAdapter;
  IGFeedPreviewingHandler *_previewingHandler;
  IGRUXCoordinator *_ruxCoordinator;
}

@property (readonly, nonatomic) IGListAdapter *listAdapter;
@property (readonly, nonatomic) IGMainFeedViewModel *viewModel;
@property (readonly, nonatomic) IGMainFeedListAdapterDataSource *dataSource;
@property (readonly, nonatomic) IGRapidFeedbackController *rapidFeedbackController;
@property (retain, nonatomic) IGUserSession *userSession;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) IGNavigationController *navigationController;
@property (readonly, nonatomic) NSDictionary *magicMoveSubviews;
@property (readonly, nonatomic) IGListSectionController<IGStoryTraySectionControlling> *storyTraySectionController;
@property (nonatomic) unsigned long long activityBadgeCount;
@property (nonatomic) BOOL allowPostAnother;
@property (readonly, nonatomic) BOOL isSecondary;
@property (weak, nonatomic) NSObject<IGDynamicPageChildViewControllerDelegate> *dynamicPageChildDelegate;

/* instance methods */
- (id)initWithUserSession:(id)session viewModel:(id)model initialScrollPosition:(id)position type:(id)type;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fb_visibleContentRect;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)willMoveToParentViewController:(id)controller;
- (void)traitCollectionDidChange:(id)change;
- (void)viewDidLayoutSubviews;
- (long long)preferredStatusBarStyle;
- (long long)preferredBarAppearance;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })preferredMinimizableInsets;
- (BOOL)prefersStatusBarHidden;
- (BOOL)prefersNavigationBarHidden;
- (void)dealloc;
- (BOOL)accessibilityPerformEscape;
- (id)_feedWarmupQueue;
- (id)_inFeedUnitTraySectionControllerIfVisible;
- (void)findFriendsHelper:(id)helper didAuthorizeWithDataRequest:(id)request;
- (void)findFriendsHelper:(id)helper didFailToAuthorizeWithMessage:(id)message;
- (void)_refreshWhenPTR;
- (void)performListAdapterUpdatesAnimated:(BOOL)animated completion:(id /* block */)completion;
- (void)refreshFeedWithFetchReason:(long long)reason animated:(BOOL)animated;
- (void)popToRootViewControllerAnimated:(BOOL)animated;
- (void)handleUserScopedIntent:(id)intent;
- (void)provideListAdapterWithCompletion:(id /* block */)completion;
- (void)scrollToItemAtIndexPath:(id)path atScrollPosition:(unsigned long long)position animated:(BOOL)animated;
- (void)updateHeaderAndScrollToTopOfVideoWithOffsetY:(double)y withMedia:(id)media;
- (double)currentOffset;
- (id)collectionView;
- (BOOL)performViewControllerCommitForPreviewedItem:(id)item;
- (void)mainFeedAppHeaderControllerLogoTapped:(id)tapped;
- (void)mainFeedAppHeaderControllerDidRequestEndEditing:(id)editing withNavigationTarget:(long long)target;
- (void)mainFeedAppHeaderControllerDidRequestOpenCamera:(id)camera cameraButton:(id)button;
- (void)didUpdateMultipleAccounts;
- (void)didSwitchToAccountWithUserPk:(id)pk;
- (void)storiesInteractionManagerDidUpdateStoriesUsageState:(id)state;
- (void)showFacebookLoginToast;
- (void)feedItemPosted:(id)posted postId:(id)id;
- (void)feedItemPostFailed;
- (void)feedItemWillPost:(id)post taggedProducts:(id)products;
- (void)storyUploadStartedWithCompositions:(id)compositions entryPoint:(long long)point;
- (void)storyUploadStartedWithReelOwner:(id)owner reelPK:(id)pk compositionId:(id)id shareType:(long long)type;
- (void)storyUpload:(id)upload removedFromReelOwner:(id)owner reelPK:(id)pk;
- (void)storyDidBeginUpload:(id)upload;
- (void)igtvUploadStatusDidSucceedWithMedia:(id)media sharedPreviewToFeed:(BOOL)feed;
- (void)igtvUploadStatusDidChange:(long long)change postShare:(id)share;
- (void)igtvUploadStatusDidChangePendingUploadItems:(id)items;
- (void)_networkingReachabilityDidChange:(id)change;
- (void)_onAppDidBecomeActive:(id)active;
- (void)_onAppDidEnterBackground:(id)background;
- (void)applicationWillEnterForegroundListener;
- (void)applicationWillWarmStartWithTimeIntervalSinceBackgrounded:(double)backgrounded;
- (void)_onTapTabButtons:(id)buttons;
- (void)_appWillTerminate:(id)terminate;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidEndScrolling:(id)scrolling;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)scrollViewDidEndDragging:(id)dragging;
- (void)scrollViewWillScrollNearBottom:(id)bottom;
- (void)scrollViewDidScrollToTop:(id)top;
- (void)scrollViewWillScrollToTop:(id)top;
- (BOOL)accessibilityScroll:(long long)scroll;
- (void)listAdapter:(id)adapter willDisplayObject:(id)object atIndex:(long long)index;
- (void)listAdapter:(id)adapter didEndDisplayingObject:(id)object atIndex:(long long)index;
- (void)mainFeedViewModel:(id)model didStartLoadingFeedWithConfig:(id)config;
- (void)mainFeedViewModel:(id)model didReceiveFeedResponse:(id)response forRequestConfig:(id)config;
- (void)mainFeedViewModel:(id)model didLoadFeedWithConfig:(id)config;
- (void)mainFeedViewModel:(id)model didFailToLoadFeedWithConfig:(id)config willShowItems:(BOOL)items;
- (void)mainFeedViewModelNeedsRenderFeed:(id)feed;
- (void)mainFeedViewModelDidInsertIntentAwareAdsPivot:(id)pivot;
- (void)mainFeedViewModelDidUpdateCacheInventory:(id)inventory;
- (void)mainFeedViewModelDidTriggerForegroundLightweightCheck:(id)check;
- (void)mainFeedViewModelDidPrepareForNewFeedSession:(id)session withReason:(long long)reason;
- (id)deferringDelegate;
- (BOOL)mainFeedViewModelIsEligibleForIntentAwareAdsInsertion;
- (long long)mainFeedAdInsertionHandlerMostVisibleItemIndex;
- (void)mainFeedViewModelDidInitiateWarmStartAsColdStart:(id)start;
- (void)showFeedErrorMessage:(id)message;
- (BOOL)shouldAddPostedFeedItem:(id)item postId:(id)id;
- (BOOL)isAtTop;
- (void)storyDataController:(id)controller didUpdateWithRefreshType:(long long)type updateDuration:(double)duration storyRankToken:(id)token deliveryLoggingKey:(id)key;
- (void)storyDataController:(id)controller fetchTrayDidFailWithError:(id)error errorMessageToDisplay:(id)display httpStatusCode:(long long)code requestReason:(long long)reason refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didStartPrefetchOnHeadloadWithReelPks:(id)pks;
- (void)storyDataControllerDidFinishPrefetchDelay;
- (void)storyDataController:(id)controller preloadMediaForReelPk:(id)pk preloadSurface:(id)surface;
- (void)shouldFetchTray;
- (void)feedStatusViewDidTap:(id)tap;
- (void)feedStatusEmptyStateButtonWasTapped:(id)tapped;
- (id)bugReportDescription;
- (id)additionalBugReportMetadata;
- (void)didDeferMainFeedResponse;
- (BOOL)shouldDeferMainFeedResponseProcessingForFetchReason:(long long)reason;
- (void)didDiscardDeferredMainFeedResponse;
- (BOOL)canReplaceFeedNonDisruptively;
- (void)scrollToTopOnTappedTabBar;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })preferredContentInsets;
- (void)scrollToTopAnimated:(BOOL)animated;
- (BOOL)isVisible;
- (void)scrollTrayToFrontAnimated:(BOOL)animated;
- (void)addInjectedMediasToQueue:(id)queue;
- (void)removeInjectedMedia:(id)media;
- (id)directBarButton;
- (id)activityBarButton;
- (id)directBarButtonDestinationView;
- (void)reloadStoryTray;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })navigationHeaderFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })navigationHeaderRightNavigationButtonFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })navigationHeaderSecondaryRightNavigationButtonFrame;
- (void)handleTapOnHomeTabWithHoistedMediaID:(id)id;
- (void)handleTapOnHomeTabWithResetInjectedMedias:(BOOL)medias;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })activityButtonFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })searchButtonFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })createButtonFrame;
- (void)shouldExecuteBloksActionOnAppear:(id /* block */)appear;
- (BOOL)isNavigationBarFullyShowing;
- (id)currentVisibleMediaID;
- (BOOL)isShowingFullScreenBrowserPeek;
- (void)handleSIFUHideActionForModel:(id)model;
- (void)tryShowQuickSnapPeek;
- (void)_fetchStoryTrayIfNeededOnNetworkReconnect;
- (void)mainFeedViewModel:(id)model hasReportedNewPostsAvailable:(BOOL)available;
- (void)mainFeedViewModelDidClearOutNewReportedPosts:(id)posts;
- (void)refreshControlDidEndFinishLoadingAnimation:(id)animation;
- (void)refreshControl:(id)control didReleaseWithRefreshControlState:(long long)state;
- (void)refreshControl:(id)control didUpdateAppearingProgress:(double)progress;
- (double)idleTopContentInsetForRefreshControl:(id)control;
- (id)scrollView;
- (id)scrollViewAnnouncer;
- (long long)positionForBar:(id)bar;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentInsetsForAlertBar;
- (void)_openScreenshotShareSheet:(id)sheet;
- (void)screenshotObserverDidSeeScreenshotTaken:(id)taken;
- (void)screenshotObserverDidSeeActiveScreenCapture:(id)capture event:(long long)event;
- (void)floatingSocialContextActionHandler:(id)handler didTapCommentSocialContextWithCommentID:(id)id media:(id)media;
- (void)floatingSocialContextActionHandler:(id)handler handleLikersListNavigationWithMedia:(id)media;
- (BOOL)accessibilityPerformMagicTap;
- (void)scrollViewAccessibilityNearBottom:(id)bottom;
- (void)didBecomeSelectedPageInDynamicPageViewController;
- (void)willResignSelectedPageInDynamicPageViewController;
- (void)prepareForReuse;
- (void)updateContentInsets;
- (void)hScrollAYMFSectionController:(id)controller didUpdateWithModel:(id)model;
- (void)hScrollAYMFSectionController:(id)controller didTapReturnToFeedButtonWithModel:(id)model;
- (BOOL)surfaceSupportsAd;
- (void)zoomTransitionWillPrepareWithContext:(id)context;
- (void)zoomTransitionWillBeginWithContext:(id)context;
- (BOOL)shouldZoomFromTransition;
- (void)prepareBackwardZoomTransitionWithContext:(id)context completionHandler:(id /* block */)handler;
- (id)transitionZoomViewFromItem:(id)item withZoomContext:(id)context shouldMoveToVisiblePosition:(BOOL)position;
- (void)didCompleteBackwardZoomTransition;
- (BOOL)allowsEnterNavigationGestureForGestureOrigin:(struct CGPoint { double x0; double x1; })origin;
- (void)mainFeedPickerMenuControllerDidPresentMenu:(id)menu;
- (void)mainFeedPickerMenuController:(id)controller didSelectItem:(id)item;
- (void)_manageFavoritesNavButtonTapped;
- (void)mainFeedPickerTooltipNuxControllerDidTapTooltip:(id)tooltip;
- (void)performanceLoadingIndicatorDidAppearWithLoggingExtras:(id)extras;
- (void)performanceLoadingIndicatorDidDisappear;
- (void)didSendDspEventWithTriggerId:(id)id eventTraceId:(id)id;
- (void)checkpointDidTerminateWithType:(id)type isCleared:(BOOL)cleared;
- (void)presentAllDraftsViewController;
- (void)presentDraftSaveToastForSuccess:(BOOL)success previewImage:(id)image;
- (void)sundialViewerInteractionCoordinator:(id)coordinator didObserveLongPressGestureOnMediaAtIndex:(long long)index;
- (void)sundialViewerInteractionCoordinatorDidEndLongPressGesture:(id)gesture;
- (void)sundialViewerInteractionCoordinatorDidObserveInteractiveZoom:(id)zoom;
- (void)sundialViewerInteractionCoordinatorDidEndInteractiveZoom:(id)zoom;
- (void)sundialViewerInteractionCoordinatorDidHandleScrubbingBegin:(id)begin;
- (void)sundialViewerInteractionCoordinatorDidHandleScrubbingEnd:(id)end;
- (id)headerView;
- (id)footerView;
- (id)tooltipView;
- (BOOL)shouldHideChromeForInteractiveGesture;
- (void)sundialViewerInteractionCoordinatorDidObserveInterceptedSingleTapGesture:(id)gesture;
- (BOOL)sundialViewerInteractionCoordinatorShouldInterceptSingleTapGesture:(id)gesture;
- (void)sundialViewerInteractionCoordinator:(id)coordinator didUnfollowUser:(id)user;
- (void)sundialViewerInteractionCoordinator:(id)coordinator didUnfollowHashtag:(id)hashtag;
- (void)sundialViewerInteractionCoordinatorDidSnoozeSuggestedPosts:(id)posts;
- (void)sundialViewerInteractionCoordinator:(id)coordinator didChangeMuteStatusForUser:(id)user changedPostsMuteStatus:(BOOL)status changedStoryMuteStatus:(BOOL)status;
- (void)sundialViewerInteractionCoordinatorDidObserveReminderUpdate:(id)update forUpcomingEvent:(id)event;
- (void)sundialViewerInteractionCoordinatorDidShareToDirect;
- (void)sundialViewerInteractionCoordinatorDidShareExternallyWithMediaId:(id)id;
- (void)sundialViewerInteractionCoordinatorDidShareToStory;
- (void)sundialViewerInteractionCoordinatorDidSavePost;
- (void)sundialViewerInteractionCoordinatorDidLongPressToDisplayBottomNudge:(BOOL)nudge;
- (void)sundialViewerInteractionCoordinatorShouldRemovePlaybackOverrides;
- (void)sundialViewerInteractionCoordinatorDidObserveCaptionTapOnAdItem:(id)item isTapOnTranslate:(BOOL)translate;
- (void)sundialViewerInteractionCoordinatorDidObserveOverlayBackgroundTapOnAdItem:(id)item;
- (void)sundialViewerInteractionCoordinatorDidToggleContentNotesImmersiveView:(BOOL)view;
- (void)seeAllDraftsViewController:(id)controller onViewController:(id)controller didTapDraft:(id)draft indexPath:(id)path;
- (void)didUpdateNumberOfDrafts:(id)drafts;
- (void)sundialDraftsShareSheet:(id)sheet didShareComposition:(id)composition toDestination:(long long)destination;
- (void)sundialDraftShareSheetDidExitShareComposition:(id)composition;
- (void)collapsibleNavigationCoordinator:(id)coordinator didUpdateNavigationBarPercentCollapsed:(double)collapsed;
- (void)collapsibleNavigationCoordinator:(id)coordinator didUpdateTabBarPercentCollapsed:(double)collapsed;
- (void)setCollapsibleNavigationUpdatesEnabled:(BOOL)enabled;
- (id)collapsibleNavigationCoordinator;
- (void)shareSheetPresentedForType:(long long)type;
- (void)shareSheetDismissedForType:(long long)type;
- (BOOL)shouldLaunchBrowserPeekOnAdCTA:(id)cta;
- (void)launchBrowserPeekWithBrowserSession:(id)session;
- (void)browserDestinationPeekViewControllerDidDismiss;
- (void)browserDestinationPeekViewControllerWillFinishPresenting;
- (long long)preferredTabBarBehavior;
- (double)actionableConfirmationToastBottomPadding;
- (double)actionableConfirmationToastTopPadding;
- (BOOL)isImmersionActiveForCollectionViewLayout:(id)layout;
- (BOOL)shouldClampScrollingToPagingOriginForCollectionViewLayout:(id)layout;
- (id)segueIndexPathFor:(id)for;
- (id)immersionIndexPathFor:(id)for immersionIndex:(long long)index;
- (void)immersiveEndOfFeedTransitionOrchestrator:(id)orchestrator didUpdateImmersionState:(BOOL)state;
- (void)imageDidStartTrackingWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidComeOnScreenWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidGoOffScreenWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidLoadFromSource:(unsigned long long)source imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidLoadAndComeOnScreenFromSource:(unsigned long long)source imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)didFailToLoadImageWithError:(id)error imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)feedVideoCell:(id)cell didUpdateLoadingProgress:(double)progress;
- (void)feedVideoCell:(id)cell didUpdateCoverImageLoadStatus:(long long)status;
- (void)feedVideoCell:(id)cell didBeginPlayingVideo:(id)video;
- (void)feedVideoCell:(id)cell didUpdatePlaybackStatus:(id)status;
- (void)feedVideoCellDidPause:(id)pause;
- (void)feedVideoCellDidStop:(id)stop;
- (void)feedVideoCellDidStall:(id)stall;
- (void)feedVideoCell:(id)cell didFailPlayingVideo:(id)video withError:(id)error;
@end

#endif /* IGMainFeedViewController_h */
