//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTAccessibilityManager_h
#define RCTAccessibilityManager_h
@import Foundation;

#include "NativeAccessibilityManagerSpec-Protocol.h"
#include "RCTBridge.h"
#include "RCTBridgeModule-Protocol.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTModuleRegistry.h"
#include "RCTViewRegistry.h"

@class NSDictionary, NSString;
@protocol OS_dispatch_queue;

@interface RCTAccessibilityManager : NSObject<NativeAccessibilityManagerSpec, RCTBridgeModule>

@property (copy, nonatomic) NSString *contentSizeCategory;
@property (nonatomic) double multiplier;
@property (copy, nonatomic) NSDictionary *multipliers;
@property (nonatomic) BOOL isBoldTextEnabled;
@property (nonatomic) BOOL isGrayscaleEnabled;
@property (nonatomic) BOOL isInvertColorsEnabled;
@property (nonatomic) BOOL isReduceMotionEnabled;
@property (nonatomic) BOOL prefersCrossFadeTransitions;
@property (nonatomic) BOOL isReduceTransparencyEnabled;
@property (nonatomic) BOOL isVoiceOverEnabled;
@optional
@property (weak, nonatomic) RCTModuleRegistry *moduleRegistry;
@optional
@property (weak, nonatomic) RCTViewRegistry *viewRegistry_DEPRECATED;
@optional
@property (weak, nonatomic) RCTBundleManager *bundleManager;
@optional
@property (weak, nonatomic) RCTCallableJSModules *callableJSModules;
@optional
@property (readonly, weak, nonatomic) RCTBridge *bridge;
@optional
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)moduleName;
+ (void)load;
+ (BOOL)requiresMainQueueSetup;
+ (const struct RCTMethodInfo *)__rct_export__2590;
+ (const struct RCTMethodInfo *)__rct_export__2911;
+ (const struct RCTMethodInfo *)__rct_export__2992;
+ (const struct RCTMethodInfo *)__rct_export__3063;
+ (const struct RCTMethodInfo *)__rct_export__3224;
+ (const struct RCTMethodInfo *)__rct_export__3315;
+ (const struct RCTMethodInfo *)__rct_export__3386;
+ (const struct RCTMethodInfo *)__rct_export__3457;
+ (const struct RCTMethodInfo *)__rct_export__3528;
+ (const struct RCTMethodInfo *)__rct_export__3599;
+ (const struct RCTMethodInfo *)__rct_export__37010;
+ (const struct RCTMethodInfo *)__rct_export__37711;

/* instance methods */
- (id)init;
- (void)didReceiveNewContentSizeCategory:(id)category;
- (void)accessibilityAnnouncementDidFinish:(id)finish;
- (void)boldTextStatusDidChange:(id)change;
- (void)grayscaleStatusDidChange:(id)change;
- (void)invertColorsStatusDidChange:(id)change;
- (void)reduceMotionStatusDidChange:(id)change;
- (void)reduceTransparencyStatusDidChange:(id)change;
- (void)voiceVoiceOverStatusDidChange:(id)change;
- (void)_setIsVoiceOverEnabled:(BOOL)enabled;
- (void)invalidateMultiplier;
- (double)multiplierForContentSizeCategory:(id)category;
- (void)setAccessibilityContentSizeMultipliers:(struct SpecSetAccessibilityContentSizeMultipliersJSMultipliers *)multipliers;
- (void)setAccessibilityFocus:(double)focus;
- (void)announceForAccessibility:(id)accessibility;
- (void)announceForAccessibilityWithOptions:(id)options options:(struct SpecAnnounceForAccessibilityWithOptionsOptions *)options;
- (void)getMultiplier:(id /* block */)multiplier;
- (void)getCurrentBoldTextState:(id /* block */)state onError:(id /* block */)error;
- (void)getCurrentGrayscaleState:(id /* block */)state onError:(id /* block */)error;
- (void)getCurrentInvertColorsState:(id /* block */)state onError:(id /* block */)error;
- (void)getCurrentReduceMotionState:(id /* block */)state onError:(id /* block */)error;
- (void)getCurrentPrefersCrossFadeTransitionsState:(id /* block */)state onError:(id /* block */)error;
- (void)getCurrentReduceTransparencyState:(id /* block */)state onError:(id /* block */)error;
- (void)getCurrentVoiceOverState:(id /* block */)state onError:(id /* block */)error;
- (struct shared_ptr<facebook::react::TurboModule> { struct TurboModule * x0; struct __shared_weak_count * x1; })getTurboModule:(const void *)module;
@end

#endif /* RCTAccessibilityManager_h */
