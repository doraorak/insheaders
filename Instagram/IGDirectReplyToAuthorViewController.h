//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGDirectReplyToAuthorViewController_h
#define IGDirectReplyToAuthorViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAudioPlayerListener-Protocol.h"
#include "IGCTDPrivacyDisclosureView.h"
#include "IGDirectComposerButtonDelegate-Protocol.h"
#include "IGDirectComposerSizingDelegate-Protocol.h"
#include "IGDirectComposerTextListener-Protocol.h"
#include "IGDirectNotesItemLoggingModel.h"
#include "IGDirectReplyToAuthorComposerViewController.h"
#include "IGDirectVoiceRecordViewController.h"
#include "IGDirectVoiceRecordViewControllerDelegate-Protocol.h"
#include "IGEmojiSelectionViewControllerDelegate-Protocol.h"
#include "IGFloatingSocialContextLoggingInfo.h"
#include "IGKeyboardObserverFrameChangeDelegate-Protocol.h"
#include "IGKeyboardObserverHideDelegate-Protocol.h"
#include "IGKeyboardObserverShowDelegate-Protocol.h"
#include "IGNotificationHandler-Protocol.h"
#include "IGStoryViewerDelegate-Protocol.h"
#include "IGUserAvatarStatusListener-Protocol.h"
#include "_TtC16IGProfileWallAPI20IGProfileWallService.h"

@class IGAPIMusicInfo, IGActionableConfirmationToastController, IGAudioPlayer, IGClickToMessagingAdsInfo, IGContentNotesAddButton, IGContentNotesDefaultLoggingInfo, IGDirectAvatarDotSpec, IGDirectComposerMusicStatusReplyXMAViewModel, IGDirectMessageModalShareContent, IGDirectReplyToAuthorAccessoryViews, IGDirectThreadFeatureTogglesDeprecated, IGDirectThreadKey, IGDirectThreadService, IGEmojiModel, IGEmojiPickerTrayViewController, IGEmojiSelectionViewController, IGPartialModalSheetViewController, IGRingViewSpec, IGTooltipView, IGUFIButton, IGUser, IGUserSession, NSArray, NSNumber, NSString, UIImageView, UIView;
@protocol IGDirectCameraPresentationManagerProtocol, IGDirectComposerOverflowTrayPresenting, IGDirectReplyToAuthorViewControllerAnnouncer, IGDirectReplyToAuthorViewControllerDismissDelegate, UIView<IGDirectComposerProtocol, UIView<IGDirectMessageModalViewProtocol;

@interface IGDirectReplyToAuthorViewController : IGViewController<IGAudioPlayerListener, IGDirectComposerButtonDelegate, IGDirectComposerSizingDelegate, IGKeyboardObserverShowDelegate, IGKeyboardObserverHideDelegate, IGKeyboardObserverFrameChangeDelegate, IGDirectComposerTextListener, IGEmojiSelectionViewControllerDelegate, IGUserAvatarStatusListener, IGDirectVoiceRecordViewControllerDelegate, IGNotificationHandler, IGStoryViewerDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  IGDirectThreadService *_threadService;
  IGDirectMessageModalShareContent *_shareContent;
  long long _source;
  NSObject<IGDirectReplyToAuthorViewControllerAnnouncer> *_announcer;
  IGUser *_replyToUser;
  NSArray *_replyToGroupUsers;
  IGDirectThreadKey *_threadKey;
  BOOL _shouldUseInstamadilloSend;
  BOOL _isDisappearingModeOn;
  IGDirectReplyToAuthorComposerViewController *_composerViewController;
  UIView<IGDirectComposerProtocol> *_inputView;
  UIView *_dimmingView;
  UIView<IGDirectMessageModalViewProtocol> *_modalView;
  long long _sentConfirmationType;
  IGDirectComposerMusicStatusReplyXMAViewModel *_xmaViewModel;
  IGCTDPrivacyDisclosureView *_privacyDisclosureView;
  IGDirectReplyToAuthorAccessoryViews *_accessoryViews;
  BOOL _isPresented;
  double _keyboardHeight;
  NSString *_sourceModule;
  IGRingViewSpec *_storyRingViewSpec;
  IGDirectAvatarDotSpec *_avatarDotViewSpec;
  BOOL _showStoryLikeBadge;
  NSString *_privateReplyEmoji;
  BOOL _disableTitleTapAction;
  BOOL _disableTextInputAndReplies;
  NSString *_privacyDisclosureText;
  IGAudioPlayer *_audioPlayer;
  IGAPIMusicInfo *_selectedMusic;
  BOOL _shouldResumePlayback;
  IGActionableConfirmationToastController *_toastController;
  IGDirectNotesItemLoggingModel *_noteItemLoggingModel;
  IGClickToMessagingAdsInfo *_clickToMessagingAdsInfo;
  NSString *_clickToMessagingAdId;
  BOOL _audioPlayerWillHandleBackgroundBehavior;
  IGUFIButton *_noteLikeButton;
  UIImageView *_cakeIconView;
  UIView *_noteLightweightFeedbackButtonContentView;
  UIView *_inputViewBackgroundView;
  IGPartialModalSheetViewController *_emojiPickerModalSheet;
  IGEmojiPickerTrayViewController *_emojiPickerViewController;
  long long _emojiReactButtonState;
  IGEmojiModel *_selectedEmojiNoteReactModel;
  BOOL _shouldHideKeyboardAfterNoteInteraction;
  BOOL _shouldHideEmojiButtonForActiveComposer;
  BOOL _shouldShowContentNotesAddButton;
  UIView *_contentNotesAddButtonBackgroundView;
  IGContentNotesAddButton *_contentNotesAddButton;
  IGTooltipView *_contentNotesAddNUX;
  NSObject<IGDirectCameraPresentationManagerProtocol> *_cameraPresentationManager;
  NSObject<IGDirectComposerOverflowTrayPresenting> *_stickerTrayPresenter;
  IGDirectVoiceRecordViewController *_voiceRecordViewController;
  id /* block */ _noteReactionBlock;
  _TtC16IGProfileWallAPI20IGProfileWallService *_profileWallService;
  BOOL _hasLoggedReplyKeyboardInteraction;
  NSNumber *_timeOfFirstKeystroke;
  IGFloatingSocialContextLoggingInfo *_socialContextLoggingInfo;
  IGDirectThreadFeatureTogglesDeprecated *_threadCapabilities;
  BOOL _shouldSuppressNotesActivationAnimation;
  IGEmojiSelectionViewController *_inlineEmojiSelectionViewController;
}

@property (weak, nonatomic) NSObject<IGDirectReplyToAuthorViewControllerDismissDelegate> *dismissDelegate;
@property (weak, nonatomic) IGContentNotesDefaultLoggingInfo *contentNotesDefaultLoggingInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session threadService:(id)service replyToUser:(id)user replyToGroupUsers:(id)users storyRingViewSpec:(id)spec accessoryViews:(id)views shareContent:(id)content source:(long long)source module:(id)module avatarDotViewSpec:(id)spec showStoryLikeBadge:(BOOL)badge disableTitleTapAction:(BOOL)action disableTextInputAndReplies:(BOOL)replies privacyDisclosureText:(id)text noteItemLoggingModel:(id)model clickToMessagingAdsInfo:(id)info clickToMessagingAdId:(id)id socialContextLoggingInfo:(id)info shouldSuppressNotesActivationAnimation:(BOOL)animation;
- (void)dismiss;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAnimatedMedia:(id)media;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAnimatedSticker:(id)sticker index:(long long)index bottomSheetSessionId:(id)id directTrayType:(long long)type;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectStaticSticker:(id)sticker index:(long long)index bottomSheetSessionId:(id)id directTrayType:(long long)type;
- (void)storyStickerViewControllerAdapter:(id)adapter didLongPressStickerWithId:(id)id isAvatarSticker:(BOOL)sticker enableReportingOptions:(BOOL)options enableFeedbackOptions:(BOOL)options enableFavoriteOptions:(BOOL)options useContextMenuReportFlow:(BOOL)flow cellContentView:(id)view bottomSheetSessionId:(id)id refreshFavoriteStickersBlock:(id /* block */)block;
- (void)storyStickerViewControllerAdapter:(id)adapter didLongPressAnimatedStickerWithId:(id)id enableFeedbackOptions:(BOOL)options enableFavoriteOptions:(BOOL)options useContextMenuReportFlow:(BOOL)flow cellContentView:(id)view bottomSheetSessionId:(id)id refreshFavoriteStickersBlock:(id /* block */)block;
- (void)storyStickerViewControllerAdapterDidSelectPollSticker:(id)sticker;
- (void)storyStickerViewControllerAdapterDidSelectLike:(id)like;
- (void)storyStickerViewControllerAdapter:(id)adapter didCreateNewPollMessageWithQuestion:(id)question options:(id)options;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectMessageEffect:(id)effect text:(id)text;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAvatarImage:(id)image;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAvatarSticker:(id)sticker isAnimatedSticker:(BOOL)sticker shouldResetComposerToDefaultMode:(BOOL)mode withQuotedMessage:(id)message;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectCreateRollCallWithText:(id)text recurringCadence:(unsigned long long)cadence;
- (void)storyStickerViewControllerAdapterDidSelectStickerTab:(id)tab;
- (void)storyStickerViewControllerAdapterEnterLockedFullScreenIfAllowed:(id)allowed;
- (void)storyStickerViewControllerAdapterExitLockedFullScreenIfAllowed:(id)allowed;
- (void)storyStickerViewControllerAdapterWillPresentAvatarEditor:(id)editor;
- (void)storyStickerViewControllerAdapterDidDismissAvatarEditor:(id)editor;
- (void)storyStickerViewControllerAdapterDidSelectAddYoursEntrypoint:(id)entrypoint;
- (void)inputView:(id)view didTapCameraButton:(id)button withQuotedContent:(id)content;
- (void)inputView:(id)view didTapGalleryButton:(id)button withQuotedContent:(id)content;
- (void)inputView:(id)view didTapSendButtonWithText:(id)text quotedContent:(id)content animatedEmojiCharacterRanges:(id)ranges defaultPowerupsMetadata:(id)metadata;
- (void)inputView:(id)view didTapMoreButton:(id)button;
- (void)inputView:(id)view didTapQuickReplyButton:(id)button isHighlighted:(BOOL)highlighted text:(id)text;
- (void)inputView:(id)view didTapProductPickerButton:(id)button;
- (void)inputView:(id)view didTapBusinessToolsButton:(id)button;
- (void)inputView:(id)view didTapOrderManagementButton:(id)button;
- (void)inputView:(id)view didTapBookNowLinkShareButton:(id)button;
- (void)inputView:(id)view didTapAppointmentButton:(id)button;
- (void)inputView:(id)view didTapChallengePromptButton:(id)button;
- (void)inputView:(id)view didTapDailyPromptsButton:(id)button;
- (void)inputView:(id)view didTapQuestionPromptButton:(id)button;
- (void)inputView:(id)view didTapAddYoursPromptButton:(id)button;
- (void)inputView:(id)view didTapLocationSharingButton:(id)button;
- (void)inputView:(id)view didTapEventButton:(id)button;
- (void)inputView:(id)view didTapPollPromptButton:(id)button inPosition:(long long)position;
- (void)inputView:(id)view didTapPlusButton:(id)button isExpanded:(BOOL)expanded layoutSpec:(id)spec;
- (void)inputView:(id)view didTapVoiceMessageButton:(id)button;
- (void)inputView:(id)view didTapP2MPaymentRequestButton:(id)button;
- (void)inputView:(id)view didLongPressSendButton:(id)button withText:(id)text;
- (void)inputView:(id)view voiceMessageLongPressGestureRecognizerDidUpdate:(id)update;
- (void)inputView:(id)view redesignGalleryButtonLongPressGestureRecognizerDidUpdate:(id)update;
- (void)inputView:(id)view didTapStickerButton:(id)button inPosition:(long long)position withQuotedContent:(id)content;
- (void)inputView:(id)view didTapGifButton:(id)button inPosition:(long long)position;
- (void)inputView:(id)view didTapAvatarButton:(id)button inPosition:(long long)position;
- (void)inputView:(id)view didTapStickerSearchButton:(id)button withText:(id)text;
- (void)inputView:(id)view didTapDrawButton:(id)button;
- (void)inputView:(id)view didTapReshareButton:(id)button;
- (void)inputView:(id)view didTapRemoveGifButton:(id)button withGifModel:(id)model;
- (void)inputView:(id)view didTapEmojiReactionButton:(id)button;
- (void)inputView:(id)view didTapEditDoneButtonWithText:(id)text;
- (void)inputView:(id)view didTapGoLiveButton:(id)button;
- (void)inputView:(id)view didTapMetaAIShortcutButton:(id)button;
- (void)inputView:(id)view didTapFileSharingButton:(id)button;
- (void)inputView:(id)view didTapMetaAIDiscoveryButton:(id)button;
- (void)inputView:(id)view didTapMetaAIVoiceButton:(id)button;
- (void)composer:(id)composer willChange:(BOOL)change textInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range previousText:(id)text replacementText:(id)text updatedText:(id)text;
- (void)composer:(id)composer didChangeToText:(id)text mode:(id)mode;
- (void)composerDidReachMaxTextLength:(id)length;
- (void)composerDidTapOnTextArea:(id)area;
- (void)composerDidBeginEditing:(id)editing;
- (void)composerDidRestoreDraftMessage:(id)message;
- (void)composerDidEndEditing:(id)editing;
- (void)messageModalHeaderViewDidTapTitleOrSubtitle:(id)subtitle;
- (void)messageModalHeaderViewDidTapAvatar:(id)avatar fromViewForAnimation:(id)animation profilePictureView:(id)view noteModel:(id)model;
- (void)messageModalHeaderViewDidTapSeeTranslation:(id)translation noteModel:(id)model;
- (void)layoutMessageModalHeaderView:(id)view;
- (void)messageModalHeaderView:(id)view didTapDirectNoteLink:(id)link noteModel:(id)model;
- (void)messageModalHeaderView:(id)view didTapContentNoteLink:(id)link noteID:(id)id;
- (void)messageModalHeaderViewDidTapMusicPlaybackButton:(BOOL)button audioClusterId:(id)id;
- (void)messageModalHeaderViewDidTapMusicAttributionWithAudioClusterID:(id)id;
- (void)messageModalHeaderView:(id)view didBeginSeekGestureWithProgress:(double)progress;
- (void)messageModalHeaderView:(id)view didFinishSeekGestureWithProgress:(double)progress;
- (void)messageModalHeaderView:(id)view didTapLocationWithViewModel:(id)model;
- (void)messageModalHeaderView:(id)view didTapNotesActionMenuButtonWithViewModel:(id)model;
- (void)messageModalHeaderViewDidTapBirthdaySettings:(id)settings;
- (void)messageModalHeaderViewDidTapContentNoteActionMenuButton:(id)button;
- (void)messageModalHeaderViewDidTapProfileNoteActionMenuButton:(id)button;
- (void)messageModalShouldDismiss;
- (void)shouldNavigateToAudioPageUsingAudioId:(id)id;
- (void)messageGenericModalView:(id)view didTapOnIceBreakerWithText:(id)text;
- (void)_didTapNoteLikeButton:(id)button;
- (void)inputViewDidInvalidateIntrinsicContentSize:(id)size needsImmediateLayout:(BOOL)layout;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)_didSwipeDown:(id)down;
- (void)_didTapContentNotesAddButton:(id)button;
- (BOOL)_isNoteFromDeepLinkFromShareContent;
- (void)_launchCameraWithRecipient:(id)recipient noteModel:(id)model entrypoint:(long long)entrypoint creationStyle:(long long)style switcherMode:(long long)mode cameraButton:(id)button viewModeSwitcherConfiguration:(id)configuration;
- (BOOL)accessibilityPerformEscape;
- (void)_showContentNotesAddNUX;
- (void)keyboardObserver:(id)observer keyboardWillShowWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidShow:(id)show;
- (void)keyboardObserver:(id)observer keyboardWillHideWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidHide:(id)hide;
- (void)keyboardObserver:(id)observer keyboardFrameDidChangeWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserver:(id)observer keyboardFrameWillChangeWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)_didTapDismissView;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (unsigned long long)notificationPresentationPermissionsForNotificationSource:(unsigned long long)source;
- (void)storyViewer:(id)viewer didNavigateToStoryItem:(id)item;
- (void)storyViewerShouldRemoveEmptyStateStory:(id)story navigationAction:(long long)action;
- (void)storyViewerDidFinish:(id)finish navigationAction:(long long)action lastMediaID:(id)id viewerExitContextDict:(id)dict completion:(id /* block */)completion;
- (void)storyViewer:(id)viewer didFocusOnReelWithPK:(id)pk;
- (BOOL)storyViewerShouldPresentCamera:(id)camera;
- (void)storyViewerDidTapTryItOn:(id)on onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)storyViewerDidTapViewDay:(id)day;
- (void)storyViewerDidMute:(id)mute didMutePosts:(BOOL)posts;
- (void)storyViewerDidUnfollow:(id)unfollow;
- (void)storyViewerDidFollow:(id)follow;
- (void)emojiSelectionViewController:(id)controller didSelectEmoji:(id)emoji suggestedComment:(id)comment atIndex:(unsigned long long)index;
- (void)audioPlayerDidLoadAudio:(id)audio;
- (void)audioPlayerDidBeginPlaying:(id)playing;
- (void)audioPlayer:(id)player didUpdatePlaybackProgress:(double)progress;
- (void)audioPlayerDidPlayToEnd:(id)end;
- (void)audioPlayer:(id)player didFailWithError:(id)error;
- (void)audioPlayerWillPrepareAudio:(id)audio;
- (void)audioPlayerDidPrepareAudio:(id)audio;
- (void)audioPlayerDidPause:(id)pause;
- (void)audioPlayerDidStall:(id)stall;
- (void)audioPlayerDidStop:(id)stop;
- (void)audioPlayer:(id)player didToggleAudioStatus:(BOOL)status withReason:(long long)reason;
- (void)_applicationDidEnterBackground:(id)background;
- (void)_applicationDidEnterForeground:(id)foreground;
- (void)avatarStatusManager:(id)manager didUpdateAvatarStatus:(long long)status;
- (void)avatarStatusManagerDidCreateAvatar:(id)avatar;
- (void)avatarStatusManagerDidDeleteAvatar:(id)avatar;
- (void)avatarStatusManagerDidUpdateAvatar:(id)avatar;
- (void)voiceRecordViewController:(id)controller didUpdateState:(long long)state;
- (void)voiceRecordViewControllerWillShowRecordingView:(id)view;
- (void)voiceRecordViewControllerWillHideRecordingView:(id)view;
- (void)voiceRecordViewControllerWillShowRecordingNux:(id)nux;
- (void)voiceRecordViewControllerWillHideRecordingNux:(id)nux;
- (void)voiceRecordViewController:(id)controller didRecordAudioClipWithURL:(id)url waveform:(id)waveform duration:(double)duration entryPoint:(long long)point;
- (void)_sendAudioNoteReplyWithInstamadilloWithAudioClipWithURL:(id)url waveform:(id)waveform duration:(double)duration noteModel:(id)model thread:(id)thread;
- (void)_sendAudioNoteReplyWithoutInstamadilloWithAudioClipWithURL:(id)url waveform:(id)waveform duration:(double)duration noteModel:(id)model thread:(id)thread;
- (void)voiceRecordViewControllerDidPressCancelButton:(id)button;
- (void)voiceRecordViewController:(id)controller didUpdateDuration:(double)duration;
- (void)voiceRecordViewController:(id)controller updateSeparateWaveformWithValue:(double)value;
- (void)presentationManagerWillSend:(id)send withDirectRecipients:(id)recipients;
- (void)presentationManagerWillDismiss:(id)dismiss withDirectRecipients:(id)recipients;
- (void)dismissalDestinationViewForRecipients:(id)recipients sourceIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)presentationManagerDidDismiss:(id)dismiss cameraType:(long long)type withDirectRecipients:(id)recipients;
- (void)inputView:(id)view didTapImagineCreateButton:(id)button inPosition:(long long)position;
- (id)analyticsExtras;
@end

#endif /* IGDirectReplyToAuthorViewController_h */
