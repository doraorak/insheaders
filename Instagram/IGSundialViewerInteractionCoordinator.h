//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGSundialViewerInteractionCoordinator_h
#define IGSundialViewerInteractionCoordinator_h
@import Foundation;

#include "IGAlertHUDHandling-Protocol.h"
#include "IGBoostUnavailableDialogController.h"
#include "IGContentNotesActionHandler.h"
#include "IGContentNotesActionHandlerDelegate-Protocol.h"
#include "IGContentNotesFloatingViewControllerDelegate-Protocol.h"
#include "IGDirectReplyToAuthorViewControllerPresenting-Protocol.h"
#include "IGDirectShareSheetControlling-Protocol.h"
#include "IGFeedConsumptionTracker.h"
#include "IGFeedItemActionSheetHandler.h"
#include "IGFeedItemActionSheetHandlerDelegate-Protocol.h"
#include "IGFeedItemConfigurationType-Protocol.h"
#include "IGFeedItemLogger.h"
#include "IGFeedUpcomingEventViewControllerDelegate-Protocol.h"
#include "IGFloatingSocialContextActionHandler-Protocol.h"
#include "IGFloatingSocialContextActionHandlerDelegate-Protocol.h"
#include "IGHeartAnimator.h"
#include "IGMinimizedViewerPresenter.h"
#include "IGNewsPresentationDelegate-Protocol.h"
#include "IGObjectInTagDisplayDelegate-Protocol.h"
#include "IGPlaybackCoordinating-Protocol.h"
#include "IGPlaybackCoordinatorUpdateListener-Protocol.h"
#include "IGSaveToCollectionsFeedDelegate-Protocol.h"
#include "IGStoryDataControllerStoryItemListener-Protocol.h"
#include "IGStoryPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "IGStoryViewerDelegate-Protocol.h"
#include "IGStoryViewerPresentationController.h"
#include "IGSundialAdsCaptionAndBrowseMediaInteractionHandler.h"
#include "IGSundialFeedLoggingContext.h"
#include "IGSundialPlaybackControlsTestConfig.h"
#include "IGSundialPlaybackToggling-Protocol.h"
#include "IGSundialPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "IGSundialViewerInteractionAudioSharingHandlerDelegate-Protocol.h"
#include "IGSundialViewerInteractionCoordinating-Protocol.h"
#include "IGSundialViewerInteractiveGestureChromeHandler.h"
#include "IGSundialViewerZoomLogger.h"
#include "IGUnifiedTagsListUpcomingEventViewControllerDelegate-Protocol.h"
#include "IGUpcomingEventsReminderManagerProviding-Protocol.h"
#include "_TtC18IGSundialClearMode28IGSundialClearModeController.h"
#include "_TtC23IGSundialPlaybackToggle33IGSundialPlaybackToggleController.h"
#include "_TtC29IGSundialRadialMenuController29IGSundialRadialMenuController.h"
#include "_TtP29IGSundialRadialMenuController37IGSundialRadialMenuControllerDelegate_-Protocol.h"
#include "_TtP31IGCutoutStickerCreationDelegate31IGCutoutStickerCreationDelegate_-Protocol.h"
#include "_TtP37IGAudioQuickActionsControllerProvider37IGAudioQuickActionsControllerDelegate_-Protocol.h"
#include "_TtP37IGAudioQuickActionsControllerProvider37IGAudioQuickActionsControllerProtocol_-Protocol.h"

@class IGBloksAsyncActionHandler, IGImmersiveFeedConfiguration, IGMedia, IGSessionTracker, IGSponsoredSupportConfiguration, IGUserSession, NSSet, NSString, UIImpactFeedbackGenerator, UIView, UIViewPropertyAnimator;
@protocol IGAdInsertionMediaViewTracking, IGDirectQuickSendControllerProtocol, IGSundialAdsBrowseControlling, IGViewController<IGSundialViewerInteractionCompatibleType, UIViewController<IGCommentViewControllerType><IGGestureHandler;

@interface IGSundialViewerInteractionCoordinator : NSObject<_TtP37IGAudioQuickActionsControllerProvider37IGAudioQuickActionsControllerDelegate_, IGFeedItemActionSheetHandlerDelegate, IGFeedUpcomingEventViewControllerDelegate, IGObjectInTagDisplayDelegate, IGSaveToCollectionsFeedDelegate, IGStoryPostCaptureEditingViewControllerDelegate, IGSundialViewerInteractionAudioSharingHandlerDelegate, IGUnifiedTagsListUpcomingEventViewControllerDelegate, IGSundialPostCaptureEditingViewControllerDelegate, IGNewsPresentationDelegate, IGStoryDataControllerStoryItemListener, IGStoryViewerDelegate, IGFloatingSocialContextActionHandlerDelegate, _TtP29IGSundialRadialMenuController37IGSundialRadialMenuControllerDelegate_, _TtP31IGCutoutStickerCreationDelegate31IGCutoutStickerCreationDelegate_, IGContentNotesActionHandlerDelegate, IGContentNotesFloatingViewControllerDelegate, IGPlaybackCoordinatorUpdateListener, IGSundialPlaybackToggling, IGSundialViewerInteractionCoordinating> {
  /* instance variables */
  IGViewController<IGSundialViewerInteractionCompatibleType> *_viewController;
  NSObject<IGPlaybackCoordinating> *_playbackCoordinator;
  IGUserSession *_userSession;
  NSString *_analyticsModule;
  IGSessionTracker *_shoppingSessionTracker;
  IGHeartAnimator *_heartAnimator;
  UIImpactFeedbackGenerator *_feedbackGenerator;
  UIViewPropertyAnimator *_overlayOpacityAnimator;
  BOOL _showingOverlay;
  NSObject<IGDirectShareSheetControlling> *_reshareController;
  NSObject<IGDirectShareSheetControlling> *_audioReshareController;
  IGStoryViewerPresentationController *_storyPresentationController;
  IGFeedItemActionSheetHandler *_feedItemActionSheetHandler;
  IGBloksAsyncActionHandler *_bloksAsyncActionHandler;
  IGFeedItemLogger *_feedItemLogger;
  IGSundialFeedLoggingContext *_loggingContext;
  IGSponsoredSupportConfiguration *_sponsoredSupportConfig;
  NSObject<IGFeedItemConfigurationType> *_itemConfiguration;
  IGSundialViewerZoomLogger *_zoomLogger;
  NSObject<IGDirectQuickSendControllerProtocol> *_quickSendController;
  IGMedia *_quickSendMedia;
  IGImmersiveFeedConfiguration *_immersiveConfig;
  IGMedia *_mediaToSaveToCollection;
  IGMedia *_media;
  long long _mediaIndex;
  IGSundialViewerInteractiveGestureChromeHandler *_interactiveGestureChromeHandler;
  IGFeedConsumptionTracker *_feedConsumptionTracker;
  NSObject<IGDirectReplyToAuthorViewControllerPresenting> *_replyToAuthorDirectMessagePresenter;
  NSObject<IGAlertHUDHandling> *_currentAlertHUDHandler;
  UIView *_mediaViewCell;
  UIViewController<IGCommentViewControllerType><IGGestureHandler> *_commentsViewController;
  BOOL _isReelsInteractivityLoggingEnabled;
  long long _yourActivityScreen;
  IGMinimizedViewerPresenter *_minimizedViewerPresenter;
  NSObject<IGUpcomingEventsReminderManagerProviding> *_upcomingEventsReminderManager;
  IGContentNotesActionHandler *_contentNotesActionHandler;
  NSObject<IGFloatingSocialContextActionHandler> *_floatingSocialContextActionHandler;
  IGBoostUnavailableDialogController *_boostUnavailableDialogController;
  NSString *_highlightReelPkBeingFetched;
  _TtC18IGSundialClearMode28IGSundialClearModeController *_clearModeController;
  _TtC29IGSundialRadialMenuController29IGSundialRadialMenuController *_radialMenuController;
  NSObject<_TtP37IGAudioQuickActionsControllerProvider37IGAudioQuickActionsControllerProtocol_> *_audioQuickActionsController;
  NSSet *_activeSessions;
  IGSundialAdsCaptionAndBrowseMediaInteractionHandler *_captionAndBrowseHandler;
  NSObject<IGSundialAdsBrowseControlling> *_xAndBrowseDelegate;
  IGSundialPlaybackControlsTestConfig *_playbackControlsTestConfig;
  id /* block */ _clearModeDismiss;
  _TtC23IGSundialPlaybackToggle33IGSundialPlaybackToggleController *_playbackToggleController;
}

@property (retain, nonatomic) NSObject<IGAdInsertionMediaViewTracking> *adInsertionHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithViewController:(id)controller userSession:(id)session shoppingSessionTracker:(id)tracker analyticsModule:(id)module playbackCoordinator:(id)coordinator playbackControlsTestConfig:(id)config feedItemLogger:(id)logger loggingContext:(id)context sponsoredSupportConfig:(id)config itemConfiguration:(id)configuration immersiveConfig:(id)config feedConsumptionTracker:(id)tracker yourActivityScreenEntryPoint:(long long)point minimizedViewerPresenter:(id)presenter clearModeController:(id)controller xAndBrowseDelegate:(id)delegate;
- (void)handleInterceptedSingleTapGesture;
- (BOOL)shouldInterceptSingleTapGesture;
- (void)_handleOpenProfileActionForAdItem:(id)item directResponseLogging:(id)logging directResponseInfo:(id)info pageCellState:(id)state loggingInfoProviding:(id)providing gestureLoggingExtras:(id)extras analyticsModule:(id)module shouldDisplayCTA:(BOOL)cta loggingExtras:(id)extras isGestureLoggingEnabled:(BOOL)enabled;
- (void)handleAppStoreRatingReviewsTapForAdItem:(id)item directResponseLogging:(id)logging directResponseInfo:(id)info pageCellState:(id)state gestureLoggingExtras:(id)extras analyticsModule:(id)module loggingExtras:(id)extras;
- (void)handleCollaboratorsFollowButtonTapForMedia:(id)media;
- (void)handleRegisteredNonprofitBottomSheet:(id)sheet navigationController:(id)controller;
- (void)presentActionableToastWithText:(id)text inView:(id)view;
- (void)presentSaveToCollectionsBottomSheetWithMedia:(id)media;
- (void)presentSaveToCollectionsBottomSheetWithMedia:(id)media disableAutoNewCollectionVCAfterLoading:(BOOL)loading;
- (void)directShareSheetDidTapExternalShare;
- (void)directShareSheetDidTapDownload;
- (void)directShareSheetDidTapAddNoteWithCarouselIndex:(id)index;
- (void)directShareSheetDidTapAddToSpotlight;
- (void)_tryTogglePlaybackForMedia:(id)media cell:(id)cell activePlaybackSessionKey:(id)key;
- (BOOL)_isAdvancedTapActionsForWatchAndBrowseHandledWithIsEndGesture:(BOOL)gesture;
- (void)feedItemActionSheetHandler:(id)handler didSelectAction:(unsigned long long)action forMedia:(id)media;
- (void)feedItemActionSheetHandlerDidDismiss:(id)dismiss;
- (void)feedItemActionSheetHandler:(id)handler didUnfollowHashtag:(id)hashtag;
- (void)feedItemActionSheetHandler:(id)handler didUnfollowUser:(id)user;
- (void)feedItemActionSheetHandler:(id)handler media:(id)media hasSaved:(BOOL)saved mediaIndex:(long long)index sessionID:(id)id;
- (void)feedItemActionSheetHandlerDidOpenSharesheet:(id)sharesheet isFromUserEducation:(BOOL)education media:(id)media mediaIndex:(long long)index sessionID:(id)id;
- (void)feedItemActionSheetHandlerDidRemoveFundraiser:(id)fundraiser;
- (void)feedItemActionSheetHandlerDidSelectPositiveControl:(id)control;
- (void)upcomingEventViewControllerDidTapViewPostButton:(id)button;
- (void)upcomingEventViewControllerDidTapOpenSettings;
- (void)upcomingEventViewControllerDidTapOpenLiveNotificationSettings:(id)settings;
- (BOOL)upcomingEventViewController:(id)controller didHandleEditButtonTapWithUpcomingEvent:(id)event;
- (void)upcomingEventViewControllerDidShareSticker:(id)sticker media:(id)media mediaIndex:(long long)index;
- (void)upcomingEventViewController:(id)controller didUpdateSetReminder:(BOOL)reminder forUpcomingEvent:(id)event;
- (void)upcomingEventViewControllerDidTapViewShop:(id)shop;
- (void)upcomingEventUnifiedTagsListViewControllerDidTapSettings;
- (void)upcomingEventUnifiedTagsListViewControllerDidTapLiveNotificationSettings:(id)settings;
- (void)upcomingEventUnifiedTagsListViewControllerDidShareSticker:(id)sticker media:(id)media;
- (void)upcomingEventUnifiedTagsListViewController:(id)controller didUpdateSetReminder:(BOOL)reminder forUpcomingEvent:(id)event;
- (void)upcomingEventUnifiedTagsListViewControllerDidTapViewShop:(id)shop;
- (long long)metadataForProduct:(id)product;
- (BOOL)shouldShowCheckoutSignalingForProduct:(id)product;
- (BOOL)shouldShowPriceInTagForProduct:(id)product;
- (BOOL)objectInTagView:(id)view shouldShowTag:(id)tag;
- (long long)maxLineCountInTag;
- (void)objectInTagView:(id)view didTapOnTagView:(id)view;
- (void)saveCollectionsViewController:(id)controller didUpdateCollection:(id)collection withRemoveFromCollection:(BOOL)collection;
- (void)saveCollectionsViewController:(id)controller willUpdateCollection:(id)collection withRemoveFromCollection:(BOOL)collection;
- (BOOL)saveCollectionsViewController:(id)controller shouldPauseForCollectionWithTitle:(id)title continueHandler:(id /* block */)handler;
- (void)saveCollectionsViewController:(id)controller updateFailedWithCollection:(id)collection;
- (void)saveCollectionsViewControllerDidDismiss:(id)dismiss;
- (void)storyPostCaptureEditingViewController:(id)controller didShareToStory:(long long)story andDirectRecipients:(id)recipients storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids exitPoint:(long long)point completion:(id /* block */)completion;
- (void)storyPostCaptureEditingViewControllerDidCancel:(id)cancel;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendRollCallWithDirectRecipients:(id)recipients;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendPermanentMediaWithAsset:(id)asset entryPoint:(long long)point;
- (void)storyPostCaptureEditingViewController:(id)controller didTapConfirmNotesPogVideoWithComposition:(id)composition;
- (void)directHandler:(id)handler didTapSaveWithMediaToShare:(id)share mediaViewCell:(id)cell mediaIndex:(long long)index sessionID:(id)id;
- (void)directHandlerDidShare:(id)share media:(id)media toDirectRecipients:(id)recipients;
- (void)directHandlerDidShareToStory;
- (void)audioSharingHandlerDidShareAudio:(id)audio;
- (void)viewController:(id)controller viewWillDisappearAnimated:(BOOL)animated;
- (void)viewController:(id)controller viewDidDisappearAnimated:(BOOL)animated;
- (void)sundialPostCaptureEditingViewController:(id)controller didCancelWithComposition:(id)composition isNavigationHandledByPresenter:(BOOL)presenter deselectAssets:(BOOL)assets;
- (BOOL)sundialPostCaptureEditingViewControllerMustExitTimelineEditorBeforeCancelling:(id)cancelling;
- (void)sundialPostCaptureEditingViewController:(id)controller didShareComposition:(id)composition toDestination:(long long)destination withPostId:(id)id shareOnFacebookPreferences:(id)preferences isNavigationHandledByPresenter:(BOOL)presenter;
- (void)sundialPostCaptureEditingViewController:(id)controller didSaveDraft:(id)draft fromPostCapture:(BOOL)capture isNavigationHandledByPresenter:(BOOL)presenter;
- (void)sundialPostCaptureEditingViewControllerDidResume:(id)resume;
- (void)sundialPostCaptureEditingViewControllerDidDismiss:(id)dismiss;
- (id)titleText;
- (id)titleFont;
- (void)newsSurfaceDidAppear;
- (void)storyDataController:(id)controller didUpdateReel:(id)reel refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller fetchItemsDidFailForReelPK:(id)pk error:(id)error refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didReturnNoStoryItemResultsForReelPK:(id)pk refreshType:(long long)type updateDuration:(double)duration;
- (void)floatingSocialContextActionHandler:(id)handler didTapCommentSocialContextWithCommentID:(id)id media:(id)media;
- (void)floatingSocialContextActionHandler:(id)handler handleLikersListNavigationWithMedia:(id)media;
- (void)storyViewer:(id)viewer didNavigateToStoryItem:(id)item;
- (void)storyViewerShouldRemoveEmptyStateStory:(id)story navigationAction:(long long)action;
- (void)storyViewerDidFinish:(id)finish navigationAction:(long long)action lastMediaID:(id)id viewerExitContextDict:(id)dict completion:(id /* block */)completion;
- (BOOL)storyViewerShouldPresentCamera:(id)camera;
- (void)storyViewer:(id)viewer didFocusOnReelWithPK:(id)pk;
- (void)storyViewerDidTapTryItOn:(id)on onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)storyViewerDidTapViewDay:(id)day;
- (void)storyViewerDidMute:(id)mute didMutePosts:(BOOL)posts;
- (void)storyViewerDidUnfollow:(id)unfollow;
- (void)storyViewerDidFollow:(id)follow;
- (void)sundialRadialMenuController:(id)controller didSelectOption:(long long)option playbackTime:(double)time cellView:(id)view sessionID:(id)id;
- (void)didSelectCutoutSticker:(id)sticker cutoutCreationVC:(id)vc stickerIdTask:(id)task videoSegmentationTask:(id)task;
- (void)cutoutStickerControllerDidCancel:(id)cancel;
- (void)contentNotesActionHandlerIsPresentingImmersiveView:(id)view;
- (void)contentNotesActionHandlerIsDismissingImmersiveView:(id)view;
- (void)contentNotesFloatingViewController:(id)controller didTapNoteWithNoteModel:(id)model media:(id)media defaultLoggingInfo:(id)info presentationContext:(id)context;
- (void)contentNotesFloatingViewController:(id)controller didTapContextMenuWithAction:(long long)action noteModel:(id)model media:(id)media defaultLoggingInfo:(id)info;
- (void)contentNotesFloatingViewControllerDidTapAddNote:(id)note media:(id)media defaultLoggingInfo:(id)info;
- (void)playbackCoordinator:(id)coordinator willApplyChanges:(id)changes;
- (void)playbackCoordinator:(id)coordinator willResolveChangesWithContext:(id)context;
- (void)playbackCoordinator:(id)coordinator didApplyChanges:(id)changes;
- (void)playbackCoordinator:(id)coordinator didResolveChangesWithContext:(id)context;
- (void)toggleAudioWithMedia:(id)media cell:(id)cell;
- (void)toggleVideoWithMedia:(id)media activePlaybackSessionKey:(id)key cell:(id)cell;
- (void)audioQuickActionsControllerDidTapSaveAudio:(id)audio audioAsset:(id)asset;
- (void)audioQuickActionsControllerDidTapUnsaveAudio:(id)audio audioAsset:(id)asset;
- (void)audioQuickActionsControllerDidTapShareAudio:(id)audio audioAsset:(id)asset;
@end

#endif /* IGSundialViewerInteractionCoordinator_h */
