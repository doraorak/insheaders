//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTWebSocketModule_h
#define RCTWebSocketModule_h
@import Foundation;

#include "RCTEventEmitter.h"
#include "NativeWebSocketModuleSpec-Protocol.h"
#include "RCTBridge.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTModuleRegistry.h"
#include "RCTViewRegistry.h"
#include "SRWebSocketDelegate-Protocol.h"

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface RCTWebSocketModule : RCTEventEmitter<SRWebSocketDelegate, NativeWebSocketModuleSpec> {
  /* instance variables */
  NSMutableDictionary *_sockets;
  NSMutableDictionary *_contentHandlers;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@optional
@property (weak, nonatomic) RCTModuleRegistry *moduleRegistry;
@optional
@property (weak, nonatomic) RCTViewRegistry *viewRegistry_DEPRECATED;
@optional
@property (weak, nonatomic) RCTBundleManager *bundleManager;
@optional
@property (weak, nonatomic) RCTCallableJSModules *callableJSModules;
@optional
@property (readonly, weak, nonatomic) RCTBridge *bridge;
@optional
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;

/* class methods */
+ (id)moduleName;
+ (void)load;
+ (const struct RCTMethodInfo *)__rct_export__690;
+ (const struct RCTMethodInfo *)__rct_export__1041;
+ (const struct RCTMethodInfo *)__rct_export__1092;
+ (const struct RCTMethodInfo *)__rct_export__1193;
+ (const struct RCTMethodInfo *)__rct_export__1244;

/* instance methods */
- (id)supportedEvents;
- (void)invalidate;
- (void)connect:(id)connect protocols:(id)protocols options:(struct SpecConnectOptions *)options socketID:(double)id;
- (void)send:(id)send forSocketID:(double)id;
- (void)sendBinary:(id)binary forSocketID:(double)id;
- (void)sendData:(id)data forSocketID:(id)id;
- (void)ping:(double)ping;
- (void)close:(double)close reason:(id)reason socketID:(double)id;
- (void)setContentHandler:(id)handler forSocketID:(id)id;
- (void)webSocket:(id)socket didReceiveMessage:(id)message;
- (void)webSocketDidOpen:(id)open;
- (void)webSocket:(id)socket didFailWithError:(id)error;
- (void)webSocket:(id)socket didCloseWithCode:(long long)code reason:(id)reason wasClean:(BOOL)clean;
- (struct shared_ptr<facebook::react::TurboModule> { struct TurboModule * x0; struct __shared_weak_count * x1; })getTurboModule:(const void *)module;
@end

#endif /* RCTWebSocketModule_h */
