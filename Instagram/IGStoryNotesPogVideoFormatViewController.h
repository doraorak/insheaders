//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryNotesPogVideoFormatViewController_h
#define IGStoryNotesPogVideoFormatViewController_h
@import Foundation;

#include "UIViewController.h"
#include "IGCameraViewController.h"
#include "IGCreationNavigationPresentable-Protocol.h"
#include "IGQuickCamCaptureButtonDelegate-Protocol.h"
#include "IGStoryFormatViewControllerProtocol-Protocol.h"
#include "IGStoryFormatViewControllerProtocolDelegate-Protocol.h"
#include "IGStoryNotesPogVideoFormatLayoutView.h"

@class IGAsyncTask, IGBannerView, IGImageView, IGTooltipView, IGUserSession, NSString, UIImage, UIView;
@protocol UIViewController<IGStoryCameraOverlayViewControlling;

@interface IGStoryNotesPogVideoFormatViewController : UIViewController<IGQuickCamCaptureButtonDelegate, IGStoryFormatViewControllerProtocol> {
  /* instance variables */
  IGUserSession *_userSession;
  UIView *_contentView;
  IGStoryNotesPogVideoFormatLayoutView *_layoutView;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _contentRegion;
  long long _creationMode;
  UIImage *_firstFrameOfVideoCapture;
  IGAsyncTask *_videoCreationTask;
  IGAsyncTask *_photoCreationTask;
  double _maxVideoDuration;
  IGBannerView *_bannerView;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _pogRect;
  UIView *_animationTransitionView;
  IGImageView *_animationTransitionImageView;
  BOOL _hasAnimatedIn;
  BOOL _hasFadedInCameraPreview;
  BOOL _isCaptureAvailable;
  BOOL _shouldRecordUntilMinDurationSatisfied;
  BOOL _isCapturingPhoto;
  BOOL _captureButtonDidTouchDown;
  long long _entryPoint;
  IGTooltipView *_captureButtonTooltip;
  BOOL _captureButtonTooltipShown;
  struct { IGStrictUserFlowLogger *strictLogger; unsigned long long userFlowInstanceId; } _loggerStruct;
  long long _previousMarkerEndCount;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<IGStoryFormatViewControllerProtocolDelegate> *delegate;
@property (readonly, nonatomic) long long prefersBottomLeftButtonType;
@property (readonly, nonatomic) BOOL isManagingCameraView;
@property (readonly, nonatomic) BOOL requiresCameraAccess;
@property (retain, nonatomic) IGCameraViewController *cameraViewController;
@property (retain, nonatomic) UIViewController<IGStoryCameraOverlayViewControlling> *overlayViewController;
@property (copy, nonatomic) id /* block */ galleryViewControllerProvider;
@property (retain, nonatomic) NSObject<IGCreationNavigationPresentable> *creationPresenter;

/* instance methods */
- (id)initWithUserSession:(id)session pogRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect entryPoint:(long long)point;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(BOOL)disappear;
- (BOOL)canRespondToGesture:(id)gesture;
- (void)storyFormatViewControllerWillAppear:(BOOL)appear;
- (void)storyFormatViewControllerDidAppear:(BOOL)appear;
- (void)storyFormatViewControllerWillDisappear:(BOOL)disappear;
- (void)storyFormatViewControllerDidDisappear:(BOOL)disappear;
- (void)didDismissPostCaptureWithoutSharing;
- (void)didDismissPostCaptureBySharing;
- (void)hideAREffectInstructions;
- (void)showAREffectTextInstructions:(id)instructions;
- (void)showAREffectTextInstructions:(id)instructions forDuration:(double)duration;
- (void)cameraViewController:(id)controller captureDidBecomeAvailable:(BOOL)available;
- (void)cameraViewController:(id)controller didChangeLightingMode:(long long)mode;
- (void)cameraViewController:(id)controller willSwitchFromCameraPosition:(long long)position;
- (void)cameraViewController:(id)controller didSwitchToCameraPosition:(long long)position withUserInput:(unsigned long long)input;
- (void)cameraViewControllerDidReceiveFirstFrame:(id)frame;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })cameraViewControllerSafeAreaInsets:(id)insets;
- (void)cameraViewControllerWillStopRecording:(id)recording;
- (void)cameraViewController:(id)controller startAudioSessionDidError:(id)error;
- (void)cameraViewControllerDidStartCameraSwitch:(id)switch;
- (void)cameraViewController:(id)controller didStartCaptureSessionWithCameraPosition:(long long)position cameraOrientation:(long long)orientation;
- (void)cameraViewController:(id)controller didReceiveFirstFrameAfterSwitchingCamerasWithCameraPosition:(long long)position cameraOrientation:(long long)orientation;
- (void)cameraViewControllerDidStopCapture:(id)capture;
- (void)cameraViewControllerWillRequestStartRecording:(id)recording;
- (void)cameraViewControllerDidRequestStartRecording:(id)recording;
- (void)cameraViewControllerDidStartRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)cameraViewControllerDidStopRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration error:(id)error;
- (void)cameraViewController:(id)controller didUpdateRecordProgress:(double)progress;
- (void)cameraViewController:(id)controller didFinishWithBoomerangManager:(id)manager;
- (void)cameraViewController:(id)controller didFinishWithDevicePosition:(long long)position videoInfos:(id)infos images:(id)images;
- (void)cameraViewController:(id)controller failedToCapturePhotoWithError:(id)error;
- (void)cameraViewControllerDidUpdateLightingCapability:(id)capability;
- (void)cameraViewController:(id)controller didToggleHDR:(BOOL)hdr;
- (void)cameraViewController:(id)controller didChangeCameraState:(long long)state;
- (void)cameraViewControllerDidPauseRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)cameraViewControllerDidResumeRecording:(id)recording timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)cameraViewControllerWantsDisableOfMultiCam:(id)cam;
- (void)captureButtonDidReleaseBeforeExpandingFinished;
- (void)captureButtonDidTouchDown;
- (void)captureButtonDidReleaseAfterExpandingFinished;
- (void)captureButtonDidReleaseFromInterruption;
- (void)captureButtonDidBeginExpanding;
- (void)captureButtonDidEndExpanding;
- (void)captureButtonDidConfirm;
- (id)analyticsModule;
@end

#endif /* IGStoryNotesPogVideoFormatViewController_h */
