//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryFullscreenSectionController_h
#define IGStoryFullscreenSectionController_h
@import Foundation;

#include "IGListSectionController.h"
#include "AdsTextRendererOverlayDelegate-Protocol.h"
#include "EKEventEditViewDelegate-Protocol.h"
#include "IGALLogContextModelProvider-Protocol.h"
#include "IGAchievementsNavigationDelegate-Protocol.h"
#include "IGActionListViewControllerDelegate-Protocol.h"
#include "IGActionableInsightsTipLogger.h"
#include "IGActionableInsightsTipNetworkHelper.h"
#include "IGAdsProductCorrectnessViewpoint-Protocol.h"
#include "IGAlertHUDHandling-Protocol.h"
#include "IGAnytimeMentionsController.h"
#include "IGAttributedStringTextViewDelegate-Protocol.h"
#include "IGCameraEffectBottomSheetViewControllerDelegate-Protocol.h"
#include "IGCameraEffectCollectionContextSheetViewControllerDelegate-Protocol.h"
#include "IGClickToMessagingAdsLogger.h"
#include "IGContactsFriendsHelper.h"
#include "IGContentWarningNetworkSource.h"
#include "IGCreationViewControllerNavigationDelegate-Protocol.h"
#include "IGDirectMessageSendingListener-Protocol.h"
#include "IGDirectShareSheetControllerDelegate-Protocol.h"
#include "IGDirectShareSheetControlling-Protocol.h"
#include "IGFanClubConsiderationViewControllerDelegate-Protocol.h"
#include "IGFeedCreationFlowDelegate-Protocol.h"
#include "IGFeedUpcomingEventViewControllerDelegate-Protocol.h"
#include "IGFindFriendsHelperDelegate-Protocol.h"
#include "IGHighlightsFeedPostSelectionDelegate.h"
#include "IGInteractiveDismissTransitionControllerDelegate-Protocol.h"
#include "IGKeyboardObserverFrameChangeDelegate-Protocol.h"
#include "IGKeyboardObserverHideDelegate-Protocol.h"
#include "IGKeyboardObserverShowDelegate-Protocol.h"
#include "IGListDisplayDelegate-Protocol.h"
#include "IGListScrollDelegate-Protocol.h"
#include "IGMediaOverlayDelegate-Protocol.h"
#include "IGMinimizedViewerFullscreenListener-Protocol.h"
#include "IGNewsPresentationDelegate-Protocol.h"
#include "IGPartialModalSheetClosingInterceptionDelegate-Protocol.h"
#include "IGPartialModalSheetListener-Protocol.h"
#include "IGPendingStoryItemStatusDelegate-Protocol.h"
#include "IGPendingStoryItemStatusObserver.h"
#include "IGQuestionAnswerStickerMusicBrowserViewController.h"
#include "IGRenderingLoggingProviding-Protocol.h"
#include "IGRenderingLoggingSessionManager.h"
#include "IGSaveToCollectionsFeedDelegate-Protocol.h"
#include "IGSharedListNetworkingListener-Protocol.h"
#include "IGShoppingRemoveProductController.h"
#include "IGShowreelNativeIntegrationHandler.h"
#include "IGStoryAdAudioCarouselBehavior.h"
#include "IGStoryAdAudioStateRestorer.h"
#include "IGStoryAdEndSceneVideoManager.h"
#include "IGStoryAdsCellControllerImplProtocol-Protocol.h"
#include "IGStoryAdsDeleteAdActivityAdDelegate-Protocol.h"
#include "IGStoryAdsManager.h"
#include "IGStoryAdsMediaManager.h"
#include "IGStoryAttributionDelegate-Protocol.h"
#include "IGStoryAudioPlayerDelegate-Protocol.h"
#include "IGStoryBottomToastPresenter-Protocol.h"
#include "IGStoryCTAController.h"
#include "IGStoryCTALogger.h"
#include "IGStoryCommentController.h"
#include "IGStoryConsumedMediaTracker.h"
#include "IGStoryFullscreenAdsCoordinator.h"
#include "IGStoryFullscreenFooterStoryLikesConfig.h"
#include "IGStoryFullscreenProductTagFooterController.h"
#include "IGStoryFullscreenSectionControllerProviding-Protocol.h"
#include "IGStoryFullscreenSectionLoggingContext.h"
#include "IGStoryFullscreenTappableOverlayDelegate-Protocol.h"
#include "IGStoryHighlightsCreationControllerDelegate-Protocol.h"
#include "IGStoryIntentAwareAdsLoggingProvider.h"
#include "IGStoryItemHeaderViewModel.h"
#include "IGStoryLikesController.h"
#include "IGStoryLikesUserFlowLogger.h"
#include "IGStoryMediaControlling-Protocol.h"
#include "IGStoryNetegoManager.h"
#include "IGStoryOverviewViewController.h"
#include "IGStoryPlayerMediaViewDelegate-Protocol.h"
#include "IGStoryPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "IGStoryQuickReactionsViewController.h"
#include "IGStoryQuickReplyPresenter-Protocol.h"
#include "IGStoryReplyNudgeManager.h"
#include "IGStoryReplyUserFlowLogger.h"
#include "IGStoryResearchPollActionsController.h"
#include "IGStoryResearchPollView.h"
#include "IGStoryRollCallTimeBoxController.h"
#include "IGStorySaveStoryController.h"
#include "IGStorySharedListMemberListViewControllerDelegate-Protocol.h"
#include "IGStoryStaticMediaProgressManager.h"
#include "IGStoryStaticMediaProgressManagerDelegate-Protocol.h"
#include "IGStoryUploadListener-Protocol.h"
#include "IGStoryViewZoomHandler.h"
#include "IGStoryViewZoomLogger.h"
#include "IGStoryViewerAudiencePresenting-Protocol.h"
#include "IGStoryViewerBloksAppHost-Protocol.h"
#include "IGStoryViewerDelegate-Protocol.h"
#include "IGStoryViewerLoggingContext.h"
#include "IGStoryViewerNUXManager.h"
#include "IGStoryViewerPresenting-Protocol.h"
#include "IGStoryViewerState.h"
#include "IGStoryViewerTapTarget.h"
#include "IGStoryViewerViewProvider-Protocol.h"
#include "IGSubscriptionToken-Protocol.h"
#include "IGSundialCreationViewControllerNavigationDelegate-Protocol.h"
#include "IGUpcomingEventsReminderManagerProviding-Protocol.h"
#include "IGUserUpdatedListener-Protocol.h"
#include "IGVPVDAdImpressionInfo.h"
#include "IGXpostingTransparencyNavigationDelegate-Protocol.h"
#include "IGZoomViewPresenter.h"
#include "MFMailComposeViewControllerDelegate-Protocol.h"
#include "MFMessageComposeViewControllerDelegate-Protocol.h"
#include "MOSImageRequestInterfacing-Protocol.h"
#include "MerlinLogAwareExtraDataProvider-Protocol.h"
#include "_TtC19IGStoriesEmptyState23IGStoriesEmptyStateView.h"
#include "_TtP17IGPolaroidSticker34IGPolaroidTryItBottomSheetDelegate_-Protocol.h"
#include "_TtP18IGGenAIAttribution42IGGenAIToolInfoSheetViewControllerDelegate_-Protocol.h"
#include "_TtP19IGStoriesEmptyState31IGStoriesEmptyStateViewDelegate_-Protocol.h"
#include "_TtP21IGStorySuggestedStory47IGStorySuggestedStoryInfoViewControllerDelegate_-Protocol.h"

@class BKContext, FBMerlinManager, FBTimer, IGActionableConfirmationToastController, IGAsyncTask, IGBloksActionNavigationController, IGBloksAsyncActionHandler, IGDirectAUDChecker, IGDirectThreadService, IGFacebookXpostingDestinationPickerPresenter, IGFanClubDataManager, IGKeyboardObserver, IGPartialModalInternalNavigationController, IGPartialModalSheetNavigationController, IGPartialModalSheetViewController, IGQPTooltipInfo, IGQuickPromotionCoordinator, IGRapidFeedbackController, IGSessionTracker, IGShoppingConsumptionFeedItemLogger, IGShoppingNavigationAnalyticsContext, IGSoundStateListener, IGSponsoredSupportConfiguration, IGStory, IGStoryAudioPlayer, IGStoryConfettiAnimationController, IGStoryFacebookEligibilityProvider, IGStorySharedList, IGStoryViewerConfiguration, IGStoryViewerViewModel, IGUserSession, IGVideoViper2ndChannelManager, IGZoomTransitionController, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSObject, NSString, UIImpactFeedbackGenerator, UIView, UIVisualEffectView;
@protocol IGAdInsertionMediaViewTracking><IGAdInsertionProtocol, IGContactInvitesSheetControlling, IGDirectComposerOverflowTrayPresenting, IGStoryFullscreenControllerTypeDelegate, IGStoryItemActionsControllerProviding, IGStoryItemType><IGUnitItemInformationProviding, IGStoryOverviewPresentationControllerProtocol, IGStorySharingInterstitialViewDelegate, IGStoryViewerFullScreenLatelyNuxViewDelegate, IGStoryViewerShareToFBControllerProtocol;

@interface IGStoryFullscreenSectionController : IGListSectionController<IGAchievementsNavigationDelegate, IGActionListViewControllerDelegate, IGALLogContextModelProvider, IGAttributedStringTextViewDelegate, IGCameraEffectBottomSheetViewControllerDelegate, IGCameraEffectCollectionContextSheetViewControllerDelegate, IGCreationViewControllerNavigationDelegate, IGDirectMessageSendingListener, IGDirectShareSheetControllerDelegate, IGFanClubConsiderationViewControllerDelegate, IGFeedCreationFlowDelegate, IGFindFriendsHelperDelegate, IGFeedUpcomingEventViewControllerDelegate, IGInteractiveDismissTransitionControllerDelegate, IGKeyboardObserverFrameChangeDelegate, IGKeyboardObserverHideDelegate, IGKeyboardObserverShowDelegate, IGListScrollDelegate, IGMediaOverlayDelegate, IGMinimizedViewerFullscreenListener, IGNewsPresentationDelegate, IGPartialModalSheetClosingInterceptionDelegate, IGPendingStoryItemStatusDelegate, _TtP17IGPolaroidSticker34IGPolaroidTryItBottomSheetDelegate_, IGRenderingLoggingProviding, IGSaveToCollectionsFeedDelegate, IGSharedListNetworkingListener, _TtP19IGStoriesEmptyState31IGStoriesEmptyStateViewDelegate_, IGStoryAttributionDelegate, IGStoryAudioPlayerDelegate, IGStoryFullscreenTappableOverlayDelegate, IGStoryHighlightsCreationControllerDelegate, IGStoryPlayerMediaViewDelegate, IGStoryPostCaptureEditingViewControllerDelegate, IGStorySharedListMemberListViewControllerDelegate, IGStoryStaticMediaProgressManagerDelegate, _TtP21IGStorySuggestedStory47IGStorySuggestedStoryInfoViewControllerDelegate_, IGStoryUploadListener, IGStoryViewerBloksAppHost, IGStoryViewerDelegate, IGSundialCreationViewControllerNavigationDelegate, IGUserUpdatedListener, IGXpostingTransparencyNavigationDelegate, MerlinLogAwareExtraDataProvider, MFMessageComposeViewControllerDelegate, MFMailComposeViewControllerDelegate, EKEventEditViewDelegate, AdsTextRendererOverlayDelegate, _TtP18IGGenAIAttribution42IGGenAIToolInfoSheetViewControllerDelegate_, IGStoryBottomToastPresenter, IGStoryViewerViewProvider, IGListDisplayDelegate, IGStoryFullscreenSectionControllerProviding, IGStoryQuickReplyPresenter, IGStoryMediaControlling, IGPartialModalSheetListener> {
  /* instance variables */
  UIView *_visualReplyTooltipAnchorView;
  IGZoomTransitionController *_cameraTransitionController;
  BOOL _didDisplayNuxInSegment;
  BOOL _didDisplayNativeTooltipInSegment;
  BOOL _didRegisterQPTooltipInSegment;
  BOOL _didTriggerQPTooltipInSegment;
  NSDate *_nuxImpressionStartTime;
  IGStoryConfettiAnimationController *_confettiAnimationController;
  IGStoryResearchPollActionsController *_researchPollActionsController;
  IGStoryResearchPollView *_researchPollView;
  IGSponsoredSupportConfiguration *_sponsoredSupportConfiguration;
  NSObject<IGAlertHUDHandling> *_alertHandler;
  IGStoryConsumedMediaTracker *_consumedMediaTracker;
  NSArray *_headerAttributionControllers;
  NSString *_lastUserPkOptimisticallyAttemptedToCreateThreadWith;
  IGStoryNetegoManager *_netegoManager;
  BOOL _shareToFacebookUpsellShowing;
  IGShoppingRemoveProductController *_shoppingRemoveProductController;
  BOOL _showsTapAndHoldIndicator;
  BOOL _isSelfStory;
  BOOL _isShowingFirstStory;
  BOOL _isLongPressing;
  BOOL _didLongPress;
  NSDate *_longPressTriggerStartTime;
  NSDate *_longPressTriggerEndTime;
  BOOL _isStoriesMediaRedeliveryFixEnabled;
  IGStoryItemHeaderViewModel *_headerViewModel;
  IGBloksAsyncActionHandler *_asyncActionHandler;
  IGBloksAsyncActionHandler *_bloksAttributionHandler;
  BKContext *_context;
  IGSessionTracker *_shoppingSessionTrackerForAds;
  IGStoryAdAudioCarouselBehavior *_adsAudioCarouselBehavior;
  IGStoryAdAudioStateRestorer *_audioStateRestorer;
  long long _dpaShowcaseAdProductsStartIndex;
  NSObject<IGDirectComposerOverflowTrayPresenting> *_storyReplyStickerTrayPresenter;
  IGStoryLikesController *_storyLikesController;
  BOOL _storyReactionStickerRequestInProgress;
  NSObject<IGStoryViewerAudiencePresenting> *_audiencePresenting;
  IGStoryFacebookEligibilityProvider *_fbEligibilityProvider;
  IGFacebookXpostingDestinationPickerPresenter *_facebookXpostingDestinationPickerPresenter;
  NSDate *_currentSegmentStartTime;
  NSObject<IGAdInsertionMediaViewTracking><IGAdInsertionProtocol> *_adInsertionHandler;
  UIImpactFeedbackGenerator *_scrubbingFeedbackGenerator;
  BOOL _storyOverviewIsShowing;
  BOOL _isPresentingMessageComposer;
  BOOL _suppressQuickReactionsInComposeSession;
  BOOL _isRemixReaction;
  BOOL _isSelfieReaction;
  BOOL _achievementsBottomSheetIsShowing;
  BOOL _enableRenderingloggingV2;
  BOOL _enableCarouselRenderingLogging;
  IGRenderingLoggingSessionManager *_renderingLoggingSessionManager;
  NSObject<IGAdsProductCorrectnessViewpoint> *_pcViewpoint;
  BOOL _shouldUpdateCellForProductCorrectness;
  BOOL _enableRenderAndLayoutLogging;
  BOOL _enableRenderAndLayoutDoubleLogging;
  long long _baseExponentialIntervalInMs;
  IGShowreelNativeIntegrationHandler *_snIntegrationHandler;
  BOOL _snIsFallbackRendering;
  IGStoryViewerNUXManager *_nuxManager;
  IGBloksActionNavigationController *_bloksActionNavigationController;
  BOOL _isCollectionCanvasOpen;
  IGQuickPromotionCoordinator *_qpCoordinator;
  IGQPTooltipInfo *_promoteCTATooltipInfo;
  IGQPTooltipInfo *_headerViewMoreOptionsButtonTooltipInfo;
  NSMutableDictionary *_usedDirectRecipientsByThreadId;
  BOOL _sendToSecureThread;
  id /* block */ _keyboardDismissCompletionBlock;
  BOOL _isKeyboardShowing;
  IGActionableInsightsTipNetworkHelper *_actionableInsightsTipManager;
  IGActionableInsightsTipLogger *_actionableInsightsTipLogger;
  IGStoryOverviewViewController *_overviewViewController;
  NSString *_actionableInsightsTipLoggedForStoryID;
  BOOL _didTapActionableInsightsTip;
  IGStoryAdsMediaManager *_storyAdsMediaManager;
  NSArray *_trayUserIds;
  IGStoryAdEndSceneVideoManager *_endSceneVideoManager;
  BOOL _isCaptionSheetPresented;
  IGPartialModalSheetViewController *_translationModalSheetViewController;
  BOOL _isBrowserPeekEnabled;
  BOOL _isCtaAnimated;
  FBTimer *_swipeUpRelaxationTimer;
  BOOL _isSwipeUpRuleRelaxed;
  BOOL _isSwipeUpRuleRelaxedWithTapAndHold;
  struct CGPoint { double x; double y; } _tapAndHoldStartPoint;
  BOOL _isSwipeUpForCTAStickersEnabled;
  FBTimer *_dynamicTooltipTimer;
  FBTimer *_colorHighlightTimer;
  FBTimer *_tileDynamicTooltipTimer;
  BOOL _dynamicTooltipTimerHasFired;
  BOOL _showProductTileTooltip;
  unsigned long long _dpaCardType;
  FBTimer *_delayedInteractiveMediaTimer;
  IGStoryViewerTapTarget *_delayedInteractiveMediaTapTarget;
  IGActionableConfirmationToastController *_toastController;
  IGStoryFullscreenFooterStoryLikesConfig *_storyLikeConfig;
  BOOL _hasPlayedCrowdNoiseAnimation;
  FBMerlinManager *_merlinManager;
  BOOL _showedProductReviewStatusAlert;
  IGStoryReplyUserFlowLogger *_storyReplyUserFlowLogger;
  IGStoryLikesUserFlowLogger *_storyLikesUserFlowLogger;
  BOOL _isCurrentlyPurchasingSubscription;
  IGFanClubDataManager *_fanClubDataManager;
  NSArray *_multiProductStickerProducts;
  IGPartialModalSheetNavigationController *_merchantBottomSheetController;
  IGAnytimeMentionsController *_anytimeMentionsController;
  IGClickToMessagingAdsLogger *_clickToMessageLogger;
  BOOL _didTapProfileFromThisSectionController;
  BOOL _isAppStorePreloaded;
  NSObject<IGSubscriptionToken> *_readOnlyFeatureLimitSubscription;
  BOOL _readOnlyFeatureLimitApplied;
  IGStoryAudioPlayer *_musicAudioPlayer;
  NSString *_musicAudioPlayerURL;
  FBTimer *_stalledStoryTimer;
  IGVPVDAdImpressionInfo *_vpvdAdImpressionInfo;
  NSObject<IGStoryAdsDeleteAdActivityAdDelegate> *_adActivityDelegate;
  NSDate *_carouselScrubberLastOpenedTime;
  IGStoryRollCallTimeBoxController *_timeBoxController;
  NSDate *_timeboxEnd;
  IGStoryStaticMediaProgressManager *_emptyRollCallProgressManager;
  IGStoryCommentController *_storyCommentController;
  IGContentWarningNetworkSource *_contentWarningNetworkSource;
  NSObject<IGStoryViewerPresenting> *_storyViewerPresenter;
  NSObject<IGUpcomingEventsReminderManagerProviding> *_upcomingEventsReminderManager;
  IGShoppingConsumptionFeedItemLogger *_shoppingFeedItemLogger;
  IGShoppingNavigationAnalyticsContext *_shoppingNavigationInfo;
  BOOL _trackVPVDMerlin;
  NSString *_transcodeProgressToastUUID;
  _TtC19IGStoriesEmptyState23IGStoriesEmptyStateView *_storiesEmptyStateView;
  IGDirectAUDChecker *_audChecker;
  NSObject *_storyPromoteEntryController;
  IGStoryViewZoomHandler *_zoomHandler;
  IGStoryViewZoomLogger *_zoomLogger;
  IGZoomViewPresenter *_zoomViewPresenter;
  IGVideoViper2ndChannelManager *_viewabilityManager;
  BOOL _isViperEnabledForStoryAdVideos;
  BOOL _isViperAdAutoOnboardEnabled;
  BOOL _didShowStoriesSurvey;
  NSObject<IGStoryItemType><IGUnitItemInformationProviding> *_storyItemForTessaSurvey;
  IGStoryIntentAwareAdsLoggingProvider *_intentAwareAdsLogger;
  IGStorySharedList *_sharedList;
  IGAsyncTask *_templateStickerTask;
  BOOL _soundManagerConsolidationEnabled;
  IGSoundStateListener *_soundStateListener;
  IGStoryFullscreenAdsCoordinator *_adsCoordinator;
  IGHighlightsFeedPostSelectionDelegate *_feedPostSelectionDelegate;
  NSObject<IGContactInvitesSheetControlling> *_contactInvitesController;
  IGContactsFriendsHelper *_contactsHelper;
  BOOL _isAddYoursTemplateAutoHighlight;
  IGStoryFullscreenProductTagFooterController *_productTagFooterController;
  struct CGPoint { double x; double y; } _navigationTapPoint;
  BOOL _dismissKeyboardOnDragBegin;
  IGStoryReplyNudgeManager *_storyReplyNudgeManager;
  BOOL _skipVPVDOnInterstitialEnabled;
  BOOL _isPresentingQuickReactionsMoreOptionsTray;
  BOOL _didSeeCurrentStoryItem;
  BOOL _playbackPausedForQuickReactionsFlutter;
  BOOL _playbackPausedForGesture;
  BOOL _overlayChromeHiddenForLongPress;
  BOOL _playbackPausedForSuggestedHighlightsEndCard;
  BOOL _playbackPausedForStickerAnimation;
  BOOL _playbackStartedByUser;
  BOOL _itemActionsShowing;
  IGDirectThreadService *_threadService;
  IGKeyboardObserver *_keyboardObserver;
  IGPendingStoryItemStatusObserver *_pendingItemStatusObserver;
  NSObject<IGStoryItemActionsControllerProviding> *_itemActionsController;
  NSMutableDictionary *_storyPKToDraftMessage;
  NSObject<MOSImageRequestInterfacing> *_pendingImageRequestForMediaReply;
  NSObject<MOSImageRequestInterfacing> *_pendingImageRequestForToast;
  UIVisualEffectView *_blurEffectView;
  IGStorySaveStoryController *_saveStoryController;
  NSObject<IGDirectShareSheetControlling> *_reshareController;
  IGQuestionAnswerStickerMusicBrowserViewController *_musicVC;
  double _emptyStateTimerPauseDuration;
  NSDate *_emptyStateTimerPauseTime;
  NSDate *_emptyStateTimerStartTime;
  FBTimer *_emptyStateTimer;
  IGStoryCTALogger *_storyCTALogger;
  NSObject<IGStoryViewerShareToFBControllerProtocol> *_shareToFBController;
  NSObject<IGStorySharingInterstitialViewDelegate> *_sharingInterstitialViewDelegate;
  NSObject<IGStoryViewerFullScreenLatelyNuxViewDelegate> *_latelyNuxViewDelegate;
  IGStory *_reel;
}

@property (readonly, nonatomic) IGUserSession *userSession;
@property (readonly, nonatomic) IGStoryViewerLoggingContext *loggingContext;
@property (readonly, nonatomic) IGStoryViewerConfiguration *configuration;
@property (retain, nonatomic) IGStoryFullscreenSectionLoggingContext *sectionLoggingContext;
@property (retain, nonatomic) IGStoryViewerState *storyViewerState;
@property (readonly, nonatomic) NSString *analyticsModule;
@property (readonly, nonatomic) long long entryPoint;
@property (nonatomic) BOOL isCurrentUserItem;
@property (retain, nonatomic) IGStoryViewerViewModel *viewModel;
@property (retain, nonatomic) NSObject<IGStoryItemType><IGUnitItemInformationProviding> *currentStoryItem;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) IGStoryAdsManager *storyAdsManager;
@property (readonly, nonatomic) NSObject<IGStoryAdsCellControllerImplProtocol> *adsCellController;
@property (readonly, nonatomic) IGStoryCTAController *ctaController;
@property (retain, nonatomic) NSObject<IGStoryOverviewPresentationControllerProtocol> *storyOverviewPresentationController;
@property (nonatomic) BOOL bloksAppIsShowing;
@property (retain, nonatomic) NSDictionary *prefetchedLispyActionKeyToAsyncTask;
@property (readonly, nonatomic) long long currentItemIndex;
@property (readonly, nonatomic) long long totalNumberOfItems;
@property (retain, nonatomic) IGRapidFeedbackController *rapidFeedbackController;
@property (nonatomic) long long errorType;
@property (readonly, nonatomic) BOOL audioEnabled;
@property (readonly, nonatomic) long long lastAudioChangeReason;
@property (readonly, nonatomic) BOOL isForceMuted;
@property (readonly, nonatomic) NSString *forceMutedReason;
@property (weak, nonatomic) NSObject<IGStoryFullscreenControllerTypeDelegate> *delegate;
@property (nonatomic) BOOL isFocusedController;
@property (readonly, nonatomic) IGStoryQuickReactionsViewController *quickReactionsViewController;
@property (readonly, nonatomic) IGPartialModalInternalNavigationController *multiAttributionPartialModalNavigationController;
@property (readonly, nonatomic) IGPartialModalSheetViewController *attributionPartialModalSheetViewController;

/* instance methods */
- (void)dealloc;
- (id)initWithUserSession:(id)session consumedMediaTracker:(id)tracker loggingContext:(id)context analyticsModule:(id)module isSelfStory:(BOOL)story isSponsored:(BOOL)sponsored entryPoint:(long long)point viewerConfiguration:(id)configuration adInsertionHandler:(id)handler sponsoredSupportConfiguration:(id)configuration trayUserIds:(id)ids storyOverviewPresentationController:(id)controller deleteAdActivityAdDelegate:(id)delegate;
- (long long)numberOfItems;
- (struct CGSize { double x0; double x1; })sizeForItemAtIndex:(long long)index;
- (id)cellForItemAtIndex:(long long)index;
- (void)didUpdateToObject:(id)object;
- (void)didSelectItemAtIndex:(long long)index;
- (id)displayDelegate;
- (id)scrollDelegate;
- (id)_delaySkipStateManaging;
- (id)storyFullscreenSectionControllerForAdsCoordinator:(id)coordinator;
- (id)tappableOverlayDelegateForAdsCoordinator:(id)coordinator;
- (id)controllerTypeDelegateForAdsCoordinator:(id)coordinator;
- (void)finishStoryItemActionsAndResumePlaybackWithAdsCoordinator:(id)coordinator;
- (id)hostingViewControllerForAdsCoordinator:(id)coordinator;
- (id)createBloksObjectSetForAdsCoordinator:(id)coordinator;
- (void)adsCoordinatorDidFetchSundialMediasAsynchronously:(id)asynchronously;
- (void)adsCoordinatorAdvanceToNextItem:(id)item navigationAction:(long long)action;
- (void)updateShowreelNativeCellWithVisibleCellForAdsCoordinator:(id)coordinator;
- (id)mediaViewForAdsCoordinator:(id)coordinator;
- (id)overlayViewForAdsCoordinator:(id)coordinator;
- (BOOL)captionSheetPresentedForAdsCoordinator:(id)coordinator;
- (void)adCoordinator:(id)coordinator didTapOnCaptionWithPoint:(struct CGPoint { double x0; double x1; })point type:(id)type value:(id)value previouslyTappedValue:(id)value;
- (void)displayCaptionSheetForAdsCoordinator:(id)coordinator;
- (void)expandCaptionForAdsCoordinator:(id)coordinator;
- (id)storyDurationParamsBlockForAdsCoordinator:(id)coordinator;
- (void)showreelNativeAnimationPlayForAdsCoordinator:(id)coordinator;
- (void)ctMessagingAdsSendReplyFromAdsCoordinator:(id)coordinator text:(id)text;
- (id)ctMessagingAdsCreateMessagingLoggerFromAdsCoordinator:(id)coordinator;
- (void)ctMessagingAdsPresentMessageComposerFromAdsCoordinator:(id)coordinator fromView:(id)view;
- (id)ctMessagingAdsStoryCTAControllerFromAdsCoordinator:(id)coordinator;
- (void)ctMessagingAdsEndComposingMessageFromAdsCoordinator:(id)coordinator draft:(id)draft;
- (void)ctMessagingAdsReplyViewFromAdsCoordinator:(id)coordinator message:(id)message;
- (void)ctMessagingAdsReshareFromAdsCoordinator:(id)coordinator;
- (void)ctaManagerRegisterTapQuantumSignalsForAdsCoordinator:(id)coordinator;
- (void)resumePlaybackWithAdsCoordinator:(id)coordinator;
- (void)adsCoordinatorDidDismissCTAController:(id)ctacontroller;
- (void)setupClickLoggingAndComposerBackgroundForAdsCoordinator:(id)coordinator;
- (void)ctaUpdateCollectionCanvasOpenStatusForAdsCoordinator:(id)coordinator isOpen:(BOOL)open;
- (id)ctaManagerDelegateForAdsCoordinator:(id)coordinator;
- (id)storyItemsForAdsCoordinator:(id)coordinator;
- (void)ctaManagerOpenLinkForAdsCoordinator:(id)coordinator presentingViewController:(id)controller productId:(id)id;
- (void)prefetchAdsTargetFromAdsCoordinator:(id)coordinator;
- (void)pausePlaybackForAdsCoordinator:(id)coordinator reason:(long long)reason;
- (BOOL)audioEnabledFromAdsCoordinator:(id)coordinator;
- (void)endScenePresentBrowserFromAdsCoordinator:(id)coordinator;
- (BOOL)endSceneIsLongAdUnexpandedFromAdsCoordinator:(id)coordinator;
- (void)endSceneTapOnPogFromAdsCoordinator:(id)coordinator headerView:(id)view tapSource:(id)source;
- (void)endSceneShownFromAdsCoordinator:(id)coordinator;
- (id)visibleStoryCellForAdsCoordinator:(id)coordinator;
- (id)commonManagerIntentAwareAdsLoggingProviderForAdsCoordinator:(id)coordinator;
- (long long)commonManagerMultiAuthorCarouselAdIndexForAdsCoordinator:(id)coordinator;
- (void)commonManagerReshareTapForAdsCoordinator:(id)coordinator tapSource:(id)source;
- (void)shoppingLinkedMerchantWasTapped:(id)tapped allTaggedProductIDs:(id)ids;
- (void)partialModalSheetViewController:(id)controller interceptClosingWithBlock:(id /* block */)block;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)listAdapter:(id)adapter didScrollSectionController:(id)controller;
- (void)listAdapter:(id)adapter willBeginDraggingSectionController:(id)controller;
- (void)listAdapter:(id)adapter didEndDraggingSectionController:(id)controller willDecelerate:(BOOL)decelerate;
- (void)updateStoryProgressView;
- (id)storyProgressDurationParameters;
- (void)setStoryProgress:(double)progress;
- (void)setStoryProgress:(double)progress forSegmentAtIndex:(unsigned long long)index;
- (void)startEndScene;
- (void)updateEndSceneProgress;
- (void)pauseEndSceneIfNeeded;
- (void)resumeEndSceneIfNeeded;
- (void)extendEndSceneIfNeeded;
- (void)navigateToUserProfileByUserPkId:(id)id;
- (void)navigateToUserProfile:(id)profile;
- (void)launchStoryViewerWithReelID:(id)id;
- (void)launchStoryViewerWithReelID:(id)id entryPoint:(long long)point focusFeedItem:(id)item;
- (void)navigateToOwnerWithTapSource:(id)source;
- (void)navigateToURL:(id)url;
- (void)openBottomSheetWithProducts:(id)products;
- (void)displayReshareControllerOrFrictionFromTapSource:(id)source;
- (void)advanceToNextItemWithNavigationAction:(long long)action;
- (void)rewindToPreviousItemWithNavigationAction:(long long)action;
- (void)presentViewController:(id)controller completion:(id /* block */)completion;
- (id)storyViewerViewModel;
- (unsigned long long)numberOfStoryItems;
- (id)musicBrowserViewControllerWithUsername:(id)username userSession:(id)session;
- (id)cellView;
- (void)setAudioEnabled:(BOOL)enabled reason:(long long)reason;
- (BOOL)_shouldProvideProductTileDynamicDestinationTreatment;
- (BOOL)_tapIsWithinSafeZone:(struct CGPoint { double x0; double x1; })zone;
- (void)showBottomToastWithViewModel:(id)model duration:(double)duration style:(long long)style tapActionHandler:(id /* block */)handler dismissedHandler:(id /* block */)handler;
- (void)_fetchStoryCommentsIfNeeded;
- (void)storyFullscreenCTAStickerFooterViewDidTapOnCTA:(id)cta atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)storyFullscreenCTAStickerFooterViewDidTapOnReshareButton:(id)button;
- (void)achievementsViewControllerWillDismiss;
- (void)achievementsViewControllerWillOpenURL:(id /* block */)url;
- (void)userWasUpdated:(id)updated;
- (void)mediaWasHardDeleted:(id)deleted;
- (void)mediaWasRestored:(id)restored;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAnimatedMedia:(id)media;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAnimatedSticker:(id)sticker index:(long long)index bottomSheetSessionId:(id)id directTrayType:(long long)type;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectStaticSticker:(id)sticker index:(long long)index bottomSheetSessionId:(id)id directTrayType:(long long)type;
- (void)storyStickerViewControllerAdapter:(id)adapter didLongPressStickerWithId:(id)id isAvatarSticker:(BOOL)sticker enableReportingOptions:(BOOL)options enableFeedbackOptions:(BOOL)options enableFavoriteOptions:(BOOL)options useContextMenuReportFlow:(BOOL)flow cellContentView:(id)view bottomSheetSessionId:(id)id refreshFavoriteStickersBlock:(id /* block */)block;
- (void)storyStickerViewControllerAdapter:(id)adapter didLongPressAnimatedStickerWithId:(id)id enableFeedbackOptions:(BOOL)options enableFavoriteOptions:(BOOL)options useContextMenuReportFlow:(BOOL)flow cellContentView:(id)view bottomSheetSessionId:(id)id refreshFavoriteStickersBlock:(id /* block */)block;
- (void)storyStickerViewControllerAdapterDidSelectPollSticker:(id)sticker;
- (void)storyStickerViewControllerAdapterDidSelectLike:(id)like;
- (void)storyStickerViewControllerAdapter:(id)adapter didCreateNewPollMessageWithQuestion:(id)question options:(id)options;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectMessageEffect:(id)effect text:(id)text;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAvatarImage:(id)image;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectAvatarSticker:(id)sticker isAnimatedSticker:(BOOL)sticker shouldResetComposerToDefaultMode:(BOOL)mode withQuotedMessage:(id)message;
- (void)storyStickerViewControllerAdapter:(id)adapter didSelectCreateRollCallWithText:(id)text recurringCadence:(unsigned long long)cadence;
- (void)storyStickerViewControllerAdapterDidSelectStickerTab:(id)tab;
- (void)storyStickerViewControllerAdapterEnterLockedFullScreenIfAllowed:(id)allowed;
- (void)storyStickerViewControllerAdapterExitLockedFullScreenIfAllowed:(id)allowed;
- (void)storyStickerViewControllerAdapterWillPresentAvatarEditor:(id)editor;
- (void)storyStickerViewControllerAdapterDidDismissAvatarEditor:(id)editor;
- (void)storyStickerViewControllerAdapterDidSelectAddYoursEntrypoint:(id)entrypoint;
- (void)willDisplayQPTooltip;
- (void)didEndDisplayingQPTooltip;
- (void)upcomingEventViewControllerDidTapViewPostButton:(id)button;
- (void)upcomingEventViewControllerDidTapOpenSettings;
- (void)upcomingEventViewControllerDidTapOpenLiveNotificationSettings:(id)settings;
- (BOOL)upcomingEventViewController:(id)controller didHandleEditButtonTapWithUpcomingEvent:(id)event;
- (void)upcomingEventViewControllerDidShareSticker:(id)sticker media:(id)media mediaIndex:(long long)index;
- (void)upcomingEventViewController:(id)controller didUpdateSetReminder:(BOOL)reminder forUpcomingEvent:(id)event;
- (void)upcomingEventViewControllerDidTapViewShop:(id)shop;
- (void)storyPlayerMediaView:(id)view didUpdateLoadingState:(id)state;
- (void)storyPlayerMediaViewWillLoadVideo:(id)video;
- (void)storyPlayerMediaViewDidLoad:(id)load loadSource:(id)source networkRequestSummary:(id)summary;
- (void)storyPlayerMediaView:(id)view didUpdateProgress:(double)progress player:(id)player captionController:(id)controller;
- (void)storyPlayerMediaViewDidPlayToEnd:(id)end;
- (void)storyPlayerMediaView:(id)view willLoadURL:(id)url;
- (void)storyPlayerMediaViewDidFailToLoadImage:(id)image error:(id)error networkRequestSummary:(id)summary;
- (void)storyPlayerMediaViewReceivedEmptyBuffer:(id)buffer;
- (void)storyPlayerMediaViewDidPlay:(id)play;
- (void)storyPlayerMediaViewDidBeginPlayback:(id)playback;
- (void)storyPlayerMediaViewDidFailToPlayback:(id)playback error:(id)error;
- (void)storyPlayerMediaView:(id)view didGenerateVideoPlaybackWarningWithError:(id)error;
- (void)storyPlayerMediaView:(id)view didTapLinkIconWithGestureRecognizer:(id)recognizer;
- (BOOL)storyPlayerMediaViewDidExpandCarouselStory:(id)story;
- (void)pauseWithReason:(long long)reason;
- (struct CGPoint { double x0; double x1; })navigationTapPoint;
- (BOOL)isPlaying;
- (void)viewControllerDidAppear;
- (void)tryResumePlaybackWithReason:(long long)reason;
- (void)stopWithReason:(long long)reason;
- (void)seekToTime:(double)time;
- (void)resetSeenState;
- (void)seekToBeginning;
- (void)setFooterHidden:(BOOL)hidden;
- (id)viewerSessionId;
- (void)tryPrecheckFBEligibilities;
- (void)addSharingInterstitialViewWithDelegate:(id)delegate;
- (void)addLatelyFullscreenNuxIfNeededWithDelegate:(id)delegate;
- (double)targetDimmingPercentForProposedDimmingPercent:(double)percent;
- (void)endEditingForOverlayView;
- (void)dismissWithNavAction:(long long)action;
- (void)pendingItemObserver:(id)observer postShare:(id)share didUpdateToProgress:(double)progress;
- (void)pendingItemObserver:(id)observer postShare:(id)share didUpdateToStatus:(unsigned long long)status;
- (void)pendingItemObserver:(id)observer postShare:(id)share didUpdateVideoURL:(id)url;
- (id)_integrationPointForCurrentStory;
- (id)tryToFetchSurveyWithIntegrationPointsAttempted:(id)attempted;
- (void)mediaWasUpdated:(id)updated withChange:(long long)change isFromPreview:(BOOL)preview;
- (void)storyItemActionsControllerWillSharePostAsDirect;
- (void)storyItemActionsControllerDidFinish;
- (void)storyItemActionsControllerWillHideSponsoredPostWithEventName:(id)name;
- (void)storyItemActionsControllerDidHideSponsoredPostWithReason:(id)reason showAlert:(BOOL)alert extra:(id)extra;
- (void)storyItemActionsControllerDidAddSponsorPartnerWithUser:(id)user didAllowSponsorPartnerToBoost:(BOOL)boost;
- (void)storyItemActionsControllerDidRemoveSponsorPartnerWithUser:(id)user didAllowSponsorPartnerToBoost:(BOOL)boost;
- (void)storyItemActionsControllerDidReplaceSponsorPartnerWithPreviousUser:(id)user newUser:(id)user didAllowSponsorPartnerToBoost:(BOOL)boost;
- (void)storyItemActionsControllerDidUpdateAllowSponsorToBoostWithUser:(id)user didAllowSponsorPartnerToBoost:(BOOL)boost;
- (void)storyItemActionsControllerDidPresentInstagramAds;
- (void)storyItemActionsControllerWillPresentBrowser;
- (void)storyItemActionsControllerDidSelectAddToHighlight;
- (void)storyItemActionsControllerDidTapPauseStory;
- (void)storyItemActionsControllerDidTapEditHighlightReel;
- (void)storyItemActionsControllerDidFinishArchiveNowWithStoryMedia:(id)media;
- (void)inFeedSurveyDidHideUnit;
- (void)storyResearchPollActionsControllerDidHideUnit:(id)unit;
- (void)storyResearchPollActionsControllerDidFinish:(id)finish;
- (void)storyResearchPollActionsControllerDidDisplayBottomSheet;
- (void)storyItemActionsControllerDidTapShareToFacebookStory;
- (void)storyItemActionsControllerDidTapArchiveReshare;
- (void)storyItemActionsControllerDidTapPromote;
- (void)storyItemActionsControllerDidTapViewPromotions;
- (void)storyItemActionsControllerDidTapViewPromotionInsights;
- (void)storyItemActionsControllerDidTapCopyEntireStoriesLink;
- (void)storyItemActionsControllerDidTapMuteUnmuteWithShouldMute:(BOOL)mute selectedChangePostsMuteStatus:(BOOL)status selectedChangeStoryMuteStatus:(BOOL)status;
- (void)storyItemActionsControllerDidMuteFanClubStoriesTeaser;
- (void)storyItemActionsControllerDidTapUnfollowWithShouldUnfollow:(BOOL)unfollow;
- (void)storyItemActionsControllerDidMuteWithMutedReel:(BOOL)reel;
- (void)storyItemActionsControllerDidDisablePanGesture;
- (id)storyItemActionsControllerVideoViewPlayer;
- (id)storyItemActionsControllerDebugLoggingExtraForStory;
- (void)storyVideoViewDidTapCaptionView:(id)view;
- (double)storyVideoViewBottomCaptionOffsetForView:(id)view;
- (void)_didTapHeaderViewDismissButton:(id)button;
- (void)headerViewDidTapAudienceButton:(id)button;
- (void)headerViewDidTapSharedListButton:(id)button;
- (void)headerViewDidTapTopLineText:(id)text;
- (void)headerViewDidTapSecondaryTopLineText:(id)text;
- (void)headerViewDidTapOwnerImage:(id)image;
- (void)headerViewDidTapMore:(id)more;
- (void)headerViewDidTapCameraButton:(id)button;
- (void)headerView:(id)view didTapUsername:(id)username;
- (void)headerView:(id)view storyAdsOptInTextView:(id)view willTransitionFromType:(unsigned long long)type;
- (void)headerViewdidLayoutWithlayoutExtra:(id)extra;
- (void)headerView:(id)view didTapWithCyclingAttributionViews:(id)views;
- (void)headerView:(id)view didTapMentionReshareFacepileWithUsername:(id)username;
- (void)headerViewDidTapDualHeaderPrimaryUser:(id)user;
- (void)headerViewDidTapDualHeaderSecondaryUser:(id)user;
- (void)headerView:(id)view didTapFacepile:(id)facepile;
- (void)headerViewDidAnimateFanClubMediaIndicator;
- (void)headerViewDidTapFollowButton;
- (void)directComposerOverflowTrayPresenter:(id)presenter willDismissWithReason:(unsigned long long)reason;
- (void)directComposerOverflowTrayPresenter:(id)presenter didDismissWithReason:(unsigned long long)reason;
- (void)storyAttributionDidTapAvatarStickerAttribution:(id)attribution;
- (void)storyAttributionDidTapAudioAttribution:(id)attribution;
- (void)storyAttributionDidTapChannelAttribution:(id)attribution joinChatStickerConsumptionModel:(id)model;
- (void)storyAttributionDidTapClipsAttribution:(id)attribution;
- (void)storyAttributionDidTapWatchReelsAttribution:(id)attribution;
- (void)storyAttributionDidTapCameraEffectAttribution:(id)attribution;
- (void)storyAttributionAdsOptInAttributionDidTapAdsOptInAttribution:(id)attribution;
- (void)storyAttributionDidTapCameraEffectPreviewAttribution:(id)attribution effectCreatorUserName:(id)name;
- (void)storyAttributionDidTapCreateModeAttributionController:(id)controller;
- (void)storyAttributionDidTapUnlockedStickerAttributionController:(id)controller;
- (void)storyAttributionDidTapSponsored;
- (void)storyAttributionPauseStory;
- (void)storyAttributionDidTapTranslationAttributionController:(id)controller;
- (void)storyAttributionDidTapWearableAttributionController:(id)controller;
- (void)storyAttributionDidTapTransparencyAttribution:(id)attribution;
- (void)storyAttributionDidTapResharedMediaAttribution:(id)attribution resharedMentionAuthor:(id)author;
- (void)storyAttributionDidTapSuggestedStoryAttribution:(id)attribution sourceUser:(id)user;
- (void)storyAttributionDidTapHighlightsAttribution:(id)attribution;
- (void)storyAttributionDidTapGenAIStickerAttribution:(id)attribution;
- (void)storyAttributionDidTapAppRatingAttribution:(id)attribution;
- (void)storyAttributionDidTapPrivateListsAttribution:(id)attribution;
- (void)storyAttributionDidTapGenAIToolAttribution:(id)attribution promptStickerModel:(id)model;
- (BOOL)storyAttributionShouldEnableAutomatedLogging;
- (void)storyAttributionDidTapStoryTemplateAttribution:(id)attribution;
- (void)storyAttributionDidTapSavedCollectionAttribution:(id)attribution;
- (void)storyAttributionDidTapPolaroidStickerAttribution;
- (void)storyAttributionDidTapSeeMoreInLatelyAttribution:(id)attribution;
- (void)storyAttributionDidTapCutoutStickerAttribution;
- (void)didTapPolaroidTryItBottomSheet:(id)sheet;
- (void)storyFullscreenRightsManagerViolationFooterViewDidTapMoreButton:(id)button;
- (void)storyFullscreenRightsManagerViolationFooterViewDidTapErrorButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapViewers:(id)viewers;
- (void)storyFullscreenOwnerFooterViewDidTapMoreButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapHighlightButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapCarouselScrubberButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapShareAsPostButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapArchiveReshareButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapDirectButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapPromoteButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapInsightsButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapFacebookButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapViewDayButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapCovertToReelButton:(id)button;
- (void)storyFullscreenOwnerFooterView:(id)view didTapAddToSharedListButton:(id)button;
- (void)storyFullscreenOwnerFooterViewDidTapLatelyButton:(id)button;
- (void)storyFullscreenCTAButtonFooterView:(id)view didTransitionFromButtonState:(unsigned long long)state toButtonState:(unsigned long long)state;
- (void)storyFullscreenCTAButtonFooterView:(id)view didTapCTAButtonWithType:(unsigned long long)type;
- (void)storyFullscreenCTAButtonFooterViewDidTapMoreOption:(id)option;
- (void)storyFullscreenCTAButtonFooterViewDidTapStartComposingMessage:(id)message;
- (void)storyFullscreenCTAButtonFooterView:(id)view didEndComposingMessage:(id)message;
- (void)storyFullscreenCTAButtonFooterView:(id)view didChangeMessageText:(id)text;
- (void)storyFullscreenCTAButtonFooterView:(id)view didTapSendMessage:(id)message;
- (void)storyFullscreenCTAButtonFooterView:(id)view didTapCameraButton:(id)button;
- (void)storyFullscreenCTAButtonFooterView:(id)view didTapStoryLikeButton:(id)button;
- (void)fullscreenDefaultFooterView:(id)view didTapAddToSharedListButton:(id)button;
- (void)storyFullscreenOwnerFooterView:(id)view didTapSharedListCommentButton:(id)button;
- (void)fullscreenDefaultFooterView:(id)view didTapCommentButton:(id)button;
- (void)fullscreenDefaultFooterViewDidTapCarouselScrubberButton:(id)button;
- (void)storyFullscreenCTAButtonDidTapReshareButton:(id)button;
- (void)storyFullscreenCTAButtonDidTapSocialContext:(id)context;
- (void)storyFullscreenSwipeUpGuidanceDidTapReshareButton:(id)button;
- (void)storyFullscreenSwipeUpGuidanceDidTapOnView:(id)view tapGestureRecognizer:(id)recognizer;
- (void)storyFullscreenSwipeUpGuidanceDidTapSocialContext:(id)context;
- (BOOL)_delaySkippingAd;
- (void)storyFullscreenCTAButtonDidTapSaveButton:(id)button;
- (void)storyItemActionsControllerDidTapSaveButton;
- (void)storyItemActionsControllerDidTapCancelUpload;
- (void)storyFullscreenCTAButtonDidLongPressSaveButton:(id)button;
- (void)saveCollectionsViewController:(id)controller didUpdateCollection:(id)collection withRemoveFromCollection:(BOOL)collection;
- (void)saveCollectionsViewController:(id)controller willUpdateCollection:(id)collection withRemoveFromCollection:(BOOL)collection;
- (BOOL)saveCollectionsViewController:(id)controller shouldPauseForCollectionWithTitle:(id)title continueHandler:(id /* block */)handler;
- (void)saveCollectionsViewController:(id)controller updateFailedWithCollection:(id)collection;
- (void)saveCollectionsViewControllerDidDismiss:(id)dismiss;
- (void)didTapContactInvite;
- (void)didTapSyncContacts;
- (void)findFriendsHelper:(id)helper didAuthorizeWithDataRequest:(id)request;
- (void)findFriendsHelper:(id)helper didFailToAuthorizeWithMessage:(id)message;
- (void)storyFullScreenAddYoursFooterViewDidTapAddYoursButton;
- (void)storyFullscreenShuffleFooterViewDidTapDice:(id)dice;
- (void)fullscreenAREffectPreviewFooterView:(id)view didTapTryItCTA:(id)cta;
- (void)fullscreenAREffectPreviewFooterViewDidTapSave:(id)save;
- (void)fullscreenAREffectPreviewFooterViewDidTapSend:(id)send;
- (void)fullscreenAREffectPreviewFooterViewDidTapMore:(id)more;
- (void)feedItemFooterViewDidTapComment:(id)comment;
- (void)feedItemFooterViewDidTapLike:(id)like;
- (void)feedItemFooterViewDidTapSend:(id)send;
- (void)fullscreenDefaultFooterViewDidTapClipsCameraCreateButton:(id)button;
- (void)fullscreenDefaultFooterViewDidTapMoreOptions:(id)options;
- (void)fullscreenDefaultFooterView:(id)view didTapStoryLikeButton:(id)button;
- (void)fullscreenDefaultFooterViewDidInitiateVoiceReply:(id)reply isLongPress:(BOOL)press;
- (void)fullscreenDefaultFooterViewDidStartComposingVoiceReply:(id)reply;
- (void)fullscreenDefaultFooterViewDidEndComposingVoiceReply:(id)reply;
- (void)fullscreenDefaultFooterView:(id)view didRecordVoiceReplyAudioClipWithURL:(id)url waveform:(id)waveform duration:(double)duration;
- (void)fullscreenDefaultFooterView:(id)view didTapVisualReplyButton:(id)button;
- (void)fullscreenDefaultFooterViewDidBeginComposingMessage:(id)message showVisualReplyTooltipOnView:(id)view composerEntrypoint:(unsigned long long)entrypoint;
- (void)fullscreenDefaultFooterViewDidStartStoryLikeAnimation:(id)animation;
- (void)_shouldStartQuickReactionsUserFlowLogging;
- (void)_shouldEndQuickReactionsUserFlowLogging;
- (void)fullscreenDefaultFooterView:(id)view textUpdatedFromString:(id)string toString:(id)string;
- (void)fullscreenDefaultFooterView:(id)view didUpdateComposerText:(id)text mode:(id)mode;
- (void)fullscreenDefaultFooterViewDidInvalidateSize:(id)size needsImmediateLayout:(BOOL)layout;
- (void)fullscreenDefaultFooterView:(id)view didEndComposingMessage:(id)message;
- (void)fullscreenDefaultFooterView:(id)view didTapSendMessage:(id)message;
- (void)fullscreenDefaultFooterViewDidTapReshareButton:(id)button;
- (void)fullscreenDefaultFooterViewDidTapDrawButton:(id)button;
- (void)fullscreenDefaultFooterViewDidTapStickerButton:(id)button;
- (void)fullscreenDefaultFooterViewDidTapStickerSearchButton:(id)button withSearchQuery:(id)query;
- (void)fullscreenDefaultFooterViewDidTapRemoveGifButton:(id)button withGifModel:(id)model;
- (void)_presentAddYoursTemplateAutoHighlightOptInSheet;
- (void)didTapNextButtonFromSheetViewController:(id)controller;
- (void)didTapDismissButtonFromSheetViewController:(id)controller;
- (void)suggestedHighlightFooterDidTapEdit:(id)edit;
- (void)suggestedHighlightFooterDidTapPublish:(id)publish;
- (void)suggestedHighlightFooterDidTapNext:(id)next;
- (void)uploadFooterViewDidTapUploadRetryButton:(id)button;
- (BOOL)uploadFooterViewShouldDisplayMoreOptionButton:(id)button;
- (void)uploadFooterViewDidTapMoreOptionButton:(id)button;
- (void)storyFullscreenGroupStoriesFooterView:(id)view didTapMessageButton:(id)button;
- (void)storyFullscreenGroupStoriesFooterView:(id)view didTapLikeButton:(id)button;
- (void)storyFullscreenGroupStoriesFooterView:(id)view didTapCommentButton:(id)button;
- (void)storyFullscreenGroupStoriesFooterView:(id)view didTapSendMessage:(id)message;
- (void)storyFullscreenGroupStoriesFooterView:(id)view didEndComposingMessage:(id)message;
- (void)storyFullscreenFanClubTeaserFooterViewDidTapSubscribeButton;
- (void)xAndBrowseViewController:(id)controller willUpdateToBrowserState:(unsigned long long)state fromBrowserState:(unsigned long long)state;
- (void)xAndBrowseViewControllerBrowserDragDidBegin;
- (void)xAndBrowseViewControllerBrowserDragDidEnd;
- (void)directShareSheetDidTapShareOption:(long long)option;
- (void)storyDidBeginUpload:(id)upload;
- (void)storyUploadStartedWithCompositions:(id)compositions entryPoint:(long long)point;
- (void)storyUploadStartedWithReelOwner:(id)owner reelPK:(id)pk compositionId:(id)id shareType:(long long)type;
- (void)storyUpload:(id)upload removedFromReelOwner:(id)owner reelPK:(id)pk;
- (void)attributedStringTextView:(id)view didTapLink:(id)link;
- (void)presentMessageComposerWithVisualReplyTooltipOnView:(id)view fromView:(id)view alwaysHideQuickReactions:(BOOL)reactions shouldSetQuickReactionToggleToAvatars:(BOOL)avatars;
- (void)pushCameraEffectsAttributionBottomSheet:(id)sheet;
- (void)presentCameraEffectCollectionBottomSheetWithModelList:(id)list;
- (void)refreshView;
- (void)didTapOnMoreButton;
- (void)keyboardObserver:(id)observer keyboardFrameDidChangeWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserver:(id)observer keyboardFrameWillChangeWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidHide:(id)hide;
- (void)keyboardObserver:(id)observer keyboardWillHideWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidShow:(id)show;
- (void)keyboardObserver:(id)observer keyboardWillShowWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (id)story;
- (long long)currentCarouselTransformationSegmentIndex;
- (void)pushMusicSheetInMultiattributionBottomsheet;
- (void)storyViewerClipsBottomSheetViewControllerDidTapCreateClips:(id)clips;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (void)storyOverviewControllerDidTapViewMembers:(id)members sharedList:(id)list modalSheetNavigationController:(id)controller;
- (void)storyOverviewControllerDidTapSharedListReshare:(id)reshare sharedList:(id)list;
- (void)storyOverviewDidFinish:(id)finish withExitPoint:(unsigned long long)point currentOverviewStoryItem:(id)item;
- (void)anytimeMentionsController:(id)controller didFinishAddingMentions:(id)mentions entryPoint:(id)point;
- (void)anytimeMentionsControllerDidFailToAddMentions:(id)mentions;
- (void)anytimeMentionsControllerDidDismiss:(id)dismiss;
- (void)fullscreenOverlay:(id)overlay didBeginPressingInRegion:(long long)region withGesture:(id)gesture tapPoint:(struct CGPoint { double x0; double x1; })point;
- (void)fullscreenOverlay:(id)overlay didLongPressWithGesture:(id)gesture;
- (void)fullscreenOverlayDidEndPressing:(id)pressing;
- (void)fullscreenOverlay:(id)overlay didTapInRegion:(long long)region;
- (void)fullscreenOverlay:(id)overlay didDoubleTapInRegion:(long long)region locationInfo:(id)info;
- (void)fullscreenOverlayDidSwipeUp:(id)up swipeUpGesture:(id)gesture;
- (void)fullscreenOverlayDidSwipeDown:(id)down;
- (void)fullscreenOverlay:(id)overlay didBeginUpwardPanGesture:(id)gesture;
- (void)fullscreenOverlayDidPanUp:(id)up panUpGestureLoggingModel:(id)model;
- (void)fullscreenOverlayDidLayoutSubviews:(id)subviews;
- (void)fullscreenOverlay:(id)overlay progressIndexSelected:(long long)selected;
- (void)fullscreenOverlay:(id)overlay didTapQuizStickerView:(id)view atPointInWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates tapTarget:(id)target;
- (void)fullscreenOverlayDidDisplayTappableOverlayTooltip:(id)tooltip tapModel:(id)model tapPoint:(struct CGPoint { double x0; double x1; })point isFromSticker:(BOOL)sticker;
- (void)fullscreenOverlayDidHideTooltip:(id)tooltip analyticsTag:(id)tag;
- (void)fullscreenOverlayDidShowTooltip:(id)tooltip analyticsTag:(id)tag;
- (void)fullscreenOverlayDidTapSoundOnSticker:(id)sticker;
- (void)fullscreenOverlayDidTapAvatarSticker:(id)sticker avatarModel:(id)model;
- (void)fullscreenOverlayDidTapBloksSticker:(id)sticker bloksModel:(id)model;
- (void)fullscreenOverlayDidTapAddToRollCallTooltip:(id)tooltip;
- (void)fullscreenOverlay:(id)overlay didTapTextFeedReshareSticker:(id)sticker;
- (void)fullscreenOverlayDidTapSecretStickerMessageButton:(id)button;
- (void)fullscreenOverlayDidTapNotifySticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapSavedCollectionSticker:(id)sticker;
- (void)fullscreenOverlayDidTapLinkStickerWithLinkType:(id)type;
- (void)fullscreenOverlay:(id)overlay didTapKaraokeCaptionSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapTextSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didShowTranslationEligibleSticker:(id)sticker;
- (void)secretStickerOverlayViewDidTapMessageButton;
- (void)didTogglePreviewBlurEnabled:(BOOL)enabled;
- (void)fullscreenOverlay:(id)overlay didTapUserPill:(id)pill withTextStickerTapModel:(id)model;
- (void)launchPrefetchedBloksAppWithModel:(id)model;
- (void)launchBloksAppWithBloksAppId:(id)id params:(id)params;
- (void)fullscreenOverlay:(id)overlay didTapProductTileWithURL:(id)url tapTarget:(id)target point:(struct CGPoint { double x0; double x1; })point;
- (void)fullscreenOverlay:(id)overlay didTapURL:(id)url tapModel:(id)model entryPoint:(id)point;
- (void)fullscreenOverlay:(id)overlay didTapNetegoSundialModel:(id)model tapPoint:(struct CGPoint { double x0; double x1; })point;
- (void)fullscreenOverlay:(id)overlay didTapUpcomingEventObject:(id)object tapPoint:(struct CGPoint { double x0; double x1; })point onCTAButton:(BOOL)ctabutton;
- (void)fullscreenOverlay:(id)overlay didTapMultiProductObject:(id)object inDropsReminderButton:(BOOL)button;
- (void)fullscreenOverlay:(id)overlay didTapProductObject:(id)object inDropsReminderButton:(BOOL)button;
- (void)fullscreenOverlay:(id)overlay didTapPollSticker:(id)sticker voteIndex:(long long)index tapTarget:(id)target;
- (void)fullscreenOverlay:(id)overlay didTapPollStickerV2:(id)v2 voteIndex:(long long)index tapTarget:(id)target;
- (void)fullscreenOverlay:(id)overlay didTapMusicStickerObject:(id)object;
- (void)fullscreenOverlay:(id)overlay didTapMusicLyricsStickerObject:(id)object;
- (void)fullscreenOverlay:(id)overlay didTapCountdownSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapExploreShareableGridSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapPhotoCreditSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didReachCountdownStickerEndDate:(id)date;
- (void)fullscreenOverlay:(id)overlay didReachDropStickerLaunchDate:(id)date stickerModel:(id)model;
- (void)fullscreenOverlay:(id)overlay didRequestSaveForProductItem:(id)item;
- (void)fullscreenOverlay:(id)overlay didTapFBFundraiserSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapSMBSupportSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didBeginSlidingSlider:(id)slider;
- (void)fullscreenOverlay:(id)overlay didEndSlidingSlider:(id)slider withVote:(double)vote inStickerViewMode:(long long)mode;
- (void)fullscreenOverlay:(id)overlay didTapInternalStickerSocialContext:(id)context;
- (void)fullscreenOverlay:(id)overlay didTapPromptStickerShareButton:(id)button;
- (void)fullscreenOverlay:(id)overlay didTapPolaroidStickerOverlay:(id)overlay;
- (void)fullscreenOverlay:(id)overlay didShakePolaroidStickerOverlay:(id)overlay;
- (void)fullscreenOverlay:(id)overlay didTapPromptStickerSocialContext:(id)context;
- (void)fullscreenOverlay:(id)overlay didTapGroupMentionSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapReactionSticker:(id)sticker withReactionStickerData:(id)data;
- (void)fullscreenOverlay:(id)overlay didTapSubscriptionPromoteStickerWithTapModel:(id)model;
- (void)fullscreenOverlayDidTapSubscriptionTeaserSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapJoinChatSticker:(id)sticker isFromSticker:(BOOL)sticker;
- (void)fullscreenOverlay:(id)overlay didTapVisualReplyCommentSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapFBCommunitySticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapAppSticker:(id)sticker;
- (void)fanClubConsiderationViewControllerDidUpdateView:(id)view;
- (void)fanClubConsiderationViewControllerDidDismissWelcomeViewController:(id)controller;
- (void)fanClubConsiderationViewController:(id)controller shouldPresentWelcomeViewController:(id)controller;
- (void)fanClubConsiderationViewControllerDidUpdateWithIsPurchasing:(BOOL)purchasing;
- (void)fanClubConsiderationViewController:(id)controller shouldPresentContextualFeedWithTarget:(id)target;
- (void)chatStickerConsumptionViewControllerDidRequestApproval:(id)approval;
- (void)chatStickerConsumptionViewControllerDidFinishSubcriptionPurchaseWithFanClubConsiderationViewController:(id)controller welcomeViewController:(id)controller;
- (void)chatStickerConsumptionViewControllerShouldPresentFanClubConsiderationViewControllerWithOrigin:(id)origin sessionId:(id)id;
- (void)prompStickerParticipantList:(id)list didTapShareButtonWithModel:(id)model fromInternalSticker:(BOOL)sticker sharedList:(id)list;
- (void)prompStickerParticipantList:(id)list didTapInviteFriendButton:(id)button;
- (void)prompStickerParticipantList:(id)list didTapAuthorAttribution:(id)attribution;
- (void)prompStickerParticipantList:(id)list didTapParticipantId:(id)id promptStickerModel:(id)model;
- (void)promptStickerParticipantListDidTapDiscoverMorePrompts:(id)prompts;
- (void)groupMentionStickerUserList:(id)list didTapAddStoryButtonWithModel:(id)model;
- (void)groupMentionStickerUserList:(id)list didTapCreateChatButtonWithModel:(id)model;
- (void)fullscreenOverlay:(id)overlay didTapAdsAppSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapCustomClientGeneratedTapObject:(id)object atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)fullscreenOverlay:(id)overlay didTapAdsLinkSticker:(id)sticker tapType:(unsigned long long)type atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)fullscreenOverlay:(id)overlay didTapAdsInteractiveSticker:(id)sticker interactiveStickerTapType:(unsigned long long)type atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)fullscreenOverlay:(id)overlay didTapLeadGenFirstQuestionStickerView:(id)view atPointInWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates tapTarget:(id)target;
- (void)fullscreenOverlay:(id)overlay didTapLeadGenOffsiteProfileStickerView:(id)view atPointInWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates tapTarget:(id)target;
- (void)fullscreenOverlay:(id)overlay didTapLeadGenOffsiteQuestionStickerView:(id)view atPointInWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates tapTarget:(id)target;
- (void)fullscreenOverlay:(id)overlay didTapClickToMessagingFAQsStickerView:(id)view atPointInWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates tapTarget:(id)target;
- (void)fullscreenOverlay:(id)overlay didTapFBTagSticker:(id)sticker;
- (void)fullscreenOverlay:(id)overlay didTapEventStickerWithTapModel:(id)model;
- (void)fullscreenOverlay:(id)overlay didTapHighlightStickerWithTapModel:(id)model;
- (void)renderingLoggingSaveSnapshotExtras:(id)extras;
- (void)storyCreativeTransformationsView:(id)view didLongPressInCaptionTextView:(id)view;
- (void)storyCreativeTransformationsView:(id)view didTapTouchableRegionAtPoint:(struct CGPoint { double x0; double x1; })point type:(id)type value:(id)value previouslyTappedValue:(id)value;
- (void)storyCreativeTransformationsView:(id)view didTapNonTouchableRegion:(id)region;
- (void)storyCreativeTransformationsView:(id)view didTapToOpenMultiDocumentWithName:(id)name;
- (void)storyCreativeTransformationsViewShouldFallbackRendering:(id)rendering;
- (void)storyCreativeTransformationsView:(id)view shouldFallbackRendering:(BOOL *)rendering;
- (id)currentHeaderAttributionControllers;
- (id)currentFullscreenOverlayView;
- (void)pausePlaybackToDisplayNUX;
- (void)resumePlaybackAfterNUX;
- (void)storyViewerNuxManagerDidTapHighlightOnFanClubHighlightDialog:(id)dialog;
- (void)storyViewerNuxManagerDidTapSharedListAddStory:(id)story withSharedList:(id)list;
- (id)currentViewController;
- (void)containerViewDidDismissGestureNuxView:(id)view dismissAction:(id)action;
- (void)fullscreenOverlayDidTapVideoPlay:(id)play;
- (void)fullscreenOverlayDidTapRetry:(id)retry;
- (void)storyQuickReactionsViewWillPresentEmojiPicker:(id)picker;
- (void)storyQuickReactionsViewDidDismissEmojiPicker:(id)picker;
- (void)storyQuickReactionsController:(id)controller sourceEmojiButton:(id)button didTapEmoji:(id)emoji;
- (void)storyQuickReactionsController:(id)controller didTapSelfieReactFromAnchorView:(id)view;
- (void)storyQuickReactionsView:(id)view didSelectAvatar:(id)avatar staticSticker:(id)sticker;
- (void)storyQuickReactionsView:(id)view didSelectAvatar:(id)avatar animatedSticker:(id)sticker;
- (void)storyQuickReactionsView:(id)view didSelectToggle:(unsigned long long)toggle userHasAvatar:(BOOL)avatar;
- (void)storyQuickReactionsViewDidDismissAvatarCreation:(id)creation;
- (void)storyQuickReactionsViewWillPresentAvatarQuickReactionTray:(id)tray;
- (void)storyQuickReactionsViewWillSendAvatarFromQuickReactionTray:(id)tray;
- (void)storyQuickReactionsViewDidDismissAvatarQuickReactionTray:(id)tray didSendAvatar:(BOOL)avatar;
- (void)_didTapAddMentionToStory;
- (void)_didTapAddDonorDuplicateStickerToStory;
- (void)_didTapReplyToMentionWithStory;
- (id)directShareSheetWarningMessage;
- (void)directShareSheetControllerWillPresentConfirmationToast:(id)toast;
- (void)directShareSheetControllerDidSelect:(id)select sender:(id)sender directRecipients:(id)recipients externalServices:(id)services text:(id)text media:(id)media selectedPostPk:(id)pk sharedAttachments:(id)attachments;
- (void)directShareSheetControllerDidDismissReshareSheet:(id)sheet willPresentConfirmationToast:(BOOL)toast hasShared:(BOOL)shared;
- (void)directShareSheetControllerDidDismissConfirmationToast:(id)toast;
- (void)directShareSheetController:(id)controller didTapRecipient:(id)recipient selected:(BOOL)selected;
- (void)directShareSheetControllerDidTapSave:(id)save;
- (void)directShareSheetControllerDidShareToStory:(id)story;
- (void)cameraTransitionController:(id)controller didDragToDismissViewController:(id)controller;
- (void)creationViewControllerWillDismiss:(id)dismiss;
- (void)creationViewController:(id)controller didFinishWithExitPoint:(long long)point shouldAnimateTransition:(BOOL)transition isNavigationHandledByPresenter:(BOOL)presenter;
- (void)creationViewController:(id)controller didDismissWithExitPoint:(long long)point destination:(long long)destination storySendTarget:(long long)target toDirectRecipients:(id)recipients image:(id)image storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids completion:(id /* block */)completion;
- (void)creationViewController:(id)controller didEnterState:(long long)state;
- (void)creationViewController:(id)controller willShareToDirectRecipients:(id)recipients;
- (void)storyPostCaptureEditingViewController:(id)controller didShareToStory:(long long)story andDirectRecipients:(id)recipients storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids exitPoint:(long long)point completion:(id /* block */)completion;
- (void)storyPostCaptureEditingViewControllerDidCancel:(id)cancel;
- (void)storyPostCaptureEditingViewControllerEndFlow;
- (void)storyPostCaptureEditingViewControllerDrawingReplyDidDismiss:(id)dismiss;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendRollCallWithDirectRecipients:(id)recipients;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendPermanentMediaWithAsset:(id)asset entryPoint:(long long)point;
- (void)storyPostCaptureEditingViewController:(id)controller didTapConfirmNotesPogVideoWithComposition:(id)composition;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendRemixReactionWithDirectRecipients:(id)recipients viewMode:(id)mode mediaType:(id)type sourceMediaId:(id)id isSelfieReaction:(BOOL)reaction asset:(id)asset videoAudioMuted:(BOOL)muted exitPoint:(long long)point;
- (void)addHighlightsSheetDidCancel:(id)cancel;
- (void)addHighlightsSheet:(id)sheet didUpdateReelWithPK:(id)pk added:(BOOL)added title:(id)title coverURL:(id)url isOpalHighlight:(BOOL)highlight;
- (void)_showToastForUpdatedHighlightWithTitle:(id)title coverURL:(id)url added:(BOOL)added;
- (void)addHighlightsSheet:(id)sheet wantsNewReelWithTitle:(id)title cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect creationToken:(id)token isOpalHighlight:(BOOL)highlight;
- (void)highlightsCreationControllerDidTapCancel:(id)cancel;
- (void)highlightsCreationControllerDidFinish:(id)finish mode:(long long)mode reel:(id)reel highlightCoverModel:(id)model;
- (void)highlightsCreationControllerDidEditSuggestedHighlight:(id)highlight addedItems:(id)items removedItems:(id)items title:(id)title coverModel:(id)model;
- (void)highlightsCreationController:(id)controller didPublishSuggestHighlightType:(long long)type;
- (void)suggestedHighlightEndCardDidTapPublish:(id)publish;
- (void)suggestedHighlightEndCardDidTapRemove:(id)remove;
- (void)suggestedHighlightEndCardDidTapDismiss:(id)dismiss;
- (void)suggestedHighlightEndCardDidTapCreateStory:(id)story;
- (void)shoppingRemoveProductController:(id)controller didRemoveProduct:(id)product;
- (void)shoppingRemoveProductController:(id)controller didRemoveShoppingStickerFromStory:(id)story;
- (void)shoppingRemoveProductController:(id)controller didFailWithErrorMessage:(id)message;
- (void)shoppingRemoveProductControllerDidCloseAlertDialog:(id)dialog;
- (void)minimizedViewerWillAppearFullscreen;
- (void)minimizedViewerWillDisappearFullscreen;
- (void)xpostingTransparencyViewControllerWillDismiss;
- (void)xpostingTransparencyDismissViewControllerPresentErrorAlert:(id)alert mediaID:(long long)id;
- (void)shareToFBControllerWillShowLoginModal:(id)modal;
- (void)shareToFBControllerWillShowShareToFacebookAlert:(id)alert;
- (void)shareToFBControllerDidTapAlreadySharedToFacebook:(id)facebook;
- (void)shareToFBControllerDidTapShareToFacebookAlert:(id)alert;
- (void)shareToFBControllerDidCloseShareToFacebookAlert:(id)alert;
- (void)shareToFBControllerDidShowXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidTapNotNowForXpostingUpsell:(id)upsell shouldShowACLinkageToast:(BOOL)toast;
- (void)shareToFBControllerDidTapAutoShareForXpostingUpsellAfterLinking:(id)linking;
- (void)shareToFBControllerDidTapAutoShareForXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidTapShareOnceForXpostingUpsellAfterLinking:(id)linking;
- (void)shareToFBControllerDidTapShareOnceForXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidDismissXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidShowShareToFacebookOptionAlert:(id)alert;
- (void)shareToFBControllerDidTapShareOnceAlert:(id)alert;
- (void)shareToFBControllerDidTapNotNowAlert:(id)alert;
- (void)shareToFBControllerDidRequestShareToFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidShareToFacebookWithStoryItem:(id)item showAlert:(BOOL)alert;
- (void)shareToFBControllerDidFailShareToFacebookWithStoryItem:(id)item showAlert:(BOOL)alert;
- (void)shareToFBControllerDidFinishLoginForService:(id)service;
- (void)shareToFBControllerDidFailLoginForService:(id)service;
- (void)shareToFBControllerShareListNeedsFullReload:(id)reload;
- (void)shareToFBControllerDidRequestToShowShareToCloseFriendsFacebookActionsMenu:(id)menu;
- (void)shareToFBControllerDidRequestRemoveFromFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidRemoveFromFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidFailRemoveFromFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidRequestToShowDestinationPicker:(id)picker;
- (id)viewControllerForShareConfiguration;
- (void)outgoingMessagePayloadSuccessfullySent:(id)sent successResponseDict:(id)dict;
- (void)outgoingMessageWithPayload:(id)payload didFailToSendWithError:(id)error manualRetryPermitted:(BOOL)permitted;
- (void)outgoingSecureMessageWillSendForThreadTarget:(id)target content:(id)content;
- (void)didRemoveProductStickerWithStoryTapModel:(id)model;
- (void)didRemoveProductSwipeUpWithProductItem:(id)item;
- (void)didRemoveProductTag:(id)tag;
- (void)didRemoveProductTileFromProfileShop:(id)shop;
- (void)didDismissProductDialog;
- (void)didPotentiallyChangeFeedItem;
- (void)countdownFollowSheetViewController:(id)controller didTurnReminderOn:(BOOL)on;
- (void)countdownFollowSheetViewController:(id)controller didShareCountdown:(id)countdown;
- (void)countdownFollowSheetViewController:(id)controller didTapUser:(id)user;
- (void)countdownFollowSheetViewController:(id)controller didTapSaveToCalendar:(id)calendar;
- (void)eventEditViewController:(id)controller didCompleteWithAction:(long long)action;
- (void)storyViewer:(id)viewer didFocusOnReelWithPK:(id)pk;
- (void)storyViewer:(id)viewer didNavigateToStoryItem:(id)item;
- (void)storyViewerShouldRemoveEmptyStateStory:(id)story navigationAction:(long long)action;
- (void)storyViewerDidFinish:(id)finish navigationAction:(long long)action lastMediaID:(id)id viewerExitContextDict:(id)dict completion:(id /* block */)completion;
- (BOOL)storyViewerShouldPresentCamera:(id)camera;
- (void)storyViewerDidTapTryItOn:(id)on onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)storyViewerDidTapViewDay:(id)day;
- (void)storyViewerDidMute:(id)mute didMutePosts:(BOOL)posts;
- (void)storyViewerDidUnfollow:(id)unfollow;
- (void)storyViewerDidFollow:(id)follow;
- (id)storyViewForCell:(id)cell;
- (void)willStartZoomingForStoryViewZoomHandler:(id)handler;
- (void)didStartZoomingForStoryViewZoomHandler:(id)handler;
- (void)didEndZoomingForStoryViewZoomHandler:(id)handler;
- (void)actionListViewControllerDidDismiss:(id)dismiss;
- (void)actionListDidSelectAction;
- (void)actionListViewController:(id)controller didTapDismissSection:(id)section;
- (void)actionListDidTapSwitch:(id)switch index:(long long)index value:(BOOL)value;
- (void)infoViewDidTapIncentiveLinkFrom:(id)from;
- (void)updateCurrentlyVisibleCell;
- (void)fullscreenOverlayDidDisplaySensitivityViewActionSheet:(id)sheet;
- (void)fullscreenOverlayDidDismissSensitivityViewActionSheet:(id)sheet;
- (void)fullscreenOverlayDidTapContinueSensitivityViewActionSheet:(id)sheet;
- (void)fullscreenOverlayDidTapSensitivityViewSeeWhy:(id)why actionSource:(unsigned long long)source;
- (void)fullscreenOverlaySensitivityTimerExpired:(id)expired;
- (void)fullscreenOverlay:(id)overlay sensitivityTimerProgressed:(double)progressed;
- (void)didTapMediaOverlayButton:(id)button mediaItem:(id)item;
- (void)registerBannerCell:(id)cell;
- (void)refreshBannerCell;
- (void)didTapActionableInsightsTipWithModel:(id)model;
- (void)didDismissActionableInsightsTipWithModel:(id)model;
- (void)cameraEffectCollectionContextSheetViewControllerShowContextSheet:(id)sheet config:(id)config bottomSheetController:(id)controller;
- (void)cameraEffectCollectionContextSheetViewControllerResumePlayback:(id)playback;
- (void)cameraEffectBottomSheetViewControllerDidEnterFullscreenMode:(id)mode;
- (void)cameraEffectBottomSheetViewControllerDidLeaveFullscreenMode:(id)mode;
- (void)cameraEffectBottomSheetViewController:(id)controller didTapViewProductItem:(id)item;
- (void)cameraEffectBottomSheetViewController:(id)controller didToggleSaveToWishlist:(BOOL)wishlist showToast:(BOOL)toast;
- (void)cameraEffectBottomSheetViewController:(id)controller didRequestRemovalOfEffectWithID:(id)id completion:(id /* block */)completion;
- (id)cameraEffectBottomSheetViewControllerAttributionModelForCurrentAREffect:(id)areffect;
- (BOOL)cameraEffectBottomSheetViewControllerShouldPresentCamera:(id)camera;
- (void)cameraEffectBottomSheetViewControllerDidTapTryIt:(id)it onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (long long)cameraEffectBottomSheetViewControllerCaptureType:(id)type;
- (long long)cameraEffectBottomSheetViewControllerSwitcherMode:(id)mode;
- (void)dismissShoppingCameraAndShowPDPForCoordinator:(id)coordinator productItem:(id)item creationViewController:(id)controller;
- (id)trackingModel;
- (id)extraDataForExtraDataType:(long long)type;
- (id)provideMerlinDataModel:(long long)model;
- (void)unlockedStickerBottomSheetViewController:(id)controller didTapUseItForStickerId:(id)id forSourceView:(id)view;
- (id)renderedComponentLoggingInfo;
- (void)contextSheetProductViewControllerDidSelectShareDropsSticker:(id)sticker;
- (void)contextSheetSMBSupportViewControllerDidTapSMBSupportAction:(id)action actionURL:(id)url;
- (void)contextSheetSMBSupportViewControllerDidTapShareSMBSupportSticker:(id)sticker;
- (void)tryResumePlaybackFromBloks;
- (void)tryPausePlaybackFromBloks;
- (void)handleUserScopedIntentFromBloks:(id)bloks;
- (void)storyItemForceOpenReshare;
- (void)setStoryCreationNavigationDelegate:(id)delegate;
- (void)rewindIfCurrentSegmentIsHalfwayComplete;
- (void)tryReplayStoryItem;
- (void)pushCameraFormatContextSheetViewControllerInMultiattributionBottomSheet;
- (void)logAttributionBottomSheetNavString:(id)string multiBottomSheet:(BOOL)sheet;
- (void)cameraFormatContextSheetViewControllerDidTapTryIt:(id)it;
- (void)contextSheetCaptionViewControllerDidTapCTAButton:(id)ctabutton;
- (void)contextSheetCaptionViewController:(id)controller didTapHashtag:(id)hashtag url:(id)url;
- (void)contextSheetCaptionViewController:(id)controller didTapUser:(id)user url:(id)url;
- (void)creationViewController:(id)controller didShareSundialPost:(id)post toDestination:(long long)destination;
- (void)creationViewController:(id)controller didShareSundialPostWithExitPoint:(long long)point destination:(long long)destination storySendTarget:(long long)target toDirectRecipients:(id)recipients storyModelArray:(id)array metadataArray:(id)array completion:(id /* block */)completion;
- (void)creationViewController:(id)controller didSaveSundialDraft:(id)draft;
- (void)aatViewDidToggleVideoPlayback:(id)playback;
- (void)fullscreenOverlayDidTapPreviousStoryButton:(id)button;
- (void)fullscreenOverlayDidTapNextStoryButton:(id)button;
- (void)fullscreenOverlayDidTapPreviousUserButton:(id)button;
- (void)fullscreenOverlayDidTapNextUserButton:(id)button;
- (void)didDismissOverflowMenuWithUserEducationForMediaId:(id)id;
- (void)fullscreenOverlayDidTapShowAll:(id)all tapPoint:(struct CGPoint { double x0; double x1; })point;
- (void)fullscreenOverlayDidTapProfileStoryExpansionButton:(id)button;
- (void)_applicationDidBecomeActive:(id)active;
- (void)sharedListMemberListViewControllerDidTapShare:(id)share sharedList:(id)list;
- (void)sharedListMemberListViewControllerPrimaryUserDidLeaveSharedList:(id)list sharedList:(id)list;
- (void)storyRollCallAddToRollCallViewDidTapOnActionButtonForStyle:(id)style;
- (void)logLockedRollCallImpression:(id)impression;
- (void)displayAddToRollCallTooltipAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)timeboxController:(id)controller didCountTo:(long long)to;
- (void)timeboxControllerDidInvalidateTimer:(id)timer;
- (void)suggestedStoryInfoViewControllerDidDismiss:(id)dismiss;
- (void)suggestedStoryInfoViewControllerDidTapUser:(id)user user:(id)user;
- (void)storyAudioPlayer:(id)player didUpdateToPlaybackTime:(double)time;
- (void)storyAudioPlayer:(id)player didUpdateStallState:(BOOL)state;
- (void)storyAudioPlayerDidPlayToEnd:(id)end;
- (void)storyAudioPlayer:(id)player didDetermineAssetPlayabilityStatus:(BOOL)status;
- (void)storyAudioPlayer:(id)player didDetermineDuration:(double)duration ofAsset:(id)asset;
- (void)storyAudioPlayer:(id)player effectivePlaybackRateDidChange:(double)change;
- (void)storyStaticMediaProgressManager:(id)manager didUpdateProgress:(double)progress;
- (void)storyStaticMediaProgressManagerDidPlayToEnd:(id)end;
- (void)didToggleStoryNotificationsStatusForUser:(id)user;
- (void)didPresentPrompt;
- (void)didDismissPrompt;
- (void)carouselScrubberView:(id)view didSelectItemAtIndex:(unsigned long long)index;
- (void)carouselScrubberView:(id)view didScrollToIndex:(unsigned long long)index;
- (void)carouselScrubberView:(id)view didEndScrollingAtIndex:(unsigned long long)index;
- (void)carouselScrubberViewWillBeginDragging:(id)dragging;
- (void)carouselScrubberViewDidEndDecelerating:(id)decelerating;
- (void)fullscreenOverlayViewDidTapAddCommentButton:(id)button;
- (void)fullscreenOverlayView:(id)view didTapCommentPreviewBubble:(id)bubble;
- (void)fullscreenOverlayViewCommentsPreviewWillStartScroll:(id)scroll;
- (void)fullscreenOverlayViewCommentsPreviewDidEndScroll:(id)scroll;
- (void)fullscreenOverlayViewCommentsPreviewDidTapHeart:(id)heart comment:(id)comment;
- (void)fullscreenOverlayViewCommentsPreviewDidDoubleTap:(id)tap comment:(id)comment;
- (void)fullscreenOverlayViewCommentsPreviewDidTapProfile:(id)profile profileUser:(id)user;
- (void)fullscreenOverlayViewCommentsPreviewDidTapViewLikes:(id)likes comment:(id)comment;
- (void)fullscreenOverlayDidDismissCommentComposer:(id)composer;
- (void)fullscreenOverlayView:(id)view didTapPostCommentWithText:(id)text;
- (void)fullscreenOverlayView:(id)view reportComment:(id)comment;
- (void)fullscreenOverlayView:(id)view didTapComment:(id)comment;
- (void)storyCommentDetailsDidTapNewComment;
- (void)storyCommentDetailsDidTapDeleteComment:(id)comment;
- (void)storyCommentDetailsSheetHeight:(double)height;
- (void)storyCommentDetailsDidTapViewLikes:(id)likes;
- (void)storyViewerPresentationControllerDidPresentViewer:(id)viewer withReel:(id)reel;
- (void)storyViewerPresentationControllerDidFailToPresentViewer:(id)viewer;
- (void)storyViewerPresentationControllerWillFinishOnMediaId:(id)id viewerExitContextDict:(id)dict;
- (void)storyViewerPresentationControllerDidFinishOnMediaId:(id)id;
- (void)storyViewerPresentationControllerDidNavigateToMediaId:(id)id;
- (void)storyViewerPresentationControllerDidFocusOnReelWithPK:(id)pk;
- (id)titleText;
- (id)titleFont;
- (void)newsSurfaceDidAppear;
- (void)storyViewerQuickCaptionsViewDidTapExpansionToggle:(id)toggle isExpanded:(BOOL)expanded;
- (void)storyViewerQuickCaptionsView:(id)view didTapOnHashtag:(id)hashtag url:(id)url touchPoint:(struct CGPoint { double x0; double x1; })point;
- (void)storyViewerQuickCaptionsView:(id)view didTapProfileURL:(id)url profileText:(id)text touchPoint:(struct CGPoint { double x0; double x1; })point;
- (void)mailComposeController:(id)controller didFinishWithResult:(long long)result error:(id)error;
- (void)messageComposeViewController:(id)controller didFinishWithResult:(long long)result;
- (void)feedCreationFlowDidCancelWithSelectedAssetMetadatas:(id)metadatas;
- (void)feedCreationFlowDidFinishWithType:(long long)type sharingInfo:(id)info postId:(id)id;
- (id)feedCreationFlowWillNavigateToTarget;
- (void)feedCreationFlowDidShareSundialComposition:(id)composition toDestination:(long long)destination;
- (void)feedCreationFlowDidSaveSundialDraft:(id)draft;
- (void)contactInvitesSheetDidDismiss;
- (void)didUpdateMembersForSharedList:(id)list members:(id)members;
- (id)netegoManager;
- (id)netegoFullscreenManager;
- (id)adsCoordinator;
- (void)storiesEmptyStateView:(id)view shouldHandleIntent:(id)intent;
- (void)textOverlayDidTappedToExpand:(id)expand text:(id)text;
- (BOOL)genAiToolInfoSheetView:(id)view canHandle:(id)handle;
- (void)genAiToolInfoSheetView:(id)view didTapTryIt:(id)it promptStickerModel:(id)model;
@end

#endif /* IGStoryFullscreenSectionController_h */
