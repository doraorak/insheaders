//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGAdsBrowserDestinationIntegrationViewController_h
#define IGAdsBrowserDestinationIntegrationViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAdsBrowserDestinationIntegrationConfig.h"
#include "IGBrowserViewController.h"
#include "IGBrowserViewControllerDelegate-Protocol.h"
#include "IGStoryDataControllerStoryItemListener-Protocol.h"
#include "IGStoryViewerEntryView-Protocol.h"
#include "IGStoryViewerPresentationController.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class IGDirectionalPanGestureRecognizer, IGGradientView, IGUserSession, NSString, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView;
@protocol IGAdsBrowserDestinationIntegrationCaptionAndBrowseDelegate, IGAdsBrowserDestinationIntegrationViewControllerDelegate, UIView<IGSundialAdsCaptionAndBrowseType;

@interface IGAdsBrowserDestinationIntegrationViewController : IGViewController<UIGestureRecognizerDelegate, IGBrowserViewControllerDelegate, IGStoryDataControllerStoryItemListener> {
  /* instance variables */
  IGBrowserViewController *_browserViewController;
  IGAdsBrowserDestinationIntegrationConfig *_config;
  IGDirectionalPanGestureRecognizer *_verticalPanGesture;
  IGDirectionalPanGestureRecognizer *_verticalPanGestureOutsideIAB;
  UITapGestureRecognizer *_tapGestureOutsideIAB;
  UITapGestureRecognizer *_tapGestureInsideIAB;
  UILongPressGestureRecognizer *_longPressGestureOutsideIAB;
  UILongPressGestureRecognizer *_longPressGestureInsideIAB;
  IGGradientView *_browserShadow;
  UIView *_dimmer;
  double _verticalPanOffsetY;
  unsigned long long _browserStateOnPanGestureBegan;
  IGUserSession *_userSession;
  IGStoryViewerPresentationController *_storyPresentationController;
  NSObject<IGStoryViewerEntryView> *_storyRingButton;
  BOOL _enableExpandToFileLinkClick;
  NSObject<IGAdsBrowserDestinationIntegrationCaptionAndBrowseDelegate> *_captionAndBrowseDelegate;
}

@property (retain, nonatomic) UIView<IGSundialAdsCaptionAndBrowseType> *captionAndBrowseView;
@property (weak, nonatomic) NSObject<IGAdsBrowserDestinationIntegrationViewControllerDelegate> *delegate;
@property (readonly, nonatomic) unsigned long long state;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithBrowserViewController:(id)controller config:(id)config userSession:(id)session;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidLayoutSubviews;
- (long long)modalPresentationStyle;
- (BOOL)prefersNavigationBarHidden;
- (id)childViewControllerForStatusBarStyle;
- (void)setCaptionAndBrowseAlpha:(double)alpha;
- (void)changeState:(unsigned long long)state;
- (void)_handlePanGestureRecognizer:(id)recognizer;
- (void)_handlePanGestureRecognizerOutsideIAB:(id)iab;
- (void)_handleTapInsideIAB:(id)iab;
- (void)_handleTapOutsideIAB:(id)iab;
- (void)_handleLongPressInsideIAB:(id)iab;
- (void)_handleLongPressOutsideIAB:(id)iab;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (id)bottomSheetViewPassThrough:(id)through hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (void)browserViewControllerDidFinishWithURL:(id)url dismissWithMethod:(unsigned long long)method;
- (void)browserViewControllerDidFinishWithSessionID:(id)id landingPageInteractable:(BOOL)interactable;
- (void)browserViewController:(id)controller loadingProgressChanged:(double)changed;
- (void)browserViewController:(id)controller URLChanged:(id)urlchanged;
- (void)browserViewControllerWillCloseBrowser:(id)browser;
- (id)browserViewControllerPresenter;
- (void)browserViewController:(id)controller didScrollWebViewScrollView:(id)view;
- (void)browserViewController:(id)controller didRequestPopupForNavigationAction:(id)action;
- (void)browserViewControllerDidRequestMinimizeToPeek:(id)peek;
- (void)browserViewControllerDidCompleteInitialLoading;
- (void)browserViewControllerDidBecomeInteractive;
- (void)sundialAdsCaptionAndBrowseView:(id)view didTapProfile:(id)profile loggingInfoProviding:(id)providing;
- (void)sundialAdsCaptionAndBrowseView:(id)view didTapStoryRingButton:(id)button;
- (void)sundialAdsCaptionAndBrowseView:(id)view didTapHashtag:(id)hashtag withURL:(id)url;
- (void)sundialAdsCaptionAndBrowseView:(id)view didTapCaptionProfileURL:(id)url profileText:(id)text;
- (void)sundialAdsCaptionAndBrowseView:(id)view didTapFBMentionWithProfileURL:(id)url;
- (void)sundialAdsCaptionAndBrowseViewDidTapTranslationButton:(id)button;
- (void)sundialAdsCaptionAndBrowseViewDidTapCaptionText:(id)text;
- (void)sundialAdsCaptionAndBrowseViewDidLongPressSendButton:(id)button withGesture:(id)gesture;
- (void)sundialAdsCaptionAndBrowseViewDidTapLikeButton:(id)button;
- (void)sundialAdsCaptionAndBrowseViewDidTapLikeCountButton:(id)button;
- (void)sundialAdsCaptionAndBrowseViewDidTapCommentButton:(id)button showKeyboard:(BOOL)keyboard commentThreadEntryPoint:(long long)point;
- (void)sundialAdsCaptionAndBrowseViewDidTapSendButton:(id)button;
- (void)sundialAdsCaptionAndBrowseViewDidTapMoreButton:(id)button;
- (void)sundialAdsCaptionAndBrowseView:(id)view attributionViewDidRegisterImpressionForAttributeType:(long long)type index:(long long)index;
- (void)sundialAdsCaptionAndBrowseView:(id)view attributionViewDidTapAttributeType:(long long)type index:(long long)index;
- (void)sundialAdsCaptionAndBrowseView:(id)view attributionViewDidLongPressAttributeType:(long long)type index:(long long)index gestureRecognizer:(id)recognizer;
- (void)sundialAdsCaptionAndBrowseViewAttributionViewDidScrollPillScrollView:(id)view;
- (void)storyDataController:(id)controller didUpdateReel:(id)reel refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller fetchItemsDidFailForReelPK:(id)pk error:(id)error refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didReturnNoStoryItemResultsForReelPK:(id)pk refreshType:(long long)type updateDuration:(double)duration;
- (unsigned long long)_targetDestinationForDismissOrCollapseBrowserInCaptionAndBrowse;
- (void)_allowGesturePassThroughIfNecessary:(BOOL)necessary;
- (BOOL)_shouldEnableExpandToFileLinkClickForLaunchMethod:(long long)method;
@end

#endif /* IGAdsBrowserDestinationIntegrationViewController_h */
