//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGProfileAndBrowseViewController_h
#define IGProfileAndBrowseViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGALLogContextModelProvider-Protocol.h"
#include "IGBrowserViewController.h"
#include "IGBrowserViewControllerDelegate-Protocol.h"
#include "IGCTAPresenterContext.h"
#include "IGProfileAndBrowseView.h"
#include "IGProfileViewControllerType-Protocol.h"
#include "IGScrollViewListener-Protocol.h"
#include "IGSponsoredInfoProviding-Protocol.h"
#include "IGViewAppearListener-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class FBTimer, IGDirectResponseInfo, IGDirectResponseLogger, IGDirectionalPanGestureRecognizer, IGFeedItemTracker, IGMedia, IGUser, IGUserSession, NSString, NSURL, UITapGestureRecognizer;
@protocol IGALTrackingModel, IGViewController<IGProfileAndBrowseContentViewControllerConforming;

@interface IGProfileAndBrowseViewController : IGViewController<UIGestureRecognizerDelegate, IGBrowserViewControllerDelegate, IGViewAppearListener, IGScrollViewListener, IGALLogContextModelProvider, IGProfileViewControllerType> {
  /* instance variables */
  IGViewController<IGProfileAndBrowseContentViewControllerConforming> *_profileViewController;
  IGBrowserViewController *_browserViewController;
  unsigned long long _state;
  BOOL _hasBrowserPresented;
  BOOL _hasAdActionLogged;
  UITapGestureRecognizer *_tapGestureInsideIAB;
  IGDirectionalPanGestureRecognizer *_verticalPanGestureOnProfile;
  IGDirectionalPanGestureRecognizer *_verticalPanGestureOnBrowser;
  double _verticalPanOffsetYOfBrowser;
  unsigned long long _verticalPanGestureOnBrowserInitialState;
  double _partiallyOpenOffsetY;
  double _peekOffsetY;
  IGProfileAndBrowseView *_profileAndBrowseView;
  NSURL *_webURL;
  IGDirectResponseLogger *_logger;
  IGMedia *_media;
  IGFeedItemTracker *_feedItemTracker;
  IGDirectResponseInfo *_currentAdInfo;
  NSObject<IGSponsoredInfoProviding> *_sponsoredInfoProvider;
  IGUserSession *_userSession;
  IGUser *_user;
  IGCTAPresenterContext *_ctaPresenterContext;
  NSString *_analyticsModule;
  NSObject<IGALTrackingModel> *_alTrackingModel;
  unsigned long long _initialHeightState;
  BOOL _restorePeekOnScrollingEndEnabled;
  BOOL _hasExpandedBrowserFullScreen;
  BOOL _hasDwelledMinimumTimeToShowSurvey;
  FBTimer *_profileAndBrowseDwellTimer;
  NSString *_iabCallsiteSessionID;
  double _browserPeekDisimissingRelaxation;
  FBTimer *_browserNudgeTimer;
  BOOL _didShowBrowserNudge;
  BOOL _shouldShowBrowserNudge;
  double _browserNudgeInactivityThresholdMs;
  BOOL _shouldStopBrowserNudgeAnimation;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _initialBrowserFrame;
  BOOL _enableBrowserTitleRotation;
  FBTimer *_inactivityTimer;
  BOOL _enableExpandToFileLinkClick;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithProfileViewController:(id)controller configuration:(id)configuration;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (BOOL)prefersNavigationBarHidden;
- (long long)preferredTabBarBehavior;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (void)browserViewControllerDidFinishWithURL:(id)url dismissWithMethod:(unsigned long long)method;
- (void)browserViewControllerDidFinishWithSessionID:(id)id landingPageInteractable:(BOOL)interactable;
- (void)browserViewController:(id)controller loadingProgressChanged:(double)changed;
- (void)browserViewController:(id)controller URLChanged:(id)urlchanged;
- (void)browserViewControllerWillCloseBrowser:(id)browser;
- (id)browserViewControllerPresenter;
- (void)browserViewController:(id)controller didScrollWebViewScrollView:(id)view;
- (void)browserViewController:(id)controller didRequestPopupForNavigationAction:(id)action;
- (void)browserViewControllerDidRequestMinimizeToPeek:(id)peek;
- (void)browserViewControllerDidCompleteInitialLoading;
- (void)browserViewControllerDidBecomeInteractive;
- (void)viewController:(id)controller viewWillAppearAnimated:(BOOL)animated;
- (void)viewController:(id)controller viewDidAppearAnimated:(BOOL)animated;
- (void)didInteractWithProfileView;
- (void)scrollViewDidEndScrolling:(id)scrolling;
- (void)_clearBrowserNudgeAnimation;
- (void)_cancelBrowserNudgeAnimationIfNeeded;
- (void)_handleTapInsideIAB:(id)iab;
- (void)_handleVerticalPanGestureInsideIAB:(id)iab;
- (void)_handleVerticalPanGestureOnProfile:(id)profile;
- (id)user;
- (id)ctaPresenterContext;
- (void)fetchAdditionalUserData;
- (id)animatableView;
- (id)customNavigationBar;
- (void)setShouldImmediatelyTransitionToOpal:(BOOL)opal;
- (id)opalFloatingButton;
- (void)tryToShowBlockSurvey;
- (BOOL)isMainProfileSurface;
- (id)storyTraySectionController;
- (id)analyticsModule;
- (id)userSession;
- (id)trackingModel;
@end

#endif /* IGProfileAndBrowseViewController_h */
