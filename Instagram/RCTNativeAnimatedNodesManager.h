//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTNativeAnimatedNodesManager_h
#define RCTNativeAnimatedNodesManager_h
@import Foundation;

#include "RCTBridge.h"

@class CADisplayLink, NSMutableDictionary, NSMutableSet;
@protocol RCTSurfacePresenterStub;

@interface RCTNativeAnimatedNodesManager : NSObject {
  /* instance variables */
  RCTBridge *_bridge;
  NSObject<RCTSurfacePresenterStub> *_surfacePresenter;
  NSMutableDictionary *_animationNodes;
  NSMutableDictionary *_eventDrivers;
  NSMutableSet *_activeAnimations;
  CADisplayLink *_displayLink;
}

/* instance methods */
- (id)initWithBridge:(id)bridge surfacePresenter:(id)presenter;
- (BOOL)isNodeManagedByFabric:(id)fabric;
- (void)createAnimatedNode:(id)node config:(id)config;
- (void)connectAnimatedNodes:(id)nodes childTag:(id)tag;
- (void)disconnectAnimatedNodes:(id)nodes childTag:(id)tag;
- (void)connectAnimatedNodeToView:(id)view viewTag:(id)tag viewName:(id)name;
- (void)disconnectAnimatedNodeFromView:(id)view viewTag:(id)tag;
- (void)restoreDefaultValues:(id)values;
- (void)dropAnimatedNode:(id)node;
- (void)setAnimatedNodeValue:(id)value value:(id)value;
- (void)setAnimatedNodeOffset:(id)offset offset:(id)offset;
- (void)flattenAnimatedNodeOffset:(id)offset;
- (void)extractAnimatedNodeOffset:(id)offset;
- (void)getValue:(id)value saveCallback:(id /* block */)callback;
- (void)updateAnimatedNodeConfig:(id)config config:(id)config;
- (void)startAnimatingNode:(id)node nodeTag:(id)tag config:(id)config endCallback:(id /* block */)callback;
- (void)stopAnimation:(id)animation;
- (void)stopAnimationsForNode:(id)node;
- (void)addAnimatedEventToView:(id)view eventName:(id)name eventMapping:(id)mapping;
- (void)removeAnimatedEventFromView:(id)view eventName:(id)name animatedNodeTag:(id)tag;
- (void)handleAnimatedEvent:(id)event;
- (void)startListeningToAnimatedNodeValue:(id)value valueObserver:(id)observer;
- (void)stopListeningToAnimatedNodeValue:(id)value;
- (void)startAnimationLoopIfNeeded;
- (void)stopAnimationLoopIfNeeded;
- (void)stopAnimationLoop;
- (void)stepAnimations:(id)animations;
- (void)updateAnimations;
@end

#endif /* RCTNativeAnimatedNodesManager_h */
