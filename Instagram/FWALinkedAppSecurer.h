//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FWALinkedAppSecurer_h
#define FWALinkedAppSecurer_h
@import Foundation;

#include "FWADataXLocalChannel.h"
#include "FWALinkedDeviceConnection.h"
#include "MWALinkSecurer.h"
#include "MWALinkSecurerDelegate-Protocol.h"
#include "OASKeyPair.h"

@class NSData, NSString;
@protocol {unique_ptr<datax::Service, std::default_delete<datax::Service>>="__ptr_"{__compressed_pair<datax::Service *, std::default_delete<datax::Service>>="__value_"^{Service}}};

@interface FWALinkedAppSecurer : NSObject<MWALinkSecurerDelegate> {
  /* instance variables */
  struct unique_ptr<datax::Service, std::default_delete<datax::Service>> { struct __compressed_pair<datax::Service *, std::default_delete<datax::Service>> { struct Service *__value_; } __ptr_; } _service;
}

@property (nonatomic) BOOL appIsTrusted;
@property (copy, nonatomic) id /* block */ callback;
@property (retain, nonatomic) FWADataXLocalChannel *channel;
@property (retain, nonatomic) FWALinkedDeviceConnection *connection;
@property (nonatomic) BOOL deviceIsTrusted;
@property (retain, nonatomic) NSData *devicePublicKey;
@property (copy, nonatomic) id /* block */ failureHandler;
@property (retain, nonatomic) OASKeyPair *keyPair;
@property (retain, nonatomic) MWALinkSecurer *securer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithIdentity:(id)identity devicePublicKey:(id)key;
- (void)secureConnection:(id)connection callback:(id /* block */)callback;
- (void)secureConnection:(id)connection failureHandler:(id /* block */)handler callback:(id /* block */)callback;
- (void)secureConnection:(id)connection preambleData:(id)data callback:(id /* block */)callback;
- (void)secureConnection:(id)connection preambleData:(id)data failureHandler:(id /* block */)handler callback:(id /* block */)callback;
- (void)callAndDisposeCallbackWithConnection:(id)connection error:(id)error;
- (void)configureIdentityServiceWithRxChallenge:(id)challenge;
- (void)enableTrustWithTxChallenge:(id)challenge;
- (void)finishIfReady;
- (void)onReceived:(unsigned short)received data:(id)data;
- (void)onError:(unsigned short)error;
- (void)onClosed;
- (void)linkSecurer:(id)securer isEncryptedWithTxChallenge:(id)challenge rxChallenge:(id)challenge;
- (void)linkSecurer:(id)securer encounteredError:(id)error;
- (void)linkSecurer:(id)securer securedLinkWithCipher:(id)cipher txId:(id)id rxId:(id)id asMain:(BOOL)main pendingData:(id)data;
- (unsigned short)linkSecurer:(id)securer writeData:(id)data;
@end

#endif /* FWALinkedAppSecurer_h */
