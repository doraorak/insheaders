//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGVideoCallManager_h
#define IGVideoCallManager_h
@import Foundation;

#include "AVPictureInPictureControllerDelegate-Protocol.h"
#include "IGAPIClient-Protocol.h"
#include "IGCoPresenceManager.h"
#include "IGMinimizedViewerFullscreenListener-Protocol.h"
#include "IGMinimizedViewerPresenter.h"
#include "IGMultipleAccountHandling-Protocol.h"
#include "IGRTCKragle.h"
#include "IGRTCKragleBridge.h"
#include "IGRealtimeServerPayloadHandler-Protocol.h"
#include "IGScopeEnding-Protocol.h"
#include "IGSessionEndIdentifier.h"
#include "IGSubscriptionToken-Protocol.h"
#include "IGUserLauncherSetProviding-Protocol.h"
#include "IGVideoCallCaptureCoordinatorAREffectProtocol-Protocol.h"
#include "IGVideoCallCurrentCallProvider-Protocol.h"
#include "IGVideoCallLoggingContext.h"
#include "IGVideoCallParticipantsActions.h"
#include "IGVideoCallSession.h"
#include "IGVideoCallStatusStore.h"
#include "IGVideoCallTTRCPerfLoggingMonitor.h"
#include "UNUserNotificationCenterDelegate-Protocol.h"
#include "_TtC24IGVideoCallDismissHelper24IGVideoCallDismissHelper.h"

@class AVPictureInPictureController, IGDeviceSession, IGDirectCache, IGDirectDjangoThreadSubscriptionService, IGFXCALManager, IGMediaStore, IGRealtimeMqttClient, IGUser, IGUserDefaults, IGUserIntentHandler, IGUserSessionProvider, IGUserStore, NSString, UIView;
@protocol IGActivityStatusSettingServiceProtocol, IGAnalyticsEventLoggingProtocol><FBAnalyticsLogging, IGCoWatchCoordinatorProtocol, IGRTCCallFunnelClientConnectPointManagerProtocol, IGRTCCallFunnelClientManagerProtocol, IGRTCCallFunnelClientProtocol, IGSessionEndBlocking, IGVideoCallAnnouncer, IGVideoCallCallKitCoordinatorInterface;

@interface IGVideoCallManager : NSObject<IGMinimizedViewerFullscreenListener, AVPictureInPictureControllerDelegate, UNUserNotificationCenterDelegate, IGRealtimeServerPayloadHandler, IGVideoCallCurrentCallProvider, IGScopeEnding> {
  /* instance variables */
  IGUserSessionProvider *_userSessionProvider;
  IGDeviceSession *_deviceSession;
  IGUser *_user;
  IGUserStore *_userStore;
  NSObject<IGAPIClient> *_networker;
  NSObject<IGAnalyticsEventLoggingProtocol><FBAnalyticsLogging> *_analyticsLogger;
  NSObject<IGUserLauncherSetProviding> *_featureSets;
  IGRealtimeMqttClient *_realtimeMqttClient;
  IGUserDefaults *_userDefaults;
  IGRTCKragle *_kragle;
  IGUserIntentHandler *_intentHandler;
  IGMinimizedViewerPresenter *_minimizedViewerPresenter;
  IGDirectCache *_directCache;
  IGDirectDjangoThreadSubscriptionService *_threadSubscriptionService;
  _TtC24IGVideoCallDismissHelper24IGVideoCallDismissHelper *_dismissHelper;
  NSObject<IGSessionEndBlocking> *_sessionEndBlocker;
  IGVideoCallStatusStore *_videoCallStatusStore;
  IGCoPresenceManager *_coPresenceManager;
  NSObject<IGActivityStatusSettingServiceProtocol> *_activityStatusSettingService;
  IGFXCALManager *_FXCALManager;
  IGMediaStore *_mediaStore;
  NSObject<IGMultipleAccountHandling> *_multipleAccountHandler;
  NSObject<IGRTCCallFunnelClientManagerProtocol> *_rtcCallFunnelClientManager;
  NSObject<IGRTCCallFunnelClientConnectPointManagerProtocol> *_rtcCallFunnelClientConnectPointManager;
  NSObject<IGVideoCallAnnouncer> *_videoCallAnnouncer;
  IGRTCKragleBridge *_rtcController;
  NSObject<IGSubscriptionToken> *_callModelSubscriptionToken;
  IGSessionEndIdentifier *_sessionEndIdentifier;
  NSObject<IGVideoCallCaptureCoordinatorAREffectProtocol> *_captureCoordinator;
  id /* block */ _joinCompletion;
  IGVideoCallLoggingContext *_notificationLoggingContext;
  NSString *_notificationChannel;
  BOOL _joiningFromRingScreen;
  IGVideoCallParticipantsActions *_participantsActions;
  NSObject<IGCoWatchCoordinatorProtocol> *_coWatchCoordinator;
  AVPictureInPictureController *_systemPipController;
  UIView *_videoCallSourceView;
  BOOL _isVideoCallPiPSupported;
  BOOL _appActiveWhenJoiningCall;
  BOOL _hasShownConvergenceNUXNotification;
  NSString *_convergenceNUXNotificationIdentifier;
  NSString *_cachedLocalCallId;
  NSString *_cachedSharedCallId;
  BOOL _forceManualCallDismissal;
  IGVideoCallTTRCPerfLoggingMonitor *_ttrcPerfLoggingMonitor;
  NSObject<IGRTCCallFunnelClientProtocol> *_callFunnelClient;
  BOOL _fulfillAnswerCallActionAfterJoinAttemptSentEnabled;
  BOOL _isDisplayingCallKitRingScreen;
  NSObject<IGVideoCallCallKitCoordinatorInterface> *_callKitCoordinator;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) IGVideoCallSession *currentSession;

/* instance methods */
- (id)initWithUserScopedObjects:(id)objects;
- (void)startCallSession:(id)session callFunnelClient:(id)client completion:(id /* block */)completion;
- (void)startCallWithActivity:(id)activity callFunnelClient:(id)client;
- (BOOL)callKitIsActive;
- (id)currentVideoCallKey;
- (BOOL)hasActiveCall;
- (BOOL)isAnswered;
- (id)threadId;
- (id)threadMetadata;
- (id)coWatchCoordinator;
- (id)captureCoordinator;
- (void)_handleCallEndedForSession:(id)session callEndedModel:(id)model;
- (void)maximizeVideoCall;
- (void)_onAppWillTerminate:(id)terminate;
- (void)_onAppDidBecomeActive:(id)active;
- (void)_memoryPressureStateChanged:(id)changed;
- (void)minimizedViewerWillAppearFullscreen;
- (void)minimizedViewerWillDisappearFullscreen;
- (void)videoCallController:(id)controller didJoinWithSessionId:(id)id serverInfoData:(id)data;
- (void)videoCallController:(id)controller didFailToJoinWithError:(id)error;
- (void)videoCallControllerDidEnd:(id)end reason:(int)reason wasConnected:(BOOL)connected;
- (void)videoCallController:(id)controller didAddParticipant:(id)participant;
- (void)videoCallController:(id)controller didUpdateParticipant:(id)participant;
- (void)videoCallController:(id)controller didRemoveParticipantKey:(id)key;
- (void)videoCallController:(id)controller participantKeyStartedRinging:(id)ringing;
- (void)callKitDidTimeoutRing:(id)ring videoCallSession:(id)session joinContext:(id)context;
- (void)callKitDidAttemptAnswerCall:(id)call videoCallSession:(id)session isPermissionsEnabled:(BOOL)enabled callCompletionBlock:(id /* block */)block;
- (void)callKitDidDisplayRingScreen:(id)screen joinInfo:(id)info joinContext:(id)context isRingForCurrentUser:(BOOL)user;
- (void)callKitDidConnectCall:(id)call joinInfo:(id)info joinContext:(id)context;
- (void)callKitDidRejectCall:(id)call joinInfo:(id)info joinContext:(id)context;
- (void)callKitDidEndCall:(id)call joinInfo:(id)info;
- (void)callKitDidEncounterError:(id)error callErrorAction:(long long)action error:(id)error;
- (void)scopeWillEnd;
- (void)kragleDidCreateNewCall:(id)call;
- (void)kragleDidEndCallWithKey:(id)key;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)picture;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)picture;
- (void)pictureInPictureController:(id)controller failedToStartPictureInPictureWithError:(id)error;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)picture;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)picture;
- (void)pictureInPictureController:(id)controller restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)handler;
- (void)userNotificationCenter:(id)center willPresentNotification:(id)notification withCompletionHandler:(id /* block */)handler;
- (void)handlePayload:(id)payload;
@end

#endif /* IGVideoCallManager_h */
