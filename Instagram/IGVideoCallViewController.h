//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGVideoCallViewController_h
#define IGVideoCallViewController_h
@import Foundation;

#include "IGViewController.h"
#include "AVPictureInPictureControllerDelegate-Protocol.h"
#include "FBCancelable-Protocol.h"
#include "IGBugReportPresenter-Protocol.h"
#include "IGBugReportPresenterDelegate-Protocol.h"
#include "IGCameraZoomControllerDelegate-Protocol.h"
#include "IGCoWatchContentSelectionCoordinator.h"
#include "IGCoWatchInteropUpgradeBannerUpsellView.h"
#include "IGMinimizableContext.h"
#include "IGMinimizedViewerFullscreenAnnouncer-Protocol.h"
#include "IGPartialModalSheetCustomInteractionDelegate-Protocol.h"
#include "IGPartialModalSheetListener-Protocol.h"
#include "IGRTCReactionTrayConfigurator.h"
#include "IGRoomsPeopleManagementViewController.h"
#include "IGSubscriptionToken-Protocol.h"
#include "IGVideoCallCaptureCoordinatorAREffectProtocol-Protocol.h"
#include "IGVideoCallCoWatchLogger.h"
#include "IGVideoCallE2eeDeviceMessagesHelper.h"
#include "IGVideoCallEndOverlayViewController.h"
#include "IGVideoCallFooterViewController.h"
#include "IGVideoCallHeaderViewController.h"
#include "IGVideoCallNavigationTracker.h"
#include "IGVideoCallNuxCoordinator.h"
#include "IGVideoCallRealtimeNotificationService.h"
#include "IGVideoCallRingOverlayViewController.h"
#include "IGVideoCallSession.h"
#include "IGVideoCallSidebarViewController.h"
#include "IGVideoCallStatusDisplay.h"
#include "IGVideoCallStopScreenSharingViewController.h"
#include "IGVideoCallUserKey.h"
#include "IGVideoCallVideoStreamsViewController.h"
#include "IGVideoCallView.h"
#include "IGVideoCallViewControllable-Protocol.h"
#include "IGVideoCallViewModel.h"
#include "_TtC23IGVideoCallAddUserUIKit33IGVideoCallAddUsersViewController.h"
#include "_TtP23IGVideoCallAddUserUIKit41IGVideoCallAddUsersViewControllerDelegate_-Protocol.h"
#include "_TtP35IGVideoCallInCallSettingsUIKitSwift37IGVideoCallInCallSettingsViewDelegate_-Protocol.h"

@class FBTimer, IGCameraZoomController, IGMenu, IGPartialModalSheetViewController, IGQuickPromotionCoordinator, IGUserSession, MDCDataSubscriptionPipe, NSArray, NSDate, NSMutableSet, NSString, UINotificationFeedbackGenerator, UIViewController;
@protocol IGCoWatchCoordinatorProtocol, IGRTCCallFunnelClientProtocol, IGVideoCallCameraPermissionCoordinatorInterface, IGVideoCallViewControllerAnnouncer, UIView<IGVideoCallCaptureControlsViewProtocol, UIViewController<IGKragleAvatarCommunicationControllerListener><IGVideoCallAREffectViewControllerInterface;

@interface IGVideoCallViewController : IGViewController<IGPartialModalSheetListener, IGPartialModalSheetCustomInteractionDelegate, AVPictureInPictureControllerDelegate, _TtP23IGVideoCallAddUserUIKit41IGVideoCallAddUsersViewControllerDelegate_, IGBugReportPresenterDelegate, IGCameraZoomControllerDelegate, _TtP35IGVideoCallInCallSettingsUIKitSwift37IGVideoCallInCallSettingsViewDelegate_, IGVideoCallViewControllable> {
  /* instance variables */
  IGVideoCallSession *_videoCallSession;
  NSObject<IGVideoCallCaptureCoordinatorAREffectProtocol> *_captureCoordinator;
  IGVideoCallView *_videoCallView;
  IGUserSession *_userSession;
  IGVideoCallUserKey *_currentUserKey;
  IGVideoCallFooterViewController *_footerViewController;
  IGVideoCallHeaderViewController *_headerViewController;
  IGVideoCallVideoStreamsViewController *_videoStreamsViewController;
  IGVideoCallSidebarViewController *_sidebarViewController;
  IGPartialModalSheetViewController *_roomPeopleManagementContainerViewController;
  IGPartialModalSheetViewController *_inCallSettingsContainerViewController;
  UIView<IGVideoCallCaptureControlsViewProtocol> *_captureControlsView;
  IGVideoCallCoWatchLogger *_coWatchLogger;
  UIViewController<IGKragleAvatarCommunicationControllerListener><IGVideoCallAREffectViewControllerInterface> *_arEffectViewController;
  IGVideoCallRingOverlayViewController *_ringOverlayViewController;
  IGVideoCallEndOverlayViewController *_endOverlayViewController;
  IGVideoCallStopScreenSharingViewController *_stopScreenSharingViewController;
  IGRTCReactionTrayConfigurator *_reactionTrayConfigurator;
  IGMenu *_switchCameraMenu;
  BOOL _ringTimedOut;
  BOOL _showingChrome;
  BOOL _isAREffectsEnabledInCall;
  BOOL _isAloneInCall;
  IGMinimizableContext *_minimizableContext;
  IGVideoCallNavigationTracker *_navigationTracker;
  BOOL _videoButtonSelected;
  BOOL _videoEffectsImpressionLogged;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _groupVideoViewShrunkenFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _groupVideoViewFullFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _videoViewFullFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _videoViewForReelsTogetherFrame;
  _TtC23IGVideoCallAddUserUIKit33IGVideoCallAddUsersViewController *_addUsersViewController;
  IGRoomsPeopleManagementViewController *_peopleManagementViewController;
  BOOL _addUsersIncludingInteropUsers;
  IGCoWatchContentSelectionCoordinator *_coWatchContentSelectionCoordinator;
  NSObject<IGCoWatchCoordinatorProtocol> *_coWatchCoordinator;
  IGVideoCallRealtimeNotificationService *_notificationService;
  IGVideoCallStatusDisplay *_statusDisplay;
  NSObject<IGVideoCallViewControllerAnnouncer> *_announcer;
  NSObject<IGMinimizedViewerFullscreenAnnouncer> *_minimizedViewerFullscreenAnnouncer;
  IGVideoCallNuxCoordinator *_nuxCoordinator;
  NSObject<FBCancelable> *_participantStateProviderToken;
  MDCDataSubscriptionPipe *_callModelPipe;
  NSObject<IGSubscriptionToken> *_viewModelSubscriptionToken;
  NSObject<IGSubscriptionToken> *_voiceActivitySubscriptionToken;
  NSObject<IGSubscriptionToken> *_lowQualityConnectionSubscriptionToken;
  NSObject<IGSubscriptionToken> *_callModelSubscriptionToken;
  UIViewController *_navigatedViewController;
  IGCoWatchInteropUpgradeBannerUpsellView *_coWatchInteropUpgradeBannerUpsell;
  FBTimer *_coWatchUpsellBannerDismissTimer;
  FBTimer *_showPeekPromoToastTimer;
  FBTimer *_effectsTrayDismissTimer;
  NSObject<IGVideoCallCameraPermissionCoordinatorInterface> *_permissionsCoordinator;
  NSMutableSet *_currentConnectedParticipantsSet;
  BOOL _isE2eeMandated;
  BOOL _isE2eeOverInstamadillo;
  BOOL _hasShownFirstJoinRequestMessageForCurrentCall;
  BOOL _hasShownConvergenceNUX;
  BOOL _isInitialChromeStateSet;
  NSString *_currentSoftMuteActionID;
  NSArray *_usersPendingJoinRequests;
  IGQuickPromotionCoordinator *_qpCoordinator;
  IGVideoCallE2eeDeviceMessagesHelper *_e2eeDeviceMessageHelper;
  BOOL _hasAudioRecordStartError;
  BOOL _hasAudioRecordLongStall;
  BOOL _hasAudioRecordZeroLoudness;
  BOOL _displayingMuteDetectionToast;
  NSDate *_lastDisplayedMuteDetection;
  UINotificationFeedbackGenerator *_feedbackGenerator;
  BOOL _hasShownBatteryWarningForCurrentCall;
  BOOL _videoPausedDueToOcclusion;
  long long _numberOfRejoinAttempts;
  NSDate *_reconnectionAttemptStartTime;
  NSObject<IGBugReportPresenter> *_bugReportPresenter;
  BOOL _bugReportPausedDismissal;
  BOOL _bugReportPausedCamera;
  BOOL _isAudioOnlyCall;
  unsigned long long _noAnswerEndScreenShownReason;
  IGCameraZoomController *_zoomController;
  BOOL _startedZoom;
  BOOL _shouldSkipFirstMediaUpdateAfterScreenShareStateChanged;
  IGVideoCallUserKey *_screenSharingUserKey;
  NSObject<IGRTCCallFunnelClientProtocol> *_callFunnelClient;
  IGVideoCallViewModel *_viewModel;
  BOOL _pendingEndStateUIDisplay;
  BOOL _isVerifiedCalling;
  BOOL _isFloatingSelfViewEnabled;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session videoCallSession:(id)session captureCoordinator:(id)coordinator callFunnelClient:(id)client;
- (void)dealloc;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidLayoutSubviews;
- (BOOL)isMinimized;
- (BOOL)isShowingChrome;
- (void)showChrome;
- (void)setState:(long long)state;
- (void)transitionToError:(id)error;
- (void)fetchTargetEffectModel:(id)model;
- (void)toggleVideo:(BOOL)video;
- (void)displayDualButtonToast:(id)toast duration:(double)duration tapDualButtonLeftBlock:(id /* block */)block tapDualButtonRightBlock:(id /* block */)block dismissedHandler:(id /* block */)handler;
- (void)dismissToast;
- (void)setIsOnScreen:(BOOL)screen;
- (void)minimizableContextDidBegin:(id)begin;
- (BOOL)minimizableContextCanMinimize;
- (BOOL)minimizableContextCanMaximize;
- (void)minimizableContextWillMaximizeWithSharedObject:(id)object;
- (void)minimizableContextWillMinimizeWithSharedObject:(id)object;
- (void)minimizableContextDidMaximizeWithSharedObject:(id)object;
- (void)minimizableContextDidMinimizeWithSharedObject:(id)object;
- (id)minimizableContextSharedObject;
- (void)customizeAnimationStartProperties;
- (void)customizeAnimationEndProperties;
- (void)customizeAnimationCancelledProperties;
- (BOOL)shouldSupportMinimizedViewExpandedState;
- (struct CGSize { double x0; double x1; })preferredContentSizeForMinimizedViewState:(unsigned long long)state;
- (void)minimizedViewTappedForState:(unsigned long long)state;
- (void)customizeMinimizedViewAnimationStartPropertiesForState:(unsigned long long)state;
- (void)customizeMinimizedViewAnimationEndPropertiesForState:(unsigned long long)state;
- (void)customizeMinimizedViewAnimationCancelledPropertiesForState:(unsigned long long)state;
- (void)minimizedViewSwipedToDismiss;
- (void)videoCallCaptureControlsViewDidTapVideoButton:(id)button selected:(BOOL)selected;
- (void)videoCallCaptureControlsViewDidTapAudioButton:(id)button selected:(BOOL)selected;
- (void)videoCallCaptureControlsViewDidTapSwitchCameraButton:(id)button;
- (void)videoCallFooterViewControllerDidTapHangUpButton:(id)button;
- (void)videoCallFooterViewControllerDidTapMediaPickerButton:(id)button;
- (void)videoCallFooterViewControllerDidTapReactionButton:(id)button;
- (void)videoCallFooterViewControllerDidTapSpeakerButton:(id)button;
- (void)videoCallFooterViewControllerDidTapScreenSharingButton:(id)button;
- (void)videoCallFooterViewControllerDidTapInCallSettingsButton:(id)button;
- (void)videoCallFooterViewControllerDidTapCloseButton:(id)button;
- (void)screenSharingNuxViewControllerDidTapContinue:(id)continue;
- (void)videoCallFooterViewControllerDidTapPeopleButton:(id)button;
- (unsigned long long)videoCallFooterViewControllerGetActiveCaptureDevice;
- (void)videoCallHeaderViewDidTapMinimizeButton:(id)button;
- (void)videoCallHeaderViewDidTapSwitchCameraButton:(id)button;
- (void)videoCallHeaderViewDidBeginLongPressOnSwitchCameraButton:(id)button;
- (void)videoCallHeaderViewDidTapHangUpButton:(id)button;
- (void)videoCallHeaderViewDidTapSpeakerButton:(id)button;
- (void)videoCallHeaderViewDidTapPeopleButton:(id)button;
- (void)videoCallHeaderViewDidTapSettingsButton:(id)button;
- (void)videoCallHeaderViewDidTapVideoButton:(id)button;
- (void)ringOverlayViewControllerDidShowRingScreen:(id)screen;
- (void)ringOverlayViewControllerDidShowEndScreen:(id)screen withMessageLabel:(long long)label;
- (void)ringOverlayViewControllerDidTimeout:(id)timeout;
- (void)ringOverlayViewControllerDidTapCancelButton:(id)button;
- (void)ringOverlayViewControllerDidTapCallAgainButton:(id)button;
- (void)ringOverlayViewControllerDidTapBugReportButton:(id)button;
- (void)peopleManagementViewControllerWillUpdateJoinRequestSettings:(id)settings joinRequestsEnabled:(BOOL)enabled completion:(id /* block */)completion;
- (void)peopleManagementViewControllerDidUpdateJoinRequestSettings:(id)settings joinRequestsEnabled:(BOOL)enabled;
- (void)endOverlayViewControllerShouldDismiss:(id)dismiss;
- (void)endOverlayViewControllerDidTapCallAgain:(id)again;
- (void)endOverlayViewControllerDidTapBugReport:(id)report;
- (void)didNavigateToVideoDisabledModule;
- (void)didNavigateToVideoEnabledModule;
- (void)didNavigateToViewController:(id)controller;
- (void)videoCallViewSidebarDidShow:(id)show;
- (void)reactionTrayViewControllerDidTapBackground:(id)background;
- (void)reactionTrayViewController:(id)controller didTapEmoji:(id)emoji;
- (void)reactionTrayViewController:(id)controller didTapToggleButtonWithShouldRaiseHand:(BOOL)hand;
- (void)reactionTrayViewControllerDidTapOverreact:(id)overreact;
- (BOOL)prefersStatusBarHidden;
- (id)childViewControllerForStatusBarHidden;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (double)partialModalSheetViewControllerAlphaForDimmingView:(id)view;
- (id)partialModalSheetViewController:(id)controller delegateView:(id)view hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (void)coWatchCoordinator:(id)coordinator didTapOwner:(id)owner;
- (void)coWatchCoordinator:(id)coordinator willStartPlayingByActor:(id)actor tabSource:(id)source;
- (void)coWatchCoordinator:(id)coordinator didChangeMediaByActor:(id)actor mediaType:(long long)type productType:(unsigned long long)type isNewMedia:(BOOL)media isFirstMedia:(BOOL)media isLocal:(BOOL)local adminMessage:(id)message;
- (void)coWatchCoordinator:(id)coordinator didChangeDominantColors:(id)colors;
- (void)coWatchCoordinatorWillStopPlaying:(id)playing;
- (void)coWatchCoordinatorDidStopPlaying:(id)playing;
- (void)coWatchCoordinatorDidStartReporting:(id)reporting;
- (void)coWatchCoordinatorDidFinishReporting:(id)reporting;
- (void)coWatchDidTapOnMedia;
- (void)contentSelectionCoordinatorDidSelectMedia:(id)media tabSource:(id)source;
- (void)contentSelectionCoordinatorDidRequestNavigation:(id)navigation shouldMinimize:(BOOL)minimize;
- (void)contentSelectionCoordinatorDidDismissSelectionFlow;
- (void)contentSelectionCoordinatorDidStartScreenshare;
- (void)videoCallService:(id)service didReceiveNotification:(id)notification withSenderProfileImageURL:(id)url;
- (void)captureCoordinatorDidPauseVideo:(id)video;
- (void)captureCoordinatorDidResumeVideo:(id)video flipButtonVisibility:(BOOL)visibility;
- (void)captureCoordinatorDidPauseAudio:(id)audio;
- (void)captureCoordinatorDidResumeAudio:(id)audio;
- (void)captureCoordinatorDidUpdateCameraPosition:(id)position;
- (BOOL)arEffectViewControllerDidToggleCowatchOn;
- (void)setCameraFlipButtonVisibility:(BOOL)visibility;
- (void)arEffectViewControllerDidCreateTray:(id)tray;
- (void)arEffectViewControllerWillApplyAvatarEffect;
- (void)arEffectViewControllerDidApplyEffectWithMode:(unsigned long long)mode sliderValue:(double)value;
- (void)arEffectViewControllerDidApplyEffectWithMode:(unsigned long long)mode;
- (void)arEffectViewControllerDidRemoveEffectWithMode:(unsigned long long)mode;
- (void)arEffectViewControllerDidPresentFullScreenModal:(id)modal;
- (void)arEffectViewControllerDidDismissFullScreenModal:(id)modal;
- (void)arEffectViewControllerDidPresentMiniGallery:(id)gallery;
- (void)arEffectViewControllerDidDismissMiniGallery:(id)gallery;
- (void)arEffectViewControllerDidDismissEnvironmentsGallery:(id)gallery;
- (void)arEffectViewControllerDidInteractWithEffectTray:(id)tray;
- (void)arEffectViewController:(id)controller didSelectItemWithIndex:(long long)index isManualSelection:(BOOL)selection;
- (void)showEffectTextInstructionsOnSelfView:(id)view;
- (void)hideEffectInstructionsOnSelfView;
- (void)setShowingSelfViewFullScreenOnly:(BOOL)only;
- (void)hideTrayAndShowSideBarWithFooterViews;
- (void)setSidebarVisibility:(BOOL)visibility;
- (id)videoViewController;
- (void)arEffectViewControllerDidToggleVideoOn:(id)on;
- (void)displayApplyingMultipeerEffectFromInitiatorWithId:(id)id initiatorName:(id)name effectName:(id)name effectThumbnailUrlString:(id)string;
- (void)displayCallLayoutEffectRemovedFromInitiatorName:(id)name effectName:(id)name effectThumbnailURLString:(id)urlstring;
- (BOOL)arEffectViewControllerIsCallE2eeMandated;
- (BOOL)arEffectViewControllerIsAREffectEnabledInCall;
- (void)arEffectViewControllerDidToggleAvatarMode:(BOOL)mode;
- (void)arEffectViewControllerUpdatedTransparentAvatarURL:(id)url;
- (void)arEffectViewControllerDisplayFLMMessage:(BOOL)flmmessage initiatorName:(id)name;
- (void)arEffectViewControllerDisplayTouchupPersistenceMessage;
- (void)inCallSettingsViewControllerDidTapVideoEffectsButton:(id)button;
- (void)videoCallSidebarDidTapButton:(unsigned long long)button;
- (void)videoCallSidebarSliderDidChangeValue:(unsigned long long)value value:(double)value andSliderState:(BOOL)state;
- (void)videoCallSidebarDidToggleType:(unsigned long long)type;
- (void)videoCallSidebarSliderDidLongPress;
- (void)videoCallSidebarDidTapOpenCloseButton;
- (void)coWatchUpgradeInteropBannerUpsellViewDidTapLearnMoreButton:(id)button;
- (void)presentUnknownJoinerNoticeForUserId:(id)id;
- (void)cameraPermissionCoordinatorDidEnablePermissions:(unsigned long long)permissions;
- (void)cameraPermissionCoordinatorDidCancel;
- (void)_didDragToDismissOmniGrid;
- (void)zoomController:(id)controller didChangeZoomScaleBy:(double)by;
- (void)captureButtonDidZoomScale:(double)scale;
- (void)zoomControllerDidStopZoom:(id)zoom withGestureRecognizer:(id)recognizer;
- (void)omniGridView:(id)view didTapWithRecognizer:(id)recognizer inSelfView:(BOOL)view;
- (void)omniGridView:(id)view didDoubleTapWithRecognizer:(id)recognizer inSelfView:(BOOL)view;
- (void)omniGridView:(id)view didTapFloatingSelfView:(id)view;
- (void)omniGridViewDidTapFloatingParticipantsView:(id)view;
- (void)videoStreamsViewControllerDidTapMiniGalleryParticipants:(id)participants;
- (void)videoStreamsViewControllerDidTapEffectsButton:(id)button;
- (void)videoStreamsViewControllerDidUpdateToDominateLayout:(id)layout dominantItemOriginY:(double)y nondominantItemOriginY:(double)y;
- (void)videoStreamsViewControllerWillUpdateGrid:(id)grid;
- (double)currentFooterHeight;
- (void)videoRenderController:(id)controller videoSizeChangedForUserIdentifier:(id)identifier videoSize:(struct CGSize { double x0; double x1; })size;
- (void)didToggleFullscreenSearch:(BOOL)search;
- (void)onConnectedAudioDevice:(id)device;
- (void)bugReportDidBegin;
- (id)bugReportPresentingViewController;
- (void)bugReportDidFinishWithStatus:(BOOL)status;
- (void)stopScreenSharingViewControllerDidTapStopSharing:(id)sharing;
- (void)_onAppDidBecomeActive:(id)active;
@end

#endif /* IGVideoCallViewController_h */
