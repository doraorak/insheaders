//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGDynamicPageLayout2_h
#define IGDynamicPageLayout2_h
@import Foundation;

#include "UICollectionViewLayout.h"
#include "IGDynamicPagingCompatibleLayoutDelegate-Protocol.h"
#include "IGDynamicPagingCompatibleLayoutType-Protocol.h"

@interface IGDynamicPageLayout2 : UICollectionViewLayout<IGDynamicPagingCompatibleLayoutType> { // (Swift)
  /* instance variables */
   invalidatedComponents;
   activeScrollDirection;
   currentUpdateSet;
   layoutState;
   attributesPriorToCurrentUpdate;
   attributeCache;
   anchoredPageIndex;
   $__lazy_storage_$_metricsCache;
}

@property (nonatomic, weak) NSObject<IGDynamicPagingCompatibleLayoutDelegate> *delegate;
@property (nonatomic, readonly) double fractionalSectionIndex;
@property (nonatomic, readonly) double fractionalPageIndex;
@property (nonatomic, readonly) long long projectedPageIndex;
@property (nonatomic, readonly) long long projectedSectionIndex;
@property (nonatomic, readonly) double normalizedVerticalOffset;
@property (nonatomic, readonly) struct CGSize { double x0; double x1; } collectionViewContentSize;

/* class methods */
+ (Class)layoutAttributesClass;
+ (Class)invalidationContextClass;

/* instance methods */
- (double)heightForPageAtSectionIndex:(long long)index;
- (double)heightForSectionAtIndex:(long long)index;
- (BOOL)isCompactPageAtSectionIndex:(long long)index;
- (BOOL)isCompactPageAtIndex:(long long)index;
- (double)pageOffsetAtIndex:(long long)index;
- (double)pageOffsetForItemAtSectionIndex:(long long)index;
- (long long)firstSectionAtPageIndex:(long long)index;
- (long long)sectionCountAtPageIndex:(long long)index;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })change;
- (BOOL)shouldInvalidateLayoutForPreferredLayoutAttributes:(id)attributes withOriginalAttributes:(id)attributes;
- (id)invalidationContextForBoundsChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })change;
- (id)invalidationContextForPreferredLayoutAttributes:(id)attributes withOriginalAttributes:(id)attributes;
- (void)invalidateLayoutWithContext:(id)context;
- (void)prepareForCollectionViewUpdates:(id)updates;
- (void)prepareLayout;
- (void)finalizeCollectionViewUpdates;
- (id)layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)layoutAttributesForItemAtIndexPath:(id)path;
- (struct CGPoint { double x0; double x1; })targetContentOffsetForProposedContentOffset:(struct CGPoint { double x0; double x1; })offset withScrollingVelocity:(struct CGPoint { double x0; double x1; })velocity;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)path;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)path;
- (id)init;
- (id)initWithCoder:(id)coder;
@end

#endif /* IGDynamicPageLayout2_h */
