//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FB_RTCVideoEncoderH265_h
#define FB_RTCVideoEncoderH265_h
@import Foundation;

#include "FB_RTCVideoCodecInfo.h"
#include "FB_RTCVideoEncoder-Protocol.h"

@class NSString;
@protocol {unique_ptr<webrtc_legacy::BitrateAdjuster, std::default_delete<webrtc_legacy::BitrateAdjuster>>="__ptr_"{__compressed_pair<webrtc_legacy::BitrateAdjuster *, std::default_delete<webrtc_legacy::BitrateAdjuster>>="__value_"^{BitrateAdjuster}}}, {vector<unsigned char, std::allocator<unsigned char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::allocator<unsigned char>>="__value_"*}};

@interface FB_RTCVideoEncoderH265 : NSObject<FB_RTCVideoEncoder> {
  /* instance variables */
  FB_RTCVideoCodecInfo *_codecInfo;
  struct unique_ptr<webrtc_legacy::BitrateAdjuster, std::default_delete<webrtc_legacy::BitrateAdjuster>> { struct __compressed_pair<webrtc_legacy::BitrateAdjuster *, std::default_delete<webrtc_legacy::BitrateAdjuster>> { struct BitrateAdjuster *__value_; } __ptr_; } _bitrateAdjuster;
  unsigned int _targetBitrateBps;
  unsigned int _encoderBitrateBps;
  unsigned long long _packetizationMode;
  struct __CFString * _profile;
  id /* block */ _callback;
  int _width;
  int _height;
  struct OpaqueVTCompressionSession * _compressionSession;
  struct __CVPixelBufferPool * _pixelBufferPool;
  unsigned long long _mode;
  struct vector<unsigned char, std::allocator<unsigned char>> { char *__begin_; char *__end_; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char *__value_; } __end_cap_; } _frameScaleBuffer;
  float _dataRateLimitMultiplier;
  int _maxKeyFrameIntervalDuration;
  int _maxKeyFrameInterval;
  BOOL _disableMaxKeyFrameInterval;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithCodecInfo:(id)info;
- (void)dealloc;
- (long long)startEncodeWithSettings:(id)settings numberOfCores:(int)cores;
- (long long)encode:(id)encode codecSpecificInfo:(id)info frameTypes:(id)types;
- (void)setCallback:(id /* block */)callback;
- (int)setBitrate:(unsigned int)bitrate framerate:(unsigned int)framerate;
- (long long)releaseEncoder;
- (unsigned int)pixelFormatOfFrame:(id)frame;
- (BOOL)resetCompressionSessionIfNeededWithFrame:(id)frame;
- (int)resetCompressionSessionWithPixelFormat:(unsigned int)format;
- (void)configureCompressionSession;
- (void)destroyCompressionSession;
- (id)implementationName;
- (void)setBitrateBps:(unsigned int)bps;
- (void)setEncoderBitrateBps:(unsigned int)bps;
- (void)frameWasEncoded:(int)encoded flags:(unsigned int)flags sampleBuffer:(struct opaqueCMSampleBuffer *)buffer codecSpecificInfo:(id)info width:(int)width height:(int)height renderTimeMs:(long long)ms timestamp:(unsigned int)timestamp rotation:(long long)rotation;
- (id)scalingSettings;
- (struct __CFString *)getEncodeProfile:(id)profile;
- (id)getEncoderName;
- (unsigned int)getCodecType;
- (BOOL)enableRealtime;
- (BOOL)supportsLtr;
- (void)onLtrAck:(long long)ack;
@end

#endif /* FB_RTCVideoEncoderH265_h */
