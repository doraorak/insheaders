//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGSundialMediaCompositionEditingViewController_h
#define IGSundialMediaCompositionEditingViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAlertHUDHandling-Protocol.h"
#include "IGCameraEffectMiniGalleryDataFetcher.h"
#include "IGCoreTextLinkHandler-Protocol.h"
#include "IGPanavisionReelsXPostingIntegrationHelper.h"
#include "IGPartialModalSheetListener-Protocol.h"
#include "IGStoryPostCaptureCameraTrayViewController.h"
#include "IGStoryPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "IGSundialAudioBrowserViewController.h"
#include "IGSundialAudioEditorBrowserViewController.h"
#include "IGSundialDataRepositoryListener-Protocol.h"
#include "IGSundialMediaCompositionEditingViewControlling-Protocol.h"
#include "IGSundialPillLabel.h"
#include "IGSundialPlayPauseIndicatorView.h"
#include "IGSundialPostCapturePerformanceLogger.h"
#include "IGSundialPostcaptureEffectNativeUIHandler.h"
#include "IGSundialSingleClipVideoTimelineEditor.h"
#include "IGSundialStickerEditingOverlayView.h"
#include "IGSundialViewerOverlayPreviewView.h"
#include "IGUserAvatarStatusListener-Protocol.h"
#include "METASwipableFilterMediaViewTimedFiltersDelegate-Protocol.h"
#include "_TtC21IGSundialMemoryLogger21IGSundialMemoryLogger.h"
#include "_TtC24IGSundialStackedTimeline38IGSundialStackedTimelineToolsQPLLogger.h"
#include "_TtC24IGSundialStackedTimeline38IGSundialStackedTimelineViewController.h"
#include "_TtC24IGSundialStackedTimeline57IGSundialStackedTimelineTextToSpeechOptionsViewController.h"
#include "_TtP24IGSundialStackedTimeline46IGSundialStackedTimelineViewControllerDelegate_-Protocol.h"
#include "_TtP24IGSundialStackedTimeline65IGSundialStackedTimelineTextToSpeechOptionsViewControllerDelegate_-Protocol.h"
#include "_TtP24IGSundialStackedTimeline68IGSundialStackedTimelineViewControllerVoiceoverRecorderToolProviding_-Protocol.h"
#include "_TtP25IGSundialDataStorageLayer28IGSundialDataRepositoryStore_-Protocol.h"

@class CTAudioEnhancementLogger, FBModelLoader, IGAREffectModel, IGAsyncTask, IGAudioBrowserCameraLogger, IGMenu, IGPartialModalSheetViewController, IGPostCaptureARController, IGStoryTextWrapperView, IGSundialAudioTrackClip, IGSundialComposition, IGSundialVideoClip, IGTransitionFilterRemoteAssets, IGUserSession, METAAudioTrackPlayer, NSArray, NSMutableDictionary, NSString, NSTimer, UIView, _TtC25METAMediaFilterParameters25METAMediaFilterParameters;
@protocol IGSpeechSynthesizerEngine, IGSundialMediaCompositionEditingViewControllerDelegate, IGViewController<IGStoryMediaCompositionEditingViewControlling, UIView<IGStoryMediaCompositionEditingControlsOverlayViewProtocol, UIView<IGSundialEditingControlsOverlayViewProtocol;

@interface IGSundialMediaCompositionEditingViewController : IGViewController<IGCoreTextLinkHandler, IGPartialModalSheetListener, IGUserAvatarStatusListener, METASwipableFilterMediaViewTimedFiltersDelegate, _TtP24IGSundialStackedTimeline46IGSundialStackedTimelineViewControllerDelegate_, _TtP24IGSundialStackedTimeline68IGSundialStackedTimelineViewControllerVoiceoverRecorderToolProviding_, IGSundialDataRepositoryListener, _TtP24IGSundialStackedTimeline65IGSundialStackedTimelineTextToSpeechOptionsViewControllerDelegate_, IGSundialMediaCompositionEditingViewControlling> {
  /* instance variables */
  IGUserSession *_userSession;
  NSObject<_TtP25IGSundialDataStorageLayer28IGSundialDataRepositoryStore_> *_sundialStorageRepo;
  IGSundialComposition *_cachedComposition;
  IGViewController<IGStoryMediaCompositionEditingViewControlling> *_mediaCompositionEditingViewController;
  IGSundialViewerOverlayPreviewView *_overlayPreviewView;
  BOOL _isSavingMediaToCameraRoll;
  IGSundialSingleClipVideoTimelineEditor *_singleClipVideoTimelineEditor;
  NSArray *_videoClipsBeforeOpeningVideoTimelineEditor;
  BOOL _wasPlayingWhenVideoTimelineEditorBeganScrubbing;
  BOOL _wasPlayingWhenVideoTimelineEditorBeganTrimming;
  BOOL _playbackRateBeforeOpeningAudioBrowser;
  double _videoTimelineZoomScale;
  IGSundialPlayPauseIndicatorView *_playPauseView;
  BOOL _playbackIntentionallyPaused;
  NSMutableDictionary *_stickerToTimeRangeBeforeEditsMap;
  BOOL _isEditingTimedStickers;
  BOOL _isAddingTimedElementFromPostCapture;
  BOOL _isEditingTextFromPostCapture;
  long long _prevStickersCount;
  IGSundialStickerEditingOverlayView *_stackedTimelineStickerEditingOverlayView;
  UIView *_stackedTimelineSelectedSticker;
  UIView *_selectedTextSticker;
  IGSundialAudioTrackClip *_stackedTimelineReplacingAudioTrackClip;
  IGStoryPostCaptureCameraTrayViewController *_cameraTrayViewController;
  IGAREffectModel *_previouslySelectedEffect;
  IGCameraEffectMiniGalleryDataFetcher *_effectMiniGalleryDataFetcher;
  NSString *_loggingSessionID;
  NSTimer *_loadingIndicatorDelayTimer;
  long long _clipsTrimmingIndex;
  IGMenu *_timedObjectsContextMenu;
  NSObject<IGSpeechSynthesizerEngine> *_speechSynthesizer;
  NSObject<IGAlertHUDHandling> *_textToSpeechLoadingPresenter;
  METAAudioTrackPlayer *_textToSpeechVoiceTrackPlayer;
  unsigned long long _selectedVoice;
  IGTransitionFilterRemoteAssets *_transitionAssets;
  BOOL _isCameraEffectTrayVisible;
  IGPartialModalSheetViewController *_textToSpeechBottomSheet;
  IGPartialModalSheetViewController *_voiceoverBottomSheet;
  IGPartialModalSheetViewController *_panavisionNuxBottomSheet;
  BOOL _didLogPanavisionNuxDismiss;
  IGSundialPillLabel *_pillTimeLabel;
  IGSundialPillLabel *_centerToastActionIndicatorLabel;
  NSArray *_postEffectsBeforeTrim;
  IGSundialPostcaptureEffectNativeUIHandler *_nativeUIHandler;
  IGAsyncTask *_audioCatalogForSundialRequest;
  IGAsyncTask *_audioTrackTask;
  IGPanavisionReelsXPostingIntegrationHelper *_integrationHelper;
  IGSundialPostCapturePerformanceLogger *_perfLogger;
  IGAudioBrowserCameraLogger *_audioBrowserLogger;
  _TtC24IGSundialStackedTimeline38IGSundialStackedTimelineToolsQPLLogger *_stackedTimelineToolsLogger;
  BOOL _supportHDR;
  BOOL _drawingIsActive;
  BOOL _edr;
  BOOL _returnToStackedTimelineOnChange;
  BOOL _isEditingMusicSticker;
  BOOL _didPostcapFinishLoading;
  BOOL _didPostcapViewAppear;
  BOOL _shouldHandleFrameRender;
  double _sourceVideoVolumeLevelBeforeAddingAudio;
  BOOL _audioTrimEnabled;
  IGSundialAudioEditorBrowserViewController *_persistentAudioEditorBrowser;
  IGSundialAudioBrowserViewController *_persistentAudioBrowser;
  struct METAMediaTransform { struct CGPoint { double x; double y; } anchorPoint; struct CGPoint { double x; double y; } offsetFromCenter; double scale; double rotation; } _initialPostCaptureTransform;
  struct METAMediaTransform { struct CGPoint { double x; double y; } anchorPoint; struct CGPoint { double x; double y; } offsetFromCenter; double scale; double rotation; } _initialSelectedClipTransform;
  struct METAMediaTransform { struct CGPoint { double x; double y; } anchorPoint; struct CGPoint { double x; double y; } offsetFromCenter; double scale; double rotation; } _cachedPostCaptureTransform;
  BOOL _isInClipTransformMode;
  _TtC25METAMediaFilterParameters25METAMediaFilterParameters *_previewMediaFilterParameters;
  NSArray *_audioTrackClipsBeforeSoundSync;
  CTAudioEnhancementLogger *_audioEnhancementLogger;
  FBModelLoader *_audioEnhancentModelDownloader;
  _TtC21IGSundialMemoryLogger21IGSundialMemoryLogger *_memoryPerfLogger;
  IGStoryTextWrapperView *_cachedTextWrapperView;
  struct CGPoint { double x; double y; } _lastTouchLocation;
  _TtC24IGSundialStackedTimeline57IGSundialStackedTimelineTextToSpeechOptionsViewController *_newTextToSpeechViewController;
  BOOL _shouldDismissFlickeringPreventingSnapshot;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) IGSundialComposition *composition;
@property (readonly, nonatomic) IGViewController<IGStoryMediaCompositionEditingViewControlling> *mediaEditor;
@property (nonatomic) double timelineEditorPresentationProgress;
@property (readonly, nonatomic) IGSundialVideoClip *stitchedPostCaptureVideo;
@property (nonatomic) BOOL shouldPlayMediaOnAppear;
@property (weak, nonatomic) _TtC24IGSundialStackedTimeline38IGSundialStackedTimelineViewController *stackedTimelineVC;
@property (weak, nonatomic) NSObject<IGSundialMediaCompositionEditingViewControllerDelegate> *compositionEditingDelegate;
@property (nonatomic) BOOL wasFirstFrameRendered;
@property (readonly, nonatomic) BOOL isInStackedTimelineFullscreenEditMode;
@property (readonly, nonatomic) IGPostCaptureARController *postcaptureAREffectController;
@property (nonatomic) BOOL shouldUpdateTimelineOnCompositionChange;
@property (weak, nonatomic) NSObject<IGStoryPostCaptureEditingViewControllerDelegate> *delegate;
@property (readonly, nonatomic) UIView<IGStoryMediaCompositionEditingControlsOverlayViewProtocol> *editingControlsOverlayView;
@property (retain, nonatomic) NSArray *captureToolsForLogging;
@property (nonatomic) unsigned long long userFlowInstanceID;
@property (readonly, nonatomic) NSArray *mediaCompositions;

/* instance methods */
- (id)initWithComposition:(id)composition overlayView:(id)view analyticsModule:(id)module perfLoggerContext:(id)context userSession:(id)session supportHDR:(BOOL)hdr;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)play;
- (void)pause;
- (void)viewDidLayoutSubviews;
- (id)childViewControllerForStatusBarStyle;
- (id)childViewControllerForStatusBarHidden;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (BOOL)prefersNavigationBarHidden;
- (long long)preferredTabBarBehavior;
- (void)mediaCompositionEditingViewController:(id)controller validateInteractiveElementsWithErrorHandler:(id /* block */)handler;
- (void)mediaCompositionEditingViewController:(id)controller didFinishMagicModEditing:(id)editing;
- (void)mediaCompositionEditingViewController:(id)controller willBeginPositioningSticker:(id)sticker;
- (void)mediaCompositionEditingViewController:(id)controller didFinishPositioningSticker:(id)sticker deleted:(BOOL)deleted;
- (void)mediaCompositionEditingViewController:(id)controller didAddTextSticker:(id)sticker;
- (void)mediaCompositionEditingViewController:(id)controller didDeleteSticker:(id)sticker deleteVariant:(long long)variant;
- (void)mediaCompositionEditingViewControllerDidTapEditBoomerangButton:(id)button;
- (void)mediaCompositionEditingViewController:(id)controller didTapMusicSticker:(id)sticker;
- (void)mediaCompositionEditingViewControllerDrawingDidAppear:(id)appear;
- (void)mediaCompositionEditingViewControllerDrawingDidDismiss:(id)dismiss;
- (void)mediaCompositionEditingViewController:(id)controller didAddJoinChatSticker:(id)sticker;
- (void)mediaCompositionEditingViewController:(id)controller didChangeBoomerangSelectedFormatVariant:(id)variant;
- (void)mediaCompositionEditingViewController:(id)controller didBeginEditingTextView:(id)view;
- (void)mediaCompositionEditingViewController:(id)controller didFinishEditingTextView:(id)view;
- (void)mediaCompositionEditingViewController:(id)controller stickerCreationViewController:(id)controller willFinishEditingSticker:(id)sticker;
- (void)mediaCompositionEditingViewController:(id)controller didFinishEditingSticker:(id)sticker;
- (void)mediaCompositionEditingViewController:(id)controller willDisplayViewerPreviewFooter:(id)footer;
- (void)mediaCompositionEditingViewController:(id)controller effectivePlaybackRateDidChange:(double)change;
- (void)mediaCompositionEditingViewController:(id)controller didLongPressBackgroundWithBoomerangConversionSupport:(BOOL)support;
- (void)mediaCompositionEditingViewController:(id)controller didTapLayerForTimedObject:(id)object;
- (void)mediaCompositionEditingViewController:(id)controller didTapSticker:(id)sticker;
- (BOOL)mediaCompositionEditingViewController:(id)controller shouldHandleStickerEdits:(id)edits;
- (void)mediaCompositionEditingViewControllerDidFinishPositioningAndResizingMedia:(id)media;
- (BOOL)mediaCompositionEditingViewControllerIsInClipTransformMode:(id)mode;
- (struct METAMediaTransform { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; })mediaCompositionEditingViewController:(id)controller additionalMediaTransformAtMediaTime:(double)time;
- (void)mediaCompositionEditingViewController:(id)controller didTapMoreForTimedObject:(id)object;
- (void)mediaCompositionEditingViewControllerDidDismissCurrentMedia:(id)media;
- (void)mediaCompositionEditingViewControllerPlaybackDidFail:(id)fail withError:(id)error isFatalError:(BOOL)error;
- (BOOL)mediaCompositionEditingViewControllerShouldLoadStandaloneTracker:(id)tracker;
- (BOOL)mediaCompositionEditingViewController:(id)controller shouldBeginPositioningAndResizingMediaWithGesture:(id)gesture;
- (void)mediaCompositionEditingViewControllerDidBeginPositioningAndResizingMedia:(id)media;
- (void)multiEditCompositionThumbnailTray:(id)tray didTapThumbnailAtIndex:(long long)index;
- (void)mediaCompositionEditingViewControllerDidTapAudioButton:(id)button shouldShowBottomSheet:(BOOL)sheet;
- (void)mediaCompositionViewDidDraw:(id)draw atPlayBackTime:(double)time;
- (void)mediaCompositionEditingViewController:(id)controller didFinishEditingCaption:(id)caption;
- (void)mediaCompositionEditingViewController:(id)controller didTapEditTextOnPostCapture:(id)capture;
- (void)mediaCompositionEditingViewController:(id)controller cutoutVideoStickerIsLoaded:(BOOL)loaded;
- (void)mediaCompositionEditingViewController:(id)controller didTapTextToSpeechIconWith:(unsigned long long)with;
- (void)mediaCompositionEditingViewController:(id)controller preselectHighlightedCreationTool:(id)tool;
- (void)mediaCompositionEditingViewControllerDidRequestAddClips:(id)clips;
- (void)mediaCompositionEditingViewControllerDidSetEffect:(id)effect;
- (void)mediaEditingViewControllerDidChangeChangeCurrentMediaCompositionIndex:(id)index;
- (void)mediaCompositionEditingViewController:(id)controller didUpdateAREffect:(BOOL)areffect;
- (void)mediaCompositionEditingViewController:(id)controller didPlayPauseMedia:(BOOL)media;
- (BOOL)mediaCompositionEditingViewControllerShouldResumePlayingMedia:(id)media;
- (void)sundialStackedTimelineTextToSpeechViewControllerDidSelectVoice:(unsigned long long)voice completionHandler:(id /* block */)handler;
- (void)sundialStackedTimelineTextToSpeechViewControllerDidTapDoneWithVoice:(unsigned long long)voice;
- (void)sundialStackedTimelineTextToSpeechViewControllerDidTapCancelWithVoice:(unsigned long long)voice;
- (void)textToSpeechViewController:(id)controller didUpdateVoice:(unsigned long long)voice;
- (void)mediaEditingViewControllerDidEnterTextEditingMode:(id)mode entryPoint:(long long)point;
- (void)mediaEditingViewControllerDidExitTextEditingMode:(id)mode text:(id)text mentionCount:(long long)count hashtagCount:(long long)count;
- (void)mediaEditingViewControllerDidChangeTextColor:(id)color colorSource:(long long)source color:(id)color;
- (void)mediaEditingViewControllerDidToggleTextEffect:(id)effect emphasisType:(long long)type isAppliedOnFullCaption:(BOOL)caption;
- (void)mediaEditingViewControllerDidToggleTextAnimation:(id)animation textFormatName:(id)name;
- (void)mediaEditingViewControllerDidToggleColorPickerFormatPickerButton:(id)button formatPickerSelected:(BOOL)selected;
- (void)mediaEditingViewControllerDidSelectTextAlignment:(id)alignment alignmentString:(id)string;
- (void)mediaEditingViewControllerDidSelectTextFormat:(id)format formatString:(id)string isNewlyCreated:(BOOL)created;
- (void)mediaEditingViewControllerEnterSelectTextFormat:(id)format;
- (void)mediaEditingViewController:(id)controller didApplyColorFilter:(id)filter;
- (void)mediaEditingViewController:(id)controller userAddedTimedObjectToCurrentComposition:(id)composition shouldLogApplySticker:(BOOL)sticker;
- (void)mediaEditingViewController:(id)controller userRemovedTimedObjectFromCurrentComposition:(id)composition deleteVariant:(long long)variant;
- (void)mediaEditingViewControllerDidMakeSignificantEdit:(id)edit;
- (void)mediaEditingViewController:(id)controller userDidChangeSelectedStateForTimedObject:(id)object;
- (void)mediaCompositionEditingViewController:(id)controller didBeginChangingSelectedRangeForTimedObject:(id)object;
- (void)mediaCompositionEditingViewController:(id)controller didChangeSelectedRangeForTimedObject:(id)object;
- (void)mediaCompositionEditingViewController:(id)controller didEndChangingSelectedRangeForTimedObject:(id)object;
- (void)mediaEditingViewController:(id)controller userTappedTimedObject:(id)object;
- (void)mediaCompositionEditingViewController:(id)controller didPlayVideoToTime:(double)time;
- (id)mediaCompositionEditingViewController:(id)controller sectionControllerConfigForTimedObject:(id)object;
- (void)updateHDRComposition;
- (void)_didTapEditTimedStickersModeCancelButton:(id)button;
- (void)_didTapEditTimedStickersModeDoneButton:(id)button;
- (void)logTextStylesMetadata;
- (void)_karaokeCaptionsStickerDidBeginLoadingCaptions:(id)captions;
- (void)_karaokeCaptionsStickerDidFinishLoadingCaptions:(id)captions;
- (void)_karaokeCaptionsStickerDidUpdateDisplayedCaptions:(id)captions;
- (id)captions;
- (void)didFinishEditingKaraokeCaptionStickerView:(id)view;
- (void)didEditCaptions:(id)captions;
- (void)didLoadCaptions:(id)captions;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (void)_headerSaveButtonTapped;
- (void)_saveCompositionToCameraRoll;
- (void)_didTapEditButton:(id)button;
- (void)showTimeSrubberForTime:(double)time;
- (void)pauseDueToScrubDuringPlayback;
- (void)_didTapAudioButton;
- (void)videoTimelineEditorDidBeginScrubbing:(id)scrubbing;
- (void)videoTimelineEditor:(id)editor didScrubToTime:(double)time;
- (void)videoTimelineEditorDidEndScrubbing:(id)scrubbing;
- (void)videoTimelineEditorDidUpdateVideoClips:(id)clips;
- (void)videoTimelineEditorDidTapCancelButton:(id)button;
- (void)videoTimelineEditorDidTapDoneButton:(id)button;
- (void)stackedTimelineViewControllerLoadAudioEnhancementEffectIfNeeded:(id)needed;
- (void)stackedTimelineVolumeControlViewControllerDidChangeVolume:(id)volume forAudioControlType:(long long)type from:(double)from to:(double)to withClipIdentifier:(id)identifier;
- (void)stackedTimelineVolumeControlViewControllerDidFinishEditing:(id)editing;
- (void)stackedTimelineViewController:(id)controller didChangeVoiceEffectInComposition:(id)composition;
- (void)stackedTimelineViewController:(id)controller playbackIsOutsideOfSelectedClipRange:(BOOL)range;
- (void)stackedTimelineViewControllerPlaybackDidExitSelectedClipRange:(id)range;
- (void)stackedTimelineViewControllerPlaybackDidEnterSelectedClipRange:(id)range;
- (void)stackedTimelineViewControllerDidBeginScrubbing:(id)scrubbing;
- (void)stackedTimelineViewControllerDidEndScrubbing:(id)scrubbing;
- (void)stackedTimelineViewControllerAutoSaveDraft:(id)draft groupName:(unsigned long long)name;
- (void)stackedTimelineViewControllerDidTapUndo:(id)undo;
- (void)stackedTimelineViewControllerDidTapRedo:(id)redo;
- (void)stackedTimelineViewControllerDidRequestPreviewVideoShouldLoop:(BOOL)loop;
- (void)stackedTimelineViewController:(id)controller didScrubToTime:(double)time;
- (void)stackedTimelineViewControllerDidUpdateVideoClipsArray:(id)array clipArray:(id)array transitionArray:(id)array updateCoverPhoto:(BOOL)photo updateAutoSave:(BOOL)save groupName:(unsigned long long)name;
- (void)stackedTimelineViewController:(id)controller didRequestReplaceClipWithInfo:(id)info;
- (void)stackedTimelineViewControllerDidRequestAddClip:(id)clip;
- (void)stackedTimelineViewControllerDidRequestShare:(id)share;
- (void)stackedTimelineViewControllerDidRequestBack:(id)back;
- (void)stackedTimelineViewController:(id)controller didUpdateTransitionArray:(id)array;
- (void)stackedTimelineViewControllerDidUpdateAudioClips:(id)clips groupName:(unsigned long long)name;
- (id)sundialVoiceoverRecorderToolFor:(id)for;
- (void)stackedTimelineViewControllerDidUpdateVoiceoverAudioClips:(id)clips;
- (void)stackedTimelineViewController:(id)controller didUpdateRangeForTimedElement:(id)element editType:(long long)type;
- (void)stackedTimelineViewController:(id)controller didFinishUpdatingRangeForTimedElements:(id)elements shouldSetCurrentPlaybackTimeTo:(double)to;
- (void)stackedTimelineViewController:(id)controller didFinishUpdatingRangeForTimedElement:(id)element shouldSetCurrentPlaybackTimeTo:(double)to;
- (void)stackedTimelineViewControllerDidUpdateTimedElementsLayers:(id)layers;
- (long long)stackedTimelineViewControllerGetNumberOfTransitionEffects:(id)effects;
- (id)stackedTimelineViewControllerRemoteIconImageURL:(id)url at:(long long)at;
- (id)stackedTimelineViewControllerRemoteIconImage:(id)image at:(long long)at;
- (id)stackedTimelineViewControllerDefaultIconImage:(id)image;
- (id)stackedTimelineViewControllerAccessibilityLabel:(id)label at:(long long)at;
- (id)stackedTimelineViewControllerAccessibilityHint:(id)hint at:(long long)at;
- (id)stackedTimelineViewControllerTransitionsIgluFilterName:(id)name at:(long long)at;
- (id)stackedTimelineViewControllerTransitionsUIFilterName:(id)name at:(long long)at;
- (void)stackedTimelineViewController:(id)controller setPlayableRangeStart:(double)start duration:(double)duration playbackStartTime:(double)time forcePlayAfterSetRange:(BOOL)range;
- (void)stackedTimelineViewController:(id)controller didRequestAudioChangeFor:(id)for fromEntrypoint:(long long)entrypoint;
- (void)stackedTimelineViewController:(id)controller didDeleteAudioTrackClip:(id)clip;
- (void)stackedTimelineViewController:(id)controller openAudioLyricsStickerEditorWithAudioTrackClip:(id)clip;
- (void)stackedTimelineViewController:(id)controller didSelectAudio:(id)audio;
- (void)stackedTimelineViewControllerDidDeselectAudio:(id)audio;
- (void)stackedTimelineViewController:(id)controller didDeleteTimedElement:(id)element;
- (void)stackedTimelineViewController:(id)controller didSelectTimedElement:(id)element;
- (void)stackedTimelineViewController:(id)controller didDeselectTimedElement:(id)element;
- (void)stackedTimelineViewController:(id)controller didTapEditTimedElement:(id)element selectTimedElementOnReturn:(BOOL)return;
- (void)stackedTimelineViewController:(id)controller didTapAddTimedElement:(long long)element preloadedTimedElementView:(id)view;
- (void)stackedTimelineViewController:(id)controller didTapEnableSpins:(id)spins;
- (void)stackedTimelineViewController:(id)controller didTapDuplicateTimedElement:(id)element;
- (void)_didTapStackedTimelineStickerEditingDoneButton:(id)button;
- (void)_didTapStackedTimelineStickerEditingAddTextButton:(id)button;
- (void)_didTapStackedTimelineStickerEditingAddStickerButton:(id)button;
- (void)stackedTimelineViewControllerDidTapSaveVideo:(id)video;
- (void)stackedTimelineViewControllerDidTapAREffects:(id)areffects;
- (void)stackedTimelineViewControllerDidTapSoundSync:(id)sync;
- (void)stackedTimelineViewControllerDidTapSoundUnsync:(id)unsync;
- (void)stackedTimelineViewController:(id)controller didTapAddAudioAtEntrypoint:(long long)entrypoint;
- (void)stackedTimelineViewControllerDidUpdateColorFilter:(id)filter currentColorFilterIndex:(long long)index;
- (void)stackedTimelineViewController:(id)controller didTapToPlayTextToSpeechWithTimedElement:(id)element voice:(unsigned long long)voice completionHandler:(id /* block */)handler;
- (void)stackedTimelineViewController:(id)controller didTapToEnableTextToSpeechWithTimedElement:(id)element voice:(unsigned long long)voice completion:(id /* block */)completion;
- (void)logTimelineMetadata;
- (void)audioEditorViewControllerDidDismissViewController:(id)controller;
- (void)audioEditorViewController:(id)controller shouldUpdatePlaybackState:(BOOL)state;
- (void)audioEditorViewControllerDidChangeCompositionVideoVolume:(id)volume fromVolume:(double)volume toVolume:(double)volume;
- (void)audioEditorViewControllerDidChangeCompositionVoiceoverVolume:(id)volume fromVolume:(double)volume toVolume:(double)volume;
- (void)audioEditorViewControllerDidChangeCompositionSoundboardVolume:(id)volume fromVolume:(double)volume toVolume:(double)volume;
- (void)audioEditorViewControllerDidChangeCompositionSelectedAudioVolume:(id)volume toVolume:(double)volume;
- (void)audioEditorViewControllerDidTapRemoveSelectedAudio:(id)audio;
- (void)audioEditorViewControllerDidTapRemoveVoiceover:(id)voiceover;
- (void)audioEditorViewControllerDidTapRemoveSoundboardEffect:(id)effect;
- (void)audioEditorViewControllerDidTapSoundboard:(id)soundboard;
- (void)audioEditorBrowserViewControllerCreateEnhanceAudioEffectIfNeeded:(id)needed;
- (void)audioEditorViewControllerDidTapAddAudio:(id)audio;
- (void)audioEditorViewControllerDidUpdateSoundboardAudioTrack:(id)track withAudioTrack:(id)track;
- (void)audioEditorViewController:(id)controller didChangeCompositionVoiceoverAudioClips:(id)clips;
- (void)audioEditorViewControllerDidUpdateCompositionSelectedAudio:(id)audio;
- (void)audioEditorViewController:(id)controller willPresentAudioEditor:(id)editor visibleDeleteButton:(BOOL)button;
- (void)audioEditorViewController:(id)controller willSkipAudioEditorToAddAudioTrack:(id)track;
- (void)audioEditorViewController:(id)controller didApplyEffectsToAssetAudioInComposition:(id)composition;
- (void)audioEditorViewController:(id)controller didApplyEffectsToVoiceoverInComposition:(id)composition;
- (void)audioEditorBrowserViewController:(id)controller willSkipAudioEditorToAddAudioTrack:(id)track;
- (void)audioEditorBrowserViewController:(id)controller willPresentAudioEditor:(id)editor visibleDeleteButton:(BOOL)button;
- (void)audioEditorBrowserViewController:(id)controller didChangeCompositionVolumeforAudioControlType:(long long)type fromVolume:(double)volume toVolume:(double)volume;
- (void)audioEditorBrowserViewController:(id)controller didChangeVolumeCurveForAudioTrackClipWithIdentifier:(id)identifier toVolumeCurve:(id)curve;
- (void)audioEditorBrowserViewController:(id)controller didRemoveAudioForAudioControlType:(long long)type;
- (void)audioEditorBrowserViewController:(id)controller didApplyEffectsToAssetAudioInComposition:(id)composition;
- (void)audioEditorBrowserViewController:(id)controller multiTrackDidTapAudioTrack:(id)track;
- (void)audioEditorBrowserViewController:(id)controller didApplyEffectsToVoiceoverInComposition:(id)composition;
- (void)audioEditorBrowserViewController:(id)controller didApplySoundSyncInComposition:(id)composition;
- (void)audioEditorBrowserViewController:(id)controller shouldUpdatePlaybackState:(BOOL)state;
- (void)audioEditorBrowserViewController:(id)controller didChangeCompositionVoiceoverAudioClips:(id)clips;
- (void)audioEditorBrowserViewController:(id)controller didUpdateSoundboardAudioTrackWithAudioTrack:(id)track;
- (void)audioEditorBrowserViewControllerDidTapSoundboard:(id)soundboard;
- (void)audioEditorBrowserViewControllerDidTapVoiceover:(id)voiceover;
- (void)audioEditorBrowserViewControllerDidTapVolumeControls:(id)controls;
- (void)audioEditorBrowserViewController:(id)controller didDismissHavingModifiedCompositionAudioTrackClips:(id)clips;
- (void)audioBrowserViewController:(id)controller multiTrackDidTapAudioTrack:(id)track;
- (void)audioBrowserViewController:(id)controller didTapAudioTrack:(id)track context:(struct { id x0; id x1; id x2; id x3; id x4; id x5; id x6; long long x7; long long x8; unsigned long long x9; BOOL x10; })context;
- (void)audioBrowserViewController:(id)controller didSelectAudioTrack:(id)track;
- (long long)numberOfAudioTrackClipsInCompositionFor:(id)for;
- (void)sundialAudioPostCaptureEditorDidTapRemoveAudioButton:(id)button;
- (void)sundialAudioPostCaptureEditorDidTapCancelButton:(id)button;
- (void)sundialAudioPostCaptureEditorDidTapAudioChangeAudioButton:(id)button;
- (void)sundialAudioPostCaptureEditor:(id)editor didTapDoneButtonWithAudioTrackClip:(id)clip initialAudioTrackClip:(id)clip musicSticker:(id)sticker;
- (void)sundialAudioPostCaptureEditor:(id)editor didTapAddToMixButtonWithAudioTrackClip:(id)clip initialAudioTrackClip:(id)clip;
- (void)audioEditorBrowserViewController:(id)controller didUpdatePresentationProgress:(double)progress;
- (void)videoTimelineEditor:(id)editor mightBeginAdjustingAmountTrimmedFromStartOfVideoClipAtIndex:(long long)index;
- (void)videoTimelineEditor:(id)editor mightBeginAdjustingAmountTrimmedFromEndOfVideoClipAtIndex:(long long)index;
- (void)videoTimelineEditor:(id)editor setPlayableRangeStart:(double)start duration:(double)duration;
- (void)videoTimelineEditor:(id)editor didBeginAdjustingAmountTrimmedFromStartOfVideoClipAtIndex:(long long)index;
- (void)videoTimelineEditor:(id)editor didBeginAdjustingAmountTrimmedFromEndOfVideoClipAtIndex:(long long)index;
- (void)videoTimelineEditor:(id)editor didAdjustAmountTrimmedFromStart:(double)start OfVideoClipAtIndex:(long long)index;
- (void)videoTimelineEditor:(id)editor didAdjustAmountTrimmedFromEnd:(double)end OfVideoClipAtIndex:(long long)index;
- (void)videoTimelineEditorDidEndTrimming:(id)trimming;
- (void)slideAndZoomTransitionControllerDidDismiss:(id)dismiss;
- (void)sundialDataRepositoryDidUpdateComposition:(unsigned long long)composition;
- (BOOL)canRespondToGesture:(id)gesture;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })mediaCompositionRegion;
- (void)postCaptureCameraTrayViewControllerDidConfirmSelection:(id)selection;
- (void)postCaptureCameraTrayViewControllerWillPresentMinigallery:(id)minigallery;
- (void)postCaptureCameraTrayViewControllerDidDismissMinigallery:(id)minigallery;
- (void)postCaptureCameraTrayViewController:(id)controller didSelectEffect:(id)effect;
- (void)setEffectTarget:(id)target;
- (void)exitTimelineEditorWithAnimation:(BOOL)animation completion:(id /* block */)completion;
- (void)_didTapCameraButton;
- (void)_didTapHdrButton;
- (void)_didTapCameraEffectButton;
- (void)_handleDismissOfEffectSelection;
- (void)postcaptureEffectNativeUIHandler:(id)uihandler didChangeText:(id)text;
- (void)postcaptureEffectNativeUIHandlerDidExitTextInput:(id)input;
- (void)postcaptureEffectNativeUIHandlerWillExitEditableTextInput:(id)input text:(id)text;
- (id)newViewerOverlayPreviewView;
- (double)overlayPreviewViewXInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })marginPadding;
- (void)setIsLoading:(BOOL)loading withDelay:(double)delay;
- (void)_didTapLearnMoreButton;
- (BOOL)presentClipsTrimmedNuxTooltipIfNeeded;
- (void)coreTextView:(id)view didTapOnString:(id)string URL:(id)url;
- (void)avatarStatusManagerDidCreateAvatar:(id)avatar;
- (void)avatarStatusManager:(id)manager didUpdateAvatarStatus:(long long)status;
- (void)avatarStatusManagerDidDeleteAvatar:(id)avatar;
- (void)avatarStatusManagerDidUpdateAvatar:(id)avatar;
- (void)captionsEffectRequiresData;
- (void)_didTapScaleButton;
- (void)_updateDebugComposition;
- (void)stackedTimelineViewControllerDidEndTrimming:(id)trimming;
- (void)stackedTimelineViewController:(id)controller didAdjustAmountTrimmedFromStart:(double)start ofVideoClipAt:(long long)at;
- (void)stackedTimelineViewControllerDidCancelTrimming:(id)trimming;
- (void)stackedTimelineViewController:(id)controller didAdjustAmountTrimmedFromEnd:(double)end ofVideoClipAt:(long long)at;
- (void)stackedTimelineViewController:(id)controller didAdjustAmountTrimmedFromStart:(double)start amountTrimmedFromEnd:(double)end playbackTime:(double)time ofVideoClipAt:(long long)at;
- (void)stackedTimelineViewController:(id)controller didBeginAdjustingAtIndex:(long long)index playbackTime:(double)time stickerPlaybackTime:(double)time;
- (void)stackedTimelineViewController:(id)controller isAdjustingAtIndex:(long long)index playbackTime:(double)time;
- (void)stackedTimelineViewController:(id)controller didBeginAdjustingAmountTrimmedFromEndOfVideoClipAt:(long long)at;
- (void)stackedTimelineViewController:(id)controller didBeginAdjustingAmountTrimmedFromStartOfVideoClipAt:(long long)at;
- (void)stackedTimelineViewController:(id)controller mightBeginAdjustingAmountTrimmedFromStartOfVideoClipAt:(long long)at;
- (void)stackedTimelineViewController:(id)controller mightBeginAdjustingAmountTrimmedFromEndOfVideoClipAt:(long long)at;
- (void)stackedTimelineViewController:(id)controller playPauseVideoClip:(BOOL)clip;
- (void)stackedTimelineViewController:(id)controller setPlaybackRate:(double)rate time:(double)time;
- (void)stackedTimelineViewControllerWillEnterEditingMode:(id)mode;
- (void)stackedTimelineViewControllerDidEnterEditingMode:(id)mode;
- (void)stackedTimelineViewControllerAddPreviewBorder:(id)border;
- (void)stackedTimelineViewControllerRemovePreviewBorder:(id)border;
- (void)stackedTimelineViewControllerDidFinishExiting:(id)exiting;
- (void)stackedTimelineViewControllerDidEnterTransformMode:(id)mode playbackIsOutsideOfSelectedClipRange:(BOOL)range currentlySelectedClipIndex:(long long)index;
- (void)stackedTimelineViewController:(id)controller saveTransformOnExitWithCurrentlySelectedClipIndex:(long long)index playbackIsOutsideOfSelectedClipRange:(BOOL)range;
- (void)stackedTimelineViewController:(id)controller cancelTransformationOnCurrentlySelectedClipIndex:(long long)index;
- (void)stackedTimelineViewController:(id)controller didChangeMediaFilterParameters:(id)parameters forPreviewOfClipAtIndex:(long long)index;
- (long long)currentColorFilterIndexForStackedTimelineViewController:(id)controller;
- (void)stackedTimelineViewController:(id)controller resetTransformOnCurrentlySelectedClipIndex:(long long)index;
- (void)cleanUpTextAnimatedStickers;
- (void)didDismissCameraHeaderPill:(id)pill;
- (void)bottomSheetViewControllerDidSwipeToDismiss:(id)dismiss;
- (id)timedFilterParametersForTime:(double)time;
- (id)timedFilterChain;
- (void)insertMediaComposition:(id)composition atIndex:(long long)index;
- (void)deleteMediaCompositionAtIndex:(long long)index;
- (void)navigateToMediaCompositionAtIndex:(long long)index animated:(BOOL)animated;
- (void)setupAREffectControllerIfNeededWithEffectModel:(id)model;
- (void)cutoutSticker:(id)sticker isLoaded:(BOOL)loaded;
@end

#endif /* IGSundialMediaCompositionEditingViewController_h */
