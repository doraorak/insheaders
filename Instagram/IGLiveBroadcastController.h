//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGLiveBroadcastController_h
#define IGLiveBroadcastController_h
@import Foundation;

#include "FBVideoBroadcastSessionDelegate-Protocol.h"
#include "FBVideoBroadcastSessionLiveWithDelegate-Protocol.h"
#include "IGAPIClient-Protocol.h"
#include "IGApplicationWillEnterForegroundCriticalEventsListener-Protocol.h"
#include "IGLiveBroadcastLogger.h"
#include "IGLiveBroadcastMonitorService.h"
#include "IGLiveBroadcastSessionLogger.h"
#include "IGLiveReachabilityObserver.h"
#include "IGMwsRealtimeTopicHandlingService.h"
#include "IGStallObserver.h"
#include "IGSubscriptionToken-Protocol.h"
#include "IGUserLauncherSet-Protocol.h"

@class FBTimer, IGLiveSessionConfig, IGRealtimeMqttClient, IGUserSession, NSDate, NSMutableDictionary, NSString;
@protocol FBVideoBroadcastSession><FBVideoBroadcastSwitchableSessionRTCExtensions, IGLiveBroadcastControllerDelegate, IGLiveBroadcastControllerRecordingDelegate, IGLiveRTCAudioController, IGLiveRTCEngine;

@interface IGLiveBroadcastController : NSObject<FBVideoBroadcastSessionDelegate, FBVideoBroadcastSessionLiveWithDelegate, IGApplicationWillEnterForegroundCriticalEventsListener> {
  /* instance variables */
  NSString *_userPk;
  NSObject<IGAPIClient> *_networker;
  NSObject<IGUserLauncherSet> *_launcherSet;
  IGRealtimeMqttClient *_realtimeMqttClient;
  IGMwsRealtimeTopicHandlingService *_mwsRealtimeTopicHandlingService;
  NSObject<IGLiveRTCEngine> *_rtcRoomEngine;
  IGUserSession *_userSession;
  NSObject<IGSubscriptionToken> *_muteStateSubscriptionToken;
  NSObject<IGLiveRTCAudioController> *_rtcAudioController;
  BOOL _isRightsManagementCheckpointed;
  IGStallObserver *_audioStallObserver;
  IGStallObserver *_videoStallObserver;
  long long _status;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _broadcastDuration;
  struct FBVideoBroadcastStreamTimestampGapTracker { struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastAudioPTS; struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastAudioDuration; BOOL _shouldCalculateGap; } _gapTracker;
  BOOL _isSessionPaused;
  NSObject<FBVideoBroadcastSession><FBVideoBroadcastSwitchableSessionRTCExtensions> *_broadcastSession;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _recordingStartPTS;
  double _pauseStartTimestamp;
  FBTimer *_speedTestTimeoutTimer;
  BOOL _hasActiveGuest;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _eimuToIgidMutex;
  NSMutableDictionary *_eimuToIgidDictionary;
  IGLiveBroadcastLogger *_logger;
  IGLiveBroadcastSessionLogger *_sessionLogger;
  IGLiveBroadcastMonitorService *_broadcastMonitor;
  unsigned long long _swapCount;
  IGLiveReachabilityObserver *_reachabilityObserver;
  NSDate *_liveswapEndTime;
  NSObject<IGLiveBroadcastControllerRecordingDelegate> *_recordingDelegate;
}

@property (weak, nonatomic) NSObject<IGLiveBroadcastControllerDelegate> *delegate;
@property (readonly, nonatomic) BOOL isConnected;
@property (readonly, nonatomic) BOOL isBroadcastEnded;
@property (readonly, nonatomic) BOOL isReachable;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } baseTimestamp;
@property (readonly, nonatomic) IGLiveSessionConfig *config;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) double liveswapBitrateMultiplier;

/* instance methods */
- (void)dealloc;
- (id)initWithUserPk:(id)pk mwsRealtimeTopicHandlingService:(id)service networker:(id)networker mqttClient:(id)client launcherSet:(id)set rtcRoomEngine:(id)engine logger:(id)logger userSession:(id)session;
- (id)broadcastId;
- (BOOL)hasActiveGuest;
- (void)resumeSession;
- (void)processAudio:(struct opaqueCMSampleBuffer *)audio;
- (void)processVideo:(struct opaqueCMSampleBuffer *)video;
- (void)processEventMessage:(unsigned long long)message duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration payload:(id)payload;
- (void)processEventMessage:(unsigned long long)message duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration delay:(struct { long long x0; int x1; unsigned int x2; long long x3; })delay payload:(id)payload;
- (void)cameraWillChange;
- (void)cameraDidChange;
- (void)stopDVRIfRunning;
- (void)_onAppDidEnterBackground:(id)background;
- (void)applicationWillEnterForegroundListener;
- (void)_onDidReceiveMemoryWarning:(id)warning;
- (void)broadcastSessionDidSuccessfullyFinishSwap:(id)swap;
- (void)broadcastSessionDidFailToFinishSwap:(id)swap;
- (void)broadcastSessionWillBeginToSwap:(id)swap;
- (void)broadcastSessionDidConnect:(id)connect withSpeedTestStatus:(struct FBNetworkSpeedTestStatus { int x0; double x1; unsigned long long x2; id x3; BOOL x4; })status;
- (void)broadcastSession:(id)session completedSpeedTestWithStatus:(struct FBNetworkSpeedTestStatus { int x0; double x1; unsigned long long x2; id x3; BOOL x4; })status;
- (void)broadcastSessionDidFinishRecording:(id)recording withResult:(id)result;
- (void)broadcastSessionDidDisconnectNetwork:(id)network withEndOfStreamError:(id)error;
- (void)broadcastSessionDidFail:(id)fail withLoggingInfo:(struct FBVideoBroadcastSessionLoggingInfo { id x0; id x1; BOOL x2; })info;
- (void)broadcastSessionSendDidTimeout:(id)timeout;
- (void)broadcastSession:(id)session didDropPackets:(struct shared_ptr<std::vector<facebook::mobile::xplat::livestreaming::DroppedFrame>> { void * x0; struct __shared_weak_count * x1; })packets dropReason:(id)reason;
- (void)broadcastSession:(id)session didDropFrameWithType:(id)type pts:(struct { long long x0; int x1; unsigned int x2; long long x3; })pts dropReason:(id)reason;
- (void)broadcastSession:(id)session setAccumulatedStreamGapSeconds:(id)seconds;
- (void)broadcastSession:(id)session didChangeBaseTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp;
- (void)broadcastSessionDidProcessAudio:(id)audio;
- (void)broadcastSessionDidLoseConnection:(id)connection error:(id)error;
- (void)broadcastSession:(id)session didUpdateStreamingInfo:(struct Info { struct Optional<std::string> { struct StorageNonTriviallyDestructible { union { char x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; } x0; BOOL x1; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; })info;
- (void)broadcastSession:(id)session didUpdateFlowState:(long long)state;
- (void)broadcastSession:(id)session didUpdateDebugInfo:(id)info;
- (void)broadcastSessionDidReceiveEventMessageAck:(id)ack;
- (void)broadcastSessionShowUserActionableMessage:(int)message;
- (BOOL)broadcastSessionShouldAdjustTimer:(id)timer;
- (void)broadcastSession:(id)session didRemoveCurrentOrInvitedGuests:(id)guests;
- (void)broadcastSession:(id)session didInviteGuests:(id)guests;
- (void)broadcastSession:(id)session didUpdateStatusToConnectingGuest:(id)guest;
- (void)broadcastSession:(id)session guestDidNotRespondToInvitation:(id)invitation;
- (void)broadcastSession:(id)session guestDidDeclineInvitation:(id)invitation;
- (void)broadcastSession:(id)session guestDidAcceptInvitation:(id)invitation;
- (void)broadcastSession:(id)session didStallForGuest:(id)guest;
- (void)broadcastSession:(id)session didResumeForGuest:(id)guest;
- (void)broadcastSession:(id)session isUnreachableForGuest:(id)guest;
- (void)broadcastSession:(id)session guestDidLeaveBroadcast:(id)broadcast;
- (void)broadcastSession:(id)session guestDidFailToLeaveBroadcast:(id)broadcast;
- (void)broadcastSessionDidReceiveInvitation:(id)invitation;
- (void)broadcastSession:(id)session guest:(id)guest didJoinBroadcastWithVideoView:(id)view;
- (void)broadcastSessionDidReceiveDismiss:(id)dismiss reason:(id)reason;
- (void)broadcastSession:(id)session didUpdateCallModel:(id)model;
- (double)currentOffsetFromVideoStartInSeconds;
- (void)stallObserverDidStall:(id)stall;
- (void)stallObserverDidResume:(id)resume stallDuration:(double)duration;
@end

#endif /* IGLiveBroadcastController_h */
