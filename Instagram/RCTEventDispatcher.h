//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTEventDispatcher_h
#define RCTEventDispatcher_h
@import Foundation;

#include "RCTBridge.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTEventDispatcherProtocol-Protocol.h"
#include "RCTInitializing-Protocol.h"
#include "RCTModuleRegistry.h"
#include "RCTTurboModule-Protocol.h"
#include "RCTViewRegistry.h"

@class NSHashTable, NSLock, NSMutableArray, NSMutableDictionary, NSRecursiveLock, NSString;
@protocol OS_dispatch_queue;

@interface RCTEventDispatcher : NSObject<RCTTurboModule, RCTEventDispatcherProtocol, RCTInitializing> {
  /* instance variables */
  NSLock *_eventQueueLock;
  NSMutableDictionary *_events;
  NSMutableArray *_eventQueue;
  BOOL _eventsDispatchScheduled;
  NSHashTable *_observers;
  NSRecursiveLock *_observersLock;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@optional
@property (weak, nonatomic) RCTModuleRegistry *moduleRegistry;
@optional
@property (weak, nonatomic) RCTViewRegistry *viewRegistry_DEPRECATED;
@optional
@property (weak, nonatomic) RCTBundleManager *bundleManager;
@optional
@property (weak, nonatomic) RCTCallableJSModules *callableJSModules;
@optional
@property (readonly, weak, nonatomic) RCTBridge *bridge;
@optional
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property (copy, nonatomic) id /* block */ dispatchToJSThread;

/* class methods */
+ (id)moduleName;
+ (void)load;

/* instance methods */
- (void)initialize;
- (void)sendViewEventWithName:(id)name reactTag:(id)tag;
- (void)sendAppEventWithName:(id)name body:(id)body;
- (void)sendDeviceEventWithName:(id)name body:(id)body;
- (void)sendTextEventWithType:(long long)type reactTag:(id)tag text:(id)text key:(id)key eventCount:(long long)count;
- (void)notifyObserversOfEvent:(id)event;
- (void)sendEvent:(id)event;
- (void)addDispatchObserver:(id)observer;
- (void)removeDispatchObserver:(id)observer;
- (void)dispatchEvent:(id)event;
- (void)flushEventsQueue;
- (struct shared_ptr<facebook::react::TurboModule> { struct TurboModule * x0; struct __shared_weak_count * x1; })getTurboModule:(const void *)module;
@end

#endif /* RCTEventDispatcher_h */
