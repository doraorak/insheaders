//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGActivityFeedNetworkSource_h
#define IGActivityFeedNetworkSource_h
@import Foundation;

#include "IGNetworkSourceDelegate-Protocol.h"
#include "IGNetworkSourcePolicyDelegate-Protocol.h"

@class IGNetworkSource, IGRequestPolicyBuilder, NSSet, NSString;
@protocol IGActivityFeedNetworkSourceDelegate;

@interface IGActivityFeedNetworkSource : NSObject<IGNetworkSourceDelegate, IGNetworkSourcePolicyDelegate> {
  /* instance variables */
  IGNetworkSource *_networkSource;
  NSString *_lastChecked;
  NSString *_lastUpdated;
  NSString *_paginationFirstRecordTimestamp;
  NSSet *_nextRequestSelectedFilterParam;
  NSSet *_nextRequestExcludedNotificationTypesParam;
  IGRequestPolicyBuilder *_nextRequestPolicyBuilder;
  NSString *_userPK;
  BOOL _isTailLoad;
  NSString *_inboxPath;
  BOOL _is304Eligible;
}

@property (weak, nonatomic) NSObject<IGActivityFeedNetworkSourceDelegate> *delegate;
@property (nonatomic) long long tabType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithNetworker:(id)networker parser:(id)parser launcherSet:(id)set userPK:(id)pk;
- (BOOL)isLoading;
- (BOOL)isMoreAvailable;
- (void)cancel;
- (id)networkSource:(id)source requestWithMaxID:(id)id isPrefetch:(BOOL)prefetch requestTag:(id)tag;
- (void)networkSource:(id)source didFetchObject:(id)object request:(id)request httpResponse:(id)response isPrefetch:(BOOL)prefetch isFromCache:(BOOL)cache requestTag:(id)tag;
- (void)networkSource:(id)source didFetchMoreWithObject:(id)object request:(id)request httpResponse:(id)response isPrefetch:(BOOL)prefetch isFromCache:(BOOL)cache requestTag:(id)tag;
- (void)networkSource:(id)source didFailWithError:(id)error request:(id)request httpResponse:(id)response isPrefetch:(BOOL)prefetch requestTag:(id)tag;
- (id)networkSource:(id)source policyForFetch:(BOOL)fetch;
@end

#endif /* IGActivityFeedNetworkSource_h */
