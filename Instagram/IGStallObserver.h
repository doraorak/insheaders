//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStallObserver_h
#define IGStallObserver_h
@import Foundation;

#include "NSObject-Protocol.h"

@class FBTimer, NSString;
@protocol FBTimeMachine, IGStallObserverDelegate, OS_dispatch_queue, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}, {atomic<double>="__a_"{__cxx_atomic_impl<double, std::__cxx_atomic_base_impl<double>>="__a_value"Ad}};

@interface IGStallObserver : NSObject<NSObject> {
  /* instance variables */
  NSObject<IGStallObserverDelegate> *_delegate;
  NSObject<OS_dispatch_queue> *_pollingQueue;
  double _stallThreshold;
  FBTimer *_timer;
  NSObject<FBTimeMachine> *_timeMachine;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _paused;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _stalled;
  struct atomic<double> { struct __cxx_atomic_impl<double, std::__cxx_atomic_base_impl<double>> { atomic  __a_value; double x0; } __a_; } _lastHeartbeatTimestamp;
  struct atomic<double> { struct __cxx_atomic_impl<double, std::__cxx_atomic_base_impl<double>> { atomic  __a_value; double x0; } __a_; } _lastStartedTimestamp;
  struct atomic<double> { struct __cxx_atomic_impl<double, std::__cxx_atomic_base_impl<double>> { atomic  __a_value; double x0; } __a_; } _totalStallTime;
  struct atomic<double> { struct __cxx_atomic_impl<double, std::__cxx_atomic_base_impl<double>> { atomic  __a_value; double x0; } __a_; } _totalElapsedTime;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDelegate:(id)delegate pollingQueue:(id)queue stallThreshold:(double)threshold pollingInterval:(double)interval;
- (void)receivedHeartbeat;
- (double)totalDuration;
- (double)stallTime;
@end

#endif /* IGStallObserver_h */
