//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTNetInfo_h
#define RCTNetInfo_h
@import Foundation;

#include "RCTEventEmitter.h"
#include "NativeNetInfoSpec-Protocol.h"
#include "RCTBridge.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTModuleRegistry.h"
#include "RCTViewRegistry.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface RCTNetInfo : RCTEventEmitter<NativeNetInfoSpec> {
  /* instance variables */
  struct __SCNetworkReachability * _firstTimeReachability;
  struct __SCNetworkReachability * _reachability;
  NSString *_connectionType;
  NSString *_effectiveConnectionType;
  NSString *_statusDeprecated;
  NSString *_host;
  BOOL _isObserving;
  id /* block */ _resolve;
}

@optional
@property (weak, nonatomic) RCTModuleRegistry *moduleRegistry;
@optional
@property (weak, nonatomic) RCTViewRegistry *viewRegistry_DEPRECATED;
@optional
@property (weak, nonatomic) RCTBundleManager *bundleManager;
@optional
@property (weak, nonatomic) RCTCallableJSModules *callableJSModules;
@optional
@property (readonly, weak, nonatomic) RCTBridge *bridge;
@optional
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)moduleName;
+ (void)load;
+ (const struct RCTMethodInfo *)__rct_export__2390;
+ (const struct RCTMethodInfo *)__rct_export__2511;

/* instance methods */
- (void)updateWithNetworkReachabilityFlags:(unsigned int)flags;
- (id)initWithHost:(id)host;
- (id)supportedEvents;
- (void)startObserving;
- (void)stopObserving;
- (void)dealloc;
- (struct __SCNetworkReachability *)getReachabilityRef;
- (BOOL)setReachabilityStatus:(unsigned int)status;
- (void)getCurrentConnectivity:(id /* block */)connectivity reject:(id /* block */)reject;
- (void)isConnectionMetered:(id /* block */)metered reject:(id /* block */)reject;
- (struct shared_ptr<facebook::react::TurboModule> { struct TurboModule * x0; struct __shared_weak_count * x1; })getTurboModule:(const void *)module;
@end

#endif /* RCTNetInfo_h */
