//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGDirectGalleryMetaGalleryWrapperDataSource_h
#define IGDirectGalleryMetaGalleryWrapperDataSource_h
@import Foundation;

#include "IGDirectGalleryDataSource.h"
#include "NSObject-Protocol.h"

@class IGMetaGalleryDataSource, NSString;
@protocol IGDirectGalleryDataSourceAnnouncer, IGGalleryAssetCollection, OS_dispatch_queue;

@interface IGDirectGalleryMetaGalleryWrapperDataSource : NSObject<NSObject> {
  /* instance variables */
  NSObject<IGDirectGalleryDataSourceAnnouncer> *_announcer;
  NSObject<IGGalleryAssetCollection> *_currentAssetCollection;
  IGMetaGalleryDataSource *_metaGalleryDataSource;
  IGDirectGalleryDataSource *_wrappedLocalDataSource;
  NSObject<OS_dispatch_queue> *_fetchQueue;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFetchOptions:(id)options subscribeToPhotoLibraryChanges:(BOOL)changes userSession:(id)session;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (long long)assetCount;
- (BOOL)isLoading;
- (id)currentAssets;
- (id)viewModelsWithCellSize:(struct CGSize { double x0; double x1; })size includesCamera:(BOOL)camera;
- (id)fetchAssetAtIndex:(long long)index imageManager:(id)manager imageTargetSize:(struct CGSize { double x0; double x1; })size contentMode:(long long)mode imageRequestOptions:(id)options assetFetchBlock:(id /* block */)block imageFetchBlock:(id /* block */)block;
- (id)fetchMetaGalleryAssetAtIndex:(long long)index imageTargetSize:(struct CGSize { double x0; double x1; })size assetFetchBlock:(id /* block */)block;
- (id)fetchImageAndVideoLengthWithAsset:(id)asset imageManager:(id)manager imageTargetSize:(struct CGSize { double x0; double x1; })size contentMode:(long long)mode imageRequestOptions:(id)options imageFetchBlock:(id /* block */)block;
- (void)startCachingImageForAssetAtIndex:(long long)index imageManager:(id)manager imageTargetSize:(struct CGSize { double x0; double x1; })size contentMode:(long long)mode imageRequestOptions:(id)options assetFetchBlock:(id /* block */)block;
- (void)stopCachingImageForAssetAtIndex:(long long)index imageManager:(id)manager imageTargetSize:(struct CGSize { double x0; double x1; })size contentMode:(long long)mode imageRequestOptions:(id)options;
- (void)cancelRequestWithIdentifier:(id)identifier imageManager:(id)manager;
- (void)selectDefaultCollectionWithCompletion:(id /* block */)completion;
- (void)selectCollectionWithIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)setSuggestedCollection:(id)collection completion:(id /* block */)completion;
- (void)selectMetaGalleryCollection:(id)collection completion:(id /* block */)completion;
- (void)attemptToLoadMoreAssetsForCurrentCollection;
- (void)selectCollectionWithSubtype:(long long)subtype completion:(id /* block */)completion;
- (void)fetchCollectionsWithCompletion:(id /* block */)completion;
- (id)currentAssetCollection;
- (void)unregisterPhotoLibraryObserver;
- (void)reloadAndRegisterPhotoLibraryObserver;
- (void)dataSourceCurrentAssetsDidUpdate:(id)update hasCountChange:(BOOL)change removedAssets:(id)assets;
- (void)dataSourceDidLoadMoreAssetsForCurrentCollection;
- (void)metaGalleryDataSource:(id)source didChange:(id)change;
- (void)metaGalleryDataSourceDidChangeCollections:(id)collections;
- (void)metaGalleryDataSource:(id)source didUpdateCollections:(id)collections selectedCollection:(id)collection;
- (long long)_currentCollectionType;
- (void)_attemptToWrapCurrentAlbumWithRecentMetaGalleryAssetsWithCompletion:(id /* block */)completion;
- (id)_viewModelsForMetaGalleryAlbum:(id)album withCellSize:(struct CGSize { double x0; double x1; })size includesCamera:(BOOL)camera;
- (id)_viewModelsForMetaGalleryWrapperAlbum:(id)album withCellSize:(struct CGSize { double x0; double x1; })size includesCamera:(BOOL)camera;
- (long long)_getReversedIndex:(id)index indexToReverse:(unsigned long long)reverse;
@end

#endif /* IGDirectGalleryMetaGalleryWrapperDataSource_h */
