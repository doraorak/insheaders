//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGLoginViewController_h
#define IGLoginViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAPIClient-Protocol.h"
#include "IGAlertDialogViewDelegate-Protocol.h"
#include "IGAlertHUDHandling-Protocol.h"
#include "IGAnalyticsModule-Protocol.h"
#include "IGApplicationWillEnterForegroundCriticalEventsListener-Protocol.h"
#include "IGAuthenticationLoginManager.h"
#include "IGCoreTextLinkHandler-Protocol.h"
#include "IGKeyboardObserverHideDelegate-Protocol.h"
#include "IGKeyboardObserverShowDelegate-Protocol.h"
#include "IGLoginAutoCompleteController.h"
#include "IGLoginResponseHandler.h"
#include "IGLoginView.h"
#include "IGLoginViewModel.h"
#include "IGSandboxSettingHandler.h"
#include "IGTextFieldDelegate-Protocol.h"

@class IGAccessLoginCodeSendingManager, IGAccountStoreCoordinator, IGAuthenticator, IGContinueAsRegistrationConfig, IGDeviceSession, IGFXLoginManager, IGKeyboardObserver, IGRegistrationLogger, IGUser, NSString, NSURL;
@protocol IGAuthenticationFlowDismissDelegate, IGCheckpointCoordinatorProtocol, IGLoginViewControllerBarcelonaLoggingDelegate, IGLoginViewControllerDelegate;

@interface IGLoginViewController : IGViewController<IGTextFieldDelegate, IGCoreTextLinkHandler, IGAnalyticsModule, IGKeyboardObserverShowDelegate, IGKeyboardObserverHideDelegate, IGAlertDialogViewDelegate, IGApplicationWillEnterForegroundCriticalEventsListener> {
  /* instance variables */
  BOOL _isSwitchingUsers;
  BOOL _hideFacebookButton;
  BOOL _isBackButtonEnabled;
  BOOL _isNavigationBarEnabled;
  IGDeviceSession *_deviceSession;
  IGAuthenticator *_authenticator;
  IGAccountStoreCoordinator *_accountStoreCoordinator;
  IGContinueAsRegistrationConfig *_registrationConfig;
  NSObject<IGAlertHUDHandling> *_alertHUDHandler;
  IGLoginResponseHandler *_responseHandler;
  IGLoginAutoCompleteController *_autoCompleteController;
  IGUser *_previousUser;
  IGAuthenticationLoginManager *_loginManager;
  IGAccessLoginCodeSendingManager *_codeSendingManager;
  IGFXLoginManager *_fxLoginManager;
  IGRegistrationLogger *_logger;
  NSObject<IGAPIClient> *_networker;
  IGKeyboardObserver *_keyboardObserver;
  NSString *_prefillUsername;
  NSString *_stepName;
  IGLoginView *_loginView;
  IGLoginViewModel *_viewModel;
  NSObject<IGAuthenticationFlowDismissDelegate> *_flowDismissDelegate;
  BOOL _showTrustedFriendsBanner;
  NSObject<IGCheckpointCoordinatorProtocol> *_checkpointCoordinator;
  NSURL *_dialogFooterLinkURL;
  IGSandboxSettingHandler *_sandboxSettingHandler;
}

@property (weak, nonatomic) NSObject<IGLoginViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<IGLoginViewControllerBarcelonaLoggingDelegate> *barcelonaLoggingDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithBackButtonEnabled:(BOOL)enabled navigationBarEnabled:(BOOL)enabled deviceSession:(id)session networker:(id)networker authenticator:(id)authenticator accountStoreCoordinator:(id)coordinator fbAuthHelper:(id)helper ssoFetcher:(id)fetcher userSwitchedFrom:(id)from isSwitchingUsers:(BOOL)users hideFacebookButton:(BOOL)button registrationConfig:(id)config stepName:(id)name prefillUsername:(id)username logger:(id)logger flowDismissDelegate:(id)delegate;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)applicationWillEnterForegroundListener;
- (void)_keyboardWillHide;
- (void)keyboardObserver:(id)observer keyboardWillHideWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserver:(id)observer keyboardWillShowWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidHide:(id)hide;
- (void)keyboardObserverKeyboardDidShow:(id)show;
- (void)_facebookButtonTapped;
- (void)coreTextView:(id)view didTapOnString:(id)string URL:(id)url;
- (void)resetIsSignUpButtonTappedStatus;
- (BOOL)loginResponseHandler:(id)handler hasFirstPartyFBLoginTokenForUser:(id)user;
- (void)loginResponseHandler:(id)handler didHandleResetPasswordWithBundle:(id)bundle;
- (void)loginResponseHandler:(id)handler didHandleTwoFactorInfo:(id)info;
- (void)loginResponseHandlerDidTriggerFbLogin:(id)login forUser:(id)user;
- (void)loginResponseHandlerDidTriggerAccountRecovery:(id)recovery;
- (void)loginResponseHandlerDidSwitchToSignUpAfterFailure:(id)failure;
- (void)loginResponseHandlerDidFailOneTapLogin:(id)login;
- (void)loginResponseHandlerDidHandleBadPassword:(id)password;
- (void)loginResponseHandler:(id)handler didReactivateAccountWithStopDeletionToken:(id)token;
- (void)startFacebookButtonLoading;
- (void)stopFacebookButtonLoading;
- (void)facebookAuthHelperDidTapSignUpButton:(id)button isFacebookRegExempt:(BOOL)exempt;
- (void)facebookAuthHelperDidTapLogInButton:(id)button;
- (void)facebookAuthHelperDidTapHelpButton:(id)button;
- (void)facebookAuthHelperDidTapDismissButton:(id)button;
- (void)facebookAuthHelperDidFail:(id)fail withError:(id)error withResponse:(id)response;
- (void)facebookAuthHelperDidTapActiveUser:(id)user;
- (void)facebookAuthHelper:(id)helper willProceedRegistrationWithFBInfo:(id)fbinfo facebookAccessToken:(id)token tosVersion:(id)version;
- (void)facebookAuthHelper:(id)helper willProceedTwoFactorWithInfo:(id)info facebookAccessToken:(id)token;
- (void)facebookAuthHelper:(id)helper willResetPasswordToken:(id)token user:(id)user facebookAccessToken:(id)token;
- (void)facebookAuthHelper:(id)helper willPrefillUsername:(id)username;
- (void)facebookAuthHelper:(id)helper willShowAccountPickerForTokenResult:(id)result;
- (void)facebookAuthHelperDidTriggerAgeRegulationErrorDialog;
- (BOOL)textFieldShouldReturn:(id)return;
- (void)textFieldDidChange:(id)change;
- (void)textFieldDidBeginEditing:(id)editing;
- (void)loginViewDidTapFacebookButton:(id)button;
- (void)loginViewDidTapSignUpButton:(id)button;
- (void)loginViewDidTapDismissButton:(id)button;
- (void)loginViewDidTapLoginButton:(id)button;
- (void)loginViewDidTapBackButton:(id)button;
- (void)loginViewDidTapGearButton:(id)button;
- (void)loginViewDidTapForgotPasswordButton:(id)button;
- (void)loginViewDidTapLoginAnotherWayButton:(id)button;
- (void)loginViewDidTapShaderView:(id)view;
- (void)loginViewAdjustContainerViewPosition:(id)position usernameTextField:(id)field;
- (void)loginViewDidTapTrustedFriendsFooterView:(id)view;
- (BOOL)prefersNavigationBarHidden;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)autoCompleteController:(id)controller tableViewDidSelectRowWithOneTapLoginAccount:(id)account;
- (void)autoCompleteController:(id)controller tableViewDidSelectRowWithFBUser:(id)fbuser;
- (void)autoCompleteController:(id)controller displayViewWithSize:(struct CGSize { double x0; double x1; })size;
- (void)loginManager:(id)manager didAttemptToLoginWithUsernameAndPassword:(BOOL)password;
- (void)loginManager:(id)manager didAttemptToLoginFromLink:(BOOL)link;
- (void)loginManager:(id)manager biometricsLoginFailedForUsername:(id)username;
- (void)loginManager:(id)manager didAttemptToLoginWithUsername:(id)username;
- (void)loginManagerAttemptToLoginFailed:(id)failed;
- (void)loginManager:(id)manager authenticationFailureWithError:(id)error responseDict:(id)dict notification:(id)notification currentUserSession:(id)session;
- (void)loginManager:(id)manager didLoginWithUsernameAndPasswordWithSession:(id)session;
- (void)checkpointCoordinator:(id)coordinator didSucceedWithType:(unsigned long long)type;
- (void)checkpointCoordinator:(id)coordinator didTerminateWithChallengeType:(id)type isCleared:(BOOL)cleared;
- (void)checkpointCoordinatorDidBackToLogin:(id)login;
- (void)alertDialogViewDidTapFooterLabel;
@end

#endif /* IGLoginViewController_h */
