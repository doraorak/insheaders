//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGLiveViewerView_h
#define IGLiveViewerView_h
@import Foundation;

#include "UIView.h"
#include "IGAPIClient-Protocol.h"
#include "IGAnalyticsEventLoggingProtocol-Protocol.h"
#include "IGFullScreenContentGatingView.h"
#include "IGLiveBroadcastHeaderView.h"
#include "IGLiveContentView.h"
#include "IGLiveWaveViewerOverlayView.h"
#include "IGTooltipViewDelegate-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class IGCameraInstructionView, IGDeviceSession, IGLiveSupporterViewerOverlayView, IGNavigationController, IGTooltipView, IGUser, IGUserSession, NSString, UIButton, UIView;
@protocol IGLiveAddonCoordinating, IGLiveContentGatingScreenDelegate, IGLiveLoggingContext, IGLiveViewerViewDelegate;

@interface IGLiveViewerView : UIView<IGTooltipViewDelegate, UIGestureRecognizerDelegate> {
  /* instance variables */
  NSString *_module;
  IGUserSession *_userSession;
  long long _roomHostHeaderMode;
  IGUser *_broadcaster;
  unsigned long long _audienceType;
  BOOL _questionModeActive;
  BOOL _userIsViewer;
  IGTooltipView *_askAQuestionTooltipView;
  IGTooltipView *_badgesTooltipView;
  IGTooltipView *_broadcastChannelOnlyLiveNUXView;
  long long _viewerViewMode;
  BOOL _isViewingLiveWith;
  IGLiveWaveViewerOverlayView *_waveOverlayView;
  IGLiveSupporterViewerOverlayView *_supporterBadgeOverlayView;
  UIButton *_seeResourceButton;
  IGFullScreenContentGatingView *_contentGatingView;
  NSObject<IGLiveContentGatingScreenDelegate> *_contentGatingScreenDelegate;
  NSString *_broadcastTitle;
  NSString *_broadcastPrompt;
  BOOL _mentionSuggestionsViewInitialized;
  struct { BOOL isInitialized; BOOL isUserPayActivated; unsigned long long audienceType; BOOL shareButtonEnabled; BOOL realtimeQAEnabledForViewer; BOOL requestToJoinEnabled; BOOL isLiveSubscriptionEnabled; BOOL dualCameraEnabled; } _liveBroadcastConfig;
  BOOL _gameIsActive;
  BOOL _canShowSuggestedLiveViewController;
  IGNavigationController *_presentingNavigationController;
}

@property (weak, nonatomic) NSObject<IGLiveViewerViewDelegate> *delegate;
@property (readonly, nonatomic) UIView *headerView;
@property (readonly, nonatomic) IGCameraInstructionView *instructionView;
@property (readonly, nonatomic) IGLiveContentView *contentView;
@property (@dynamic, nonatomic) BOOL shouldBottomInsetToMedia;
@property (@dynamic, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } mediaWindowFrameReference;
@property (retain, nonatomic) NSObject<IGAnalyticsEventLoggingProtocol> *analyticsLogger;
@property (retain, nonatomic) NSObject<IGLiveLoggingContext> *loggingContext;
@property (retain, nonatomic) IGDeviceSession *deviceSession;
@property (retain, nonatomic) NSString *broadcastId;
@property (retain, nonatomic) NSObject<IGAPIClient> *networker;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<IGLiveAddonCoordinating> *coordinator;
@property (readonly, nonatomic) NSString *identifier;
@property (nonatomic) BOOL disabled;
@property (nonatomic) BOOL addonLifeCycleEventEnabled;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame ringViewSpecFactory:(id)factory userSession:(id)session;
- (void)dealloc;
- (id)profileImageView;
- (void)prepareForReuse;
- (void)setPassthroughViews:(id)views;
- (void)addComments:(id)comments;
- (void)showUpleveledComment:(id)comment;
- (BOOL)isCommentVisible:(id)visible;
- (id)visibleCellForComment:(id)comment;
- (void)updateCommentWithPk:(id)pk withComment:(id)comment;
- (void)removeCommentWithPk:(id)pk;
- (void)setCommentsDisabled:(BOOL)disabled;
- (void)setViewerCount:(long long)count;
- (void)hideOverlay;
- (void)displayContentGatingViewWithGating:(id)gating gatingDelegate:(id)delegate;
- (BOOL)isContentGatingViewDisplayed;
- (void)stopDisplayContentGating;
- (void)layoutSubviews;
- (void)didTapTooltipView:(id)view;
- (void)fullscreenContentGatingViewDidDisplayActionSheet:(id)sheet;
- (void)fullscreenContentGatingViewDidDismissActionSheet:(id)sheet;
- (void)fullscreenContentGatingViewDidTapContinueActionSheet:(id)sheet;
- (void)fullscreenContentGatingViewDidTapSeeWhy:(id)why;
- (void)fullscreenContentGatingViewTimerExpired:(id)expired;
- (void)fullscreenContentGatingView:(id)view timerProgressed:(double)progressed;
- (void)liveBroadcastHeaderViewTapped:(id)tapped;
- (void)liveBroadcastHeaderDidTapUserView:(id)view;
- (void)liveBroadcastHeaderDidTapViewerCount:(id)count;
- (void)liveBroadcastHeaderDidTapCloseButton:(id)button;
- (void)liveBroadcastHeaderDidTapOptionButton:(id)button;
- (void)contentView:(id)view didTapWithGestureRecognizer:(id)recognizer;
- (void)contentView:(id)view didEnterCommentText:(id)text repliedToCommentPk:(id)pk;
- (void)contentViewDidChangeCommentText:(id)text;
- (void)contentView:(id)view didReceiveUnpinTapOnComment:(id)comment;
- (BOOL)contentViewCanToggleCommentsHeight:(id)height;
- (void)contentView:(id)view didReceiveTapOnComment:(id)comment isPinned:(BOOL)pinned tappedWaveButton:(BOOL)button cell:(id)cell;
- (void)contentView:(id)view didUnpinCurrentComment:(id)comment;
- (void)contentViewDidRequestToHideTrays:(id)trays;
- (void)contentView:(id)view didPan:(id)pan;
- (void)contentView:(id)view didChangeZoomScaleWithDelta:(double)delta;
- (void)contentView:(id)view didTapPinnedViewButtonWithViewModel:(id)model;
- (void)contentView:(id)view didTapPinnedViewWithViewModel:(id)model;
- (void)contentView:(id)view didTapPinnedViewTextWithViewModel:(id)model text:(id)text URL:(id)url;
- (void)contentViewDidChangeTopBannerVisibility:(id)visibility;
- (void)configurateCoordinator:(id)coordinator;
- (void)unconfigurateCoordinator;
- (void)receiveEvent:(unsigned long long)event from:(id)from payload:(id)payload;
- (BOOL)canHandleRequest:(id)request;
- (id)handleRequest:(id)request;
- (void)waveViewerOverlayViewWaveBackButtonTappedForWaver:(id)waver;
@end

#endif /* IGLiveViewerView_h */
