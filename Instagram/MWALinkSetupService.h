//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MWALinkSetupService_h
#define MWALinkSetupService_h
@import Foundation;

@class NSData, NSUUID;
@protocol MWALinkSetupServiceDelegate, {CipherBuilder="privateKey"{PrivateKey="key_"^v"valid_"B}"challenge"{ByteString<16UL>="__elems_"[16C]}"publicKey"{optional<airshield::security::PublicKey>=""(?="__null_state_"c"__val_"{PublicKey="group_"^v"point_"^v"valid_"B})"__engaged_"B}"seed"{ByteString<32UL>="__elems_"[32C]}"iv"{ByteString<16UL>="__elems_"[16C]}}, {DoubleMessageCondition="flags"{atomic<unsigned int>="__a_"{__cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>>="__a_value"AI}}}, {shared_ptr<datax::Connection>="__ptr_"^{Connection}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<datax::LocalChannel, std::default_delete<datax::LocalChannel>>="__ptr_"{__compressed_pair<datax::LocalChannel *, std::default_delete<datax::LocalChannel>>="__value_"^{LocalChannel}}}, {unique_ptr<datax::Service, std::default_delete<datax::Service>>="__ptr_"{__compressed_pair<datax::Service *, std::default_delete<datax::Service>>="__value_"^{Service}}};

@interface MWALinkSetupService : NSObject {
  /* instance variables */
  struct shared_ptr<datax::Connection> { struct Connection *__ptr_; struct __shared_weak_count *__cntrl_; } _connection;
  struct unique_ptr<datax::Service, std::default_delete<datax::Service>> { struct __compressed_pair<datax::Service *, std::default_delete<datax::Service>> { struct Service *__value_; } __ptr_; } _service;
  struct unique_ptr<datax::LocalChannel, std::default_delete<datax::LocalChannel>> { struct __compressed_pair<datax::LocalChannel *, std::default_delete<datax::LocalChannel>> { struct LocalChannel *__value_; } __ptr_; } _channel;
  struct CipherBuilder { struct PrivateKey { void *key_; BOOL valid_; } privateKey; struct ByteString<16UL> { unsigned char x[16] __elems_; } challenge; struct optional<airshield::security::PublicKey> { union { char __null_state_; struct PublicKey { void *group_; void *point_; BOOL valid_; } __val_; } x0; BOOL __engaged_; } publicKey; struct ByteString<32UL> { unsigned char x[32] __elems_; } seed; struct ByteString<16UL> { unsigned char x[16] __elems_; } iv; } _txBuilder;
  struct CipherBuilder { struct PrivateKey { void *key_; BOOL valid_; } privateKey; struct ByteString<16UL> { unsigned char x[16] __elems_; } challenge; struct optional<airshield::security::PublicKey> { union { char __null_state_; struct PublicKey { void *group_; void *point_; BOOL valid_; } __val_; } x0; BOOL __engaged_; } publicKey; struct ByteString<32UL> { unsigned char x[32] __elems_; } seed; struct ByteString<16UL> { unsigned char x[16] __elems_; } iv; } _rxBuilder;
  struct DoubleMessageCondition { struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>> { atomic  __a_value; unsigned int x0; } __a_; } flags; } _preambleReady;
  struct DoubleMessageCondition { struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>> { atomic  __a_value; unsigned int x0; } __a_; } flags; } _endSteps;
}

@property (weak, nonatomic) NSObject<MWALinkSetupServiceDelegate> *delegate;
@property (readonly, nonatomic) NSData *txChallenge;
@property (readonly, nonatomic) NSData *rxChallenge;
@property (retain, nonatomic) NSUUID *txUUID;
@property (retain, nonatomic) NSUUID *rxUUID;
@property (nonatomic) BOOL asMain;

/* instance methods */
- (id)initWithConnection:(struct shared_ptr<datax::Connection> { struct Connection * x0; struct __shared_weak_count * x1; })connection;
- (void)dealloc;
- (void)requestEncryption;
- (void)endLinkSetup:(BOOL)setup;
- (void)localChannelReceivedType:(unsigned short)type data:(const char *)data len:(unsigned long long)len;
- (void)localChannelEncounteredError:(unsigned short)error;
- (void)localChannelClosed;
- (void)remoteChannel:(void *)channel receivedType:(unsigned short)type data:(const char *)data len:(unsigned long long)len;
- (void)remoteChannelDisconnected:(void *)disconnected;
@end

#endif /* MWALinkSetupService_h */
