//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTScrollView_h
#define RCTScrollView_h
@import Foundation;

#include "RCTView.h"
#include "RCTAutoInsetsProtocol-Protocol.h"
#include "RCTCustomScrollView.h"
#include "RCTEventDispatcherProtocol-Protocol.h"
#include "RCTScrollableProtocol-Protocol.h"
#include "RCTUIManagerObserver-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"

@class NSArray, NSDictionary, NSHashTable, NSMutableArray, NSString, UIScrollView, UIView;

@interface RCTScrollView : RCTView<RCTUIManagerObserver, UIScrollViewDelegate, RCTScrollableProtocol, RCTAutoInsetsProtocol> {
  /* instance variables */
  NSObject<RCTEventDispatcherProtocol> *_eventDispatcher;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _prevFirstVisibleFrame;
  UIView *_firstVisibleView;
  double _lastScrollDispatchTime;
  NSMutableArray *_cachedChildFrames;
  BOOL _allowNextScrollNoMatterWhat;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastClippedToRect;
  unsigned short _coalescingKey;
  NSString *_lastEmittedEventName;
  NSHashTable *_scrollListeners;
}

@property (readonly, nonatomic) UIView *contentView;
@property (readonly, nonatomic) UIScrollView *scrollView;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } contentInset;
@property (nonatomic) BOOL automaticallyAdjustContentInsets;
@property (nonatomic) BOOL automaticallyAdjustKeyboardInsets;
@property (nonatomic) BOOL DEPRECATED_sendUpdatedChildFrames;
@property (nonatomic) double scrollEventThrottle;
@property (nonatomic) BOOL centerContent;
@property (copy, nonatomic) NSDictionary *maintainVisibleContentPosition;
@property (nonatomic) BOOL scrollToOverflowEnabled;
@property (nonatomic) int snapToInterval;
@property (nonatomic) BOOL disableIntervalMomentum;
@property (copy, nonatomic) NSArray *snapToOffsets;
@property (nonatomic) BOOL snapToStart;
@property (nonatomic) BOOL snapToEnd;
@property (copy, nonatomic) NSString *snapToAlignment;
@property (nonatomic) BOOL inverted;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } firstResponderFocus;
@property (copy, nonatomic) id /* block */ onScrollBeginDrag;
@property (copy, nonatomic) id /* block */ onScroll;
@property (copy, nonatomic) id /* block */ onScrollToTop;
@property (copy, nonatomic) id /* block */ onScrollEndDrag;
@property (copy, nonatomic) id /* block */ onMomentumScrollBegin;
@property (copy, nonatomic) id /* block */ onMomentumScrollEnd;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } contentSize;

/* instance methods */
- (void)_registerKeyboardListener;
- (void)_unregisterKeyboardListener;
- (void)_keyboardWillChangeFrame:(id)frame;
- (id)initWithEventDispatcher:(id)dispatcher;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (void)setReactLayoutDirection:(long long)direction;
- (void)setRemoveClippedSubviews:(BOOL)subviews;
- (void)insertReactSubview:(id)subview atIndex:(long long)index;
- (void)removeReactSubview:(id)subview;
- (void)didUpdateReactSubviews;
- (void)didSetProps:(id)props;
- (void)setClipsToBounds:(BOOL)bounds;
- (void)dealloc;
- (void)layoutSubviews;
- (void)updateClippedSubviews;
- (BOOL)isHorizontal:(id)horizontal;
- (void)scrollToOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)scrollToOffset:(struct CGPoint { double x0; double x1; })offset animated:(BOOL)animated;
- (void)scrollToEnd:(BOOL)end;
- (void)zoomToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect animated:(BOOL)animated;
- (void)refreshContentInset;
- (void)scrollViewWillBeginDecelerating:(id)decelerating;
- (void)scrollViewDidZoom:(id)zoom;
- (void)scrollViewDidScrollToTop:(id)top;
- (void)addScrollListener:(id)listener;
- (void)removeScrollListener:(id)listener;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)scrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint *)offset;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (void)scrollViewWillBeginZooming:(id)zooming withView:(id)view;
- (void)scrollViewDidEndZooming:(id)zooming withView:(id)view atScale:(double)scale;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (BOOL)scrollViewShouldScrollToTop:(id)top;
- (id)viewForZoomingInScrollView:(id)view;
- (struct CGSize { double x0; double x1; })_calculateViewportSize;
- (void)updateContentSizeIfNeeded;
- (void)uiManagerWillPerformMounting:(id)mounting;
- (void)setAlwaysBounceHorizontal:(BOOL)horizontal;
- (BOOL)alwaysBounceHorizontal;
- (void)setAlwaysBounceVertical:(BOOL)vertical;
- (BOOL)alwaysBounceVertical;
- (void)setBounces:(BOOL)bounces;
- (BOOL)bounces;
- (void)setBouncesZoom:(BOOL)zoom;
- (BOOL)bouncesZoom;
- (void)setCanCancelContentTouches:(BOOL)touches;
- (BOOL)canCancelContentTouches;
- (void)setDecelerationRate:(double)rate;
- (double)decelerationRate;
- (void)setDirectionalLockEnabled:(BOOL)enabled;
- (BOOL)isDirectionalLockEnabled;
- (void)setIndicatorStyle:(long long)style;
- (long long)indicatorStyle;
- (void)setKeyboardDismissMode:(long long)mode;
- (long long)keyboardDismissMode;
- (void)setMaximumZoomScale:(double)scale;
- (double)maximumZoomScale;
- (void)setMinimumZoomScale:(double)scale;
- (double)minimumZoomScale;
- (void)setScrollEnabled:(BOOL)enabled;
- (BOOL)isScrollEnabled;
- (void)setPagingEnabled:(BOOL)enabled;
- (BOOL)isPagingEnabled;
- (void)setScrollsToTop:(BOOL)top;
- (BOOL)scrollsToTop;
- (void)setShowsHorizontalScrollIndicator:(BOOL)indicator;
- (BOOL)showsHorizontalScrollIndicator;
- (void)setShowsVerticalScrollIndicator:(BOOL)indicator;
- (BOOL)showsVerticalScrollIndicator;
- (void)setZoomScale:(double)scale;
- (double)zoomScale;
- (void)setScrollIndicatorInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })scrollIndicatorInsets;
- (void)setAutomaticallyAdjustsScrollIndicatorInsets:(BOOL)insets;
- (void)setContentInsetAdjustmentBehavior:(long long)behavior;
- (void)sendScrollEventWithName:(id)name scrollView:(id)view userData:(id)data;
@end

#endif /* RCTScrollView_h */
