//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryVideoView_h
#define IGStoryVideoView_h
@import Foundation;

#include "UIView.h"
#include "IGFNFVideoPlayable-Protocol.h"
#include "IGFNFVideoPlayerDelegate-Protocol.h"
#include "IGImageProgressViewDelegate-Protocol.h"
#include "IGScopedListener-Protocol.h"
#include "IGStoryItemType-Protocol.h"
#include "IGStoryPlayerMediaViewDelegate-Protocol.h"
#include "IGStoryVideoViewable-Protocol.h"
#include "IGUserLauncherSet-Protocol.h"
#include "IGVPVDImpressionHelper.h"
#include "IGVideoViper2ndChannelAnnouncer-Protocol.h"
#include "IGVideoViper2ndChannelManagerDelegate-Protocol.h"

@class FBTimer, IGImageProgressView, IGPhoto, IGStoryGradientRingView, IGUserSession, IGVideoCaptionController, IGVideoPlaybackLoggingConfig, IGVideoPlayerConfig, IGVideoViewLogger, NSString, UIView;
@protocol IGStoryVideoViewCaptionDelegate, UIControl<IGVideoCaptionViewType;

@interface IGStoryVideoView : UIView<IGFNFVideoPlayerDelegate, IGImageProgressViewDelegate, IGVideoViper2ndChannelManagerDelegate, IGStoryVideoViewable, IGScopedListener> {
  /* instance variables */
  NSString *_module;
  double _subtitleOffset;
  IGVideoPlayerConfig *_playerConfig;
  BOOL _seekPreviewEnabled;
  BOOL _useVideoForCoverFrame;
  NSObject<IGUserLauncherSet> *_launcherSet;
  UIControl<IGVideoCaptionViewType> *_captionView;
  IGVideoCaptionController *_videoCaptionController;
  double _visibleLoadStartTime;
  unsigned long long _numGuestsForLiveRoomPreview;
  BOOL _enablePlayMethodRefactor;
  IGVideoPlaybackLoggingConfig *_videoLoggingConfig;
  NSString *_adVideoPK;
  NSObject<IGVideoViper2ndChannelAnnouncer> *_videoViewability2ndChannelAnnouncer;
  BOOL _isPictureInPictureEnabledForLiveVideo;
  unsigned long long _currentPlaybackCount;
}

@property (readonly, nonatomic) IGUserSession *userSession;
@property (retain, nonatomic) NSObject<IGFNFVideoPlayable> *videoPlayer;
@property (retain, nonatomic) IGVideoViewLogger *logger;
@property (retain, nonatomic) UIView *videoPlayerView;
@property (retain, nonatomic) IGStoryGradientRingView *videoLoadingIndicatorView;
@property (retain, nonatomic) FBTimer *loadingIndicatorDelayTimer;
@property (nonatomic) BOOL hasStartedPlayback;
@property (nonatomic) BOOL didLoadImage;
@property (nonatomic) BOOL userDidSeek;
@property (readonly, nonatomic) IGImageProgressView *coverPhotoView;
@property (readonly, weak, nonatomic) NSObject<IGStoryPlayerMediaViewDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<IGStoryItemType> *item;
@property (nonatomic) BOOL audioEnabled;
@property (readonly, nonatomic) BOOL isSeeking;
@property (readonly, nonatomic) IGPhoto *coverPhoto;
@property (readonly, nonatomic) BOOL hasCaption;
@property (weak, nonatomic) NSObject<IGStoryVideoViewCaptionDelegate> *captionDelegate;
@property (retain, nonatomic) IGVPVDImpressionHelper *vpvdImpressionHelper;
@property (retain, nonatomic) IGVPVDImpressionHelper *merlinVpvdImpressionHelper;

/* instance methods */
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame userSession:(id)session module:(id)module subtitleOffset:(double)offset seekPreviewEnabled:(BOOL)enabled loggingConfig:(id)config;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame userSession:(id)session module:(id)module subtitleOffset:(double)offset seekPreviewEnabled:(BOOL)enabled;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)configureWithItem:(id)item delegate:(id)delegate videoLogger:(id)logger videoLoggingConfig:(id)config userSession:(id)session module:(id)module;
- (void)traitCollectionDidChange:(id)change;
- (void)setContentMode:(long long)mode;
- (void)retryLoadItem:(id)item currentLoadingError:(id)error;
- (void)play;
- (void)pauseWithReason:(long long)reason;
- (void)stopWithReason:(long long)reason pauseReasonDebugString:(id)string;
- (void)seekToBeginning;
- (void)seekToBeginningAndPause;
- (void)skipForInterval:(double)interval forward:(BOOL)forward;
- (void)seekToTime:(double)time shouldUsePreciseTime:(BOOL)time trigger:(long long)trigger;
- (void)seekToTime:(double)time;
- (double)currentTime;
- (double)duration;
- (void)setAudioEnabled:(BOOL)enabled reason:(long long)reason;
- (BOOL)isPlaying;
- (id)videoDebugDetails;
- (struct CGSize { double x0; double x1; })mediaSize;
- (double)mediaCurrentTime;
- (double)mediaCurrentFrameTime;
- (double)cellPlayTime;
- (BOOL)isViewFinishedLoading;
- (BOOL)isShowingContent;
- (void)addViper2ndChannelListener:(id)listener;
- (void)_didTapCaptionView;
- (void)videoPlayer:(id)player willLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayer:(id)player didLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayerDidPlayToEnd:(id)end;
- (void)videoPlayerItemTimeFullyLoaded:(id)loaded;
- (void)videoPlayer:(id)player didUpdatePlaybackProgress:(double)progress;
- (void)videoPlayerBufferEmpty:(id)empty;
- (void)videoPlayerWillPrepareAssetForPlayback:(id)playback;
- (void)videoPlayerDidPlay:(id)play;
- (void)videoPlayerDidPause:(id)pause reason:(long long)reason;
- (void)videoPlayer:(id)player didFailToPlaybackWithError:(id)error;
- (void)videoPlayer:(id)player didGenerateWarningWithError:(id)error;
- (void)videoPlayer:(id)player didUpdateLoadingProgress:(double)progress;
- (void)videoPlayer:(id)player didBeginSeekingToTime:(double)time;
- (void)videoPlayerDidFinishSeeking:(id)seeking;
- (void)videoPlayerDidLoop:(id)loop;
- (void)videoPlayerDidUpdateAvailableAudioAutoTranslateLanguages:(id)languages;
- (void)progressImageView:(id)view didUpdateLoadingState:(id)state;
- (void)progressImageView:(id)view didLoadImage:(id)image loadSource:(id)source networkRequestSummary:(id)summary;
- (void)progressImageView:(id)view didFailLoadWithError:(id)error networkRequestSummary:(id)summary;
- (void)didChangeViewerCaptionsSettings:(struct { BOOL x0; BOOL x1; })settings didUpdateTranslationsEnabled:(BOOL)enabled;
- (void)didRemoveCaptionsForVideo:(id)video;
- (id)renderedComponentLoggingInfo;
- (double)videoViperManagerDidUpdateWatchTime;
@end

#endif /* IGStoryVideoView_h */
