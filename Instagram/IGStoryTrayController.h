//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryTrayController_h
#define IGStoryTrayController_h
@import Foundation;

#include "IGAlertHUDHandling-Protocol.h"
#include "IGFavoritesPresentationManager.h"
#include "IGFollowControllerDelegate-Protocol.h"
#include "IGGyroMotionManagerListener-Protocol.h"
#include "IGHighlightsFeedPostSelectionDelegate.h"
#include "IGListAdapterDelegate-Protocol.h"
#include "IGListDisplayDelegate-Protocol.h"
#include "IGMediaPreloaderPhotoProgressDelegate-Protocol.h"
#include "IGStoryAdsDeleteAdActivityAdDelegate-Protocol.h"
#include "IGStoryDataController.h"
#include "IGStoryDataControllerStoryItemListener-Protocol.h"
#include "IGStoryLikesController.h"
#include "IGStorySeenStateStoreListener-Protocol.h"
#include "IGStoryTrayDataSource-Protocol.h"
#include "IGStoryTrayDataSourceChangeListener-Protocol.h"
#include "IGStoryTrayListAdapterDataSource.h"
#include "IGStoryTrayLoggingContext.h"
#include "IGStoryTrayPrefetchController.h"
#include "IGStoryTraySectionConfiguration.h"
#include "IGStoryViewerDelegate-Protocol.h"
#include "IGStoryViewerLaunchPerformanceLogger.h"
#include "UIScrollViewDelegate-Protocol.h"
#include "UIViewControllerTransitioningDelegate-Protocol.h"
#include "_TtC18IGMotionTranslator18IGMotionTranslator.h"
#include "_TtP18IGMotionTranslator26IGMotionTranslatorListener_-Protocol.h"

@class IGActionSheetController, IGFollowController, IGListAdapter, IGMediaPreloader, IGStoryTrayViewModel, IGStoryViewerConfiguration, IGUserSession, NSMutableSet, NSNumber, NSString, UIView;
@protocol IGListSectionController<IGStorySectionControlling, IGMainFeedStoryTrayLoggingContextProvider, IGStoryTrayControllerDataSource, IGStoryTrayControllerDelegate, IGStoryTraySectionControllerActionDelegate, IGStoryTraySectionControllerDelegate, IGStoryTraySectionControllerViewerDelegate, IGStoryViewerPresentationAnimationProtocol><UIViewControllerAnimatedTransitioning><UIViewControllerTransitioningDelegate, UICollectionViewCell<IGStoryTrayBaseCell;

@interface IGStoryTrayController : NSObject<IGListAdapterDelegate, IGMediaPreloaderPhotoProgressDelegate, IGStoryDataControllerStoryItemListener, IGStoryTrayDataSourceChangeListener, UIScrollViewDelegate, IGStorySeenStateStoreListener, IGFollowControllerDelegate, IGGyroMotionManagerListener, _TtP18IGMotionTranslator26IGMotionTranslatorListener_, UIViewControllerTransitioningDelegate, IGStoryViewerDelegate, IGListDisplayDelegate> {
  /* instance variables */
  double _trayOffset;
  BOOL _hasLoggedTrayImpression;
  BOOL _isListAdapterUpdating;
  BOOL _hasLoggedNetworkRefresh;
  _TtC18IGMotionTranslator18IGMotionTranslator *_motionTranslator;
  IGActionSheetController *_actionSheetController;
  NSObject<IGStoryTrayControllerDelegate> *_controllerDelegate;
  NSObject<IGStoryTrayControllerDataSource> *_controllerDataSource;
  NSString *_filteringTag;
  NSNumber *_positionInFeed;
  BOOL _shouldScrollLastViewedReelToFirstPositionAlways;
  BOOL _shouldUseTrueLeftmostForReelScrollToFirstPosition;
  BOOL _isStoriesTrayPrefetchEnabled;
  BOOL _isSharingHighlightsToStory;
  NSMutableSet *_currentlyPreloadingMediaPKs;
  NSMutableSet *_completedPreloadingMediaPKs;
  IGStoryViewerLaunchPerformanceLogger *_perfLogger;
  NSObject<IGStoryAdsDeleteAdActivityAdDelegate> *_adActivityDelegate;
  BOOL _useRefinedStoryTrayAnimation;
  IGFollowController *_followController;
  IGHighlightsFeedPostSelectionDelegate *_feedPostSelectionDelegate;
  IGStoryTrayViewModel *_viewerEnterOnModel;
  IGStoryLikesController *_storyLikesController;
  NSObject<IGAlertHUDHandling> *_alertHandler;
  BOOL _sectionControllerVisible;
  NSNumber *_initialDevicePitch;
  double _highlightsInFeedStartingTime;
  BOOL _isViewerDisplayed;
  BOOL _dragStartedNearOrigin;
  IGStoryTrayPrefetchController *_scrollPrefetchController;
  NSObject<IGStoryTraySectionControllerViewerDelegate> *_viewerDelegate;
  NSObject<IGMainFeedStoryTrayLoggingContextProvider> *_mainFeedLoggingProvider;
  IGStoryDataController *_dataController;
  IGStoryViewerConfiguration *_storyViewerConfiguration;
  NSObject<IGStoryViewerPresentationAnimationProtocol><UIViewControllerAnimatedTransitioning><UIViewControllerTransitioningDelegate> *_animationController;
  UIView *_entryStoryView;
  UICollectionViewCell<IGStoryTrayBaseCell> *_selectedCell;
  double _viewerLaunchStartTime;
  IGMediaPreloader *_mediaPreloader;
  IGListSectionController<IGStorySectionControlling> *_nuxController;
  IGFavoritesPresentationManager *_favoritesPresentationManager;
  IGStoryTrayListAdapterDataSource *_listAdapterDataSource;
}

@property (retain, nonatomic) IGUserSession *userSession;
@property (retain, nonatomic) IGStoryTrayLoggingContext *loggingContext;
@property (readonly, weak, nonatomic) NSObject<IGStoryTraySectionControllerDelegate> *loggingDelegate;
@property (readonly, nonatomic) long long entryPoint;
@property (readonly, nonatomic) IGStoryTraySectionConfiguration *traySectionConfiguration;
@property (retain, nonatomic) IGStoryTrayViewModel *selectedItem;
@property (readonly, nonatomic) IGListAdapter *listAdapter;
@property (readonly, nonatomic) NSObject<IGStoryTrayDataSource> *dataSource;
@property (weak, nonatomic) NSObject<IGStoryTraySectionControllerActionDelegate> *actionDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)dealloc;
- (id)initWithUserSession:(id)session dataController:(id)controller dataSource:(id)source loggingContext:(id)context loggingDelegate:(id)delegate entryPoint:(long long)point traySectionConfiguration:(id)configuration storyViewerConfiguration:(id)configuration controllerDataSource:(id)source controllerDelegate:(id)delegate deleteAdActivityAdDelegate:(id)delegate;
- (void)_onAppBackgrounded:(id)backgrounded;
- (void)_onAppForegrounded:(id)foregrounded;
- (void)_reloadLiveStoryTrayCells;
- (id)allStoryItems;
- (void)storyTrayDataSourceWillUpdate:(id)update;
- (void)storyTrayDataSource:(id)source didUpdateWithRefreshType:(long long)type deliveryLoggingKey:(id)key;
- (void)storyTrayDataSource:(id)source didUpdateReel:(id)reel positionChanged:(BOOL)changed;
- (void)storyTrayDataSource:(id)source updateFailedWithRefreshType:(long long)type error:(id)error;
- (void)refreshTraySectionControllerWithStoryAdItems:(id)items;
- (void)storyDataController:(id)controller didUpdateWithRefreshType:(long long)type updateDuration:(double)duration storyRankToken:(id)token deliveryLoggingKey:(id)key;
- (void)storyDataController:(id)controller fetchTrayDidFailWithError:(id)error errorMessageToDisplay:(id)display httpStatusCode:(long long)code requestReason:(long long)reason refreshType:(long long)type updateDuration:(double)duration;
- (void)_logInFeedUnitEndCardIfNeededFromSource:(long long)source;
- (void)ownerImageViewDidLoadImageForPK:(id)pk;
- (void)ownerImageViewDidFailToLoadImageForPK:(id)pk;
- (void)storyDataController:(id)controller didUpdateReel:(id)reel refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller fetchItemsDidFailForReelPK:(id)pk error:(id)error refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didReturnNoStoryItemResultsForReelPK:(id)pk refreshType:(long long)type updateDuration:(double)duration;
- (void)storyDataController:(id)controller didStartPrefetchOnHeadloadWithReelPks:(id)pks;
- (void)storyDataControllerDidFinishPrefetchDelay;
- (void)storyDataController:(id)controller preloadMediaForReelPk:(id)pk preloadSurface:(id)surface;
- (void)storySeenStateStoreDidUpdateReelPK:(id)pk;
- (void)mediaPreloader:(id)preloader didLoadPhotoForItem:(id)item url:(id)url loadSource:(unsigned long long)source module:(id)module;
- (void)mediaPreloader:(id)preloader didFailPhotoForItem:(id)item url:(id)url module:(id)module;
- (void)mediaPreloader:(id)preloader didLoadVideoForItem:(id)item;
- (void)mediaPreloader:(id)preloader didFailVideoForItem:(id)item;
- (void)listAdapter:(id)adapter willDisplayObject:(id)object atIndex:(long long)index;
- (void)listAdapter:(id)adapter didEndDisplayingObject:(id)object atIndex:(long long)index;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint *)offset;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)_playMostVisibleCell;
- (id)animationControllerForPresentedController:(id)controller presentingController:(id)controller sourceController:(id)controller;
- (id)animationControllerForDismissedController:(id)controller;
- (id)presentationControllerForPresentedViewController:(id)controller presentingViewController:(id)controller sourceViewController:(id)controller;
- (void)postLiveFullScreenSectionController:(id)controller didSelectPostLiveItemCell:(id)cell;
- (void)postLiveFullScreenSectionController:(id)controller didLongPressPostLiveItemCell:(id)cell;
- (void)traySectionController:(id)controller didSelectCell:(id)cell;
- (void)traySectionController:(id)controller didLongPressCell:(id)cell;
- (void)traySectionController:(id)controller willDisplayCell:(id)cell;
- (void)traySectionController:(id)controller didEndDisplayingCell:(id)cell;
- (void)traySectionController:(id)controller didTapFollowButtonOnCell:(id)cell;
- (void)traySectionController:(id)controller didTapLikeButton:(id)button onCell:(id)cell;
- (void)traySectionController:(id)controller didEndPlayingAllMediaForCell:(id)cell;
- (void)didUpdateWithX:(double)x y:(double)y z:(double)z pitch:(double)pitch;
- (void)gyroMotionManagerDidUpdateWithRotationX:(double)x rotationY:(double)y rotationZ:(double)z;
- (void)gyroMotionManagerDidRaiseDevice;
- (void)gyroMotionManagerDidLowerDevice;
- (void)storyViewerDidTapTryItOn:(id)on onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)storyViewerDidTapViewDay:(id)day;
- (BOOL)storyViewerShouldPresentCamera:(id)camera;
- (void)storyViewer:(id)viewer didFocusOnReelWithPK:(id)pk;
- (void)storyViewer:(id)viewer didNavigateToStoryItem:(id)item;
- (void)storyViewerShouldRemoveEmptyStateStory:(id)story navigationAction:(long long)action;
- (void)storyViewerDidFinish:(id)finish navigationAction:(long long)action lastMediaID:(id)id viewerExitContextDict:(id)dict completion:(id /* block */)completion;
- (void)storyViewerDidMute:(id)mute didMutePosts:(BOOL)posts;
- (void)storyViewerDidUnfollow:(id)unfollow;
- (void)storyViewerDidFollow:(id)follow;
- (id)_typeStringForHighlightsUnit;
- (void)animatePendingPrivateStories;
- (double)contentOffset;
- (BOOL)isFirstItemVisible;
- (void)_trayCellDidTapAccessoryButton:(id)button;
- (id)storyCellForIndex:(long long)index;
- (id)storyCellForReelPK:(id)pk;
- (void)scrollToFrontAnimated:(BOOL)animated;
- (void)dataSourceWasUpdated;
- (void)presentStoryCreationWithHighlightsStickerForPK:(id)pk;
- (void)followController:(id)controller didCompleteAction:(long long)action success:(BOOL)success;
- (void)followControllerDidDetectNewButtonState:(id)state;
- (void)followController:(id)controller buttonWasTappedWithAction:(long long)action;
- (void)didTapEndCardForTrayViewModel:(id)model withCell:(id)cell;
@end

#endif /* IGStoryTrayController_h */
