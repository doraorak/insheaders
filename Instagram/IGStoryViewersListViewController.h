//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryViewersListViewController_h
#define IGStoryViewersListViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGBannerSectionControllerDelegate-Protocol.h"
#include "IGButtonSectionControllerDelegate-Protocol.h"
#include "IGCollectionViewLayoutConfigurationProvider-Protocol.h"
#include "IGCreationViewControllerNavigationDelegate-Protocol.h"
#include "IGDirectOutgoingUpdateListener-Protocol.h"
#include "IGDirectParticipantRequestsService.h"
#include "IGDirectThreadParticipantsRequestsController.h"
#include "IGDirectThreadParticipantsRequestsViewControllerDelegate-Protocol.h"
#include "IGLabelSectionControllerDelegate-Protocol.h"
#include "IGListAdapterDataSource-Protocol.h"
#include "IGListAdapterDelegate-Protocol.h"
#include "IGQPMegaphoneSectionControllerPresenter.h"
#include "IGQPMegaphoneSectionControllerPresenterDelegate-Protocol.h"
#include "IGRestrictedUserControllerListener-Protocol.h"
#include "IGSearchBarDelegate-Protocol.h"
#include "IGStoryCommentController.h"
#include "IGStoryFullscreenSectionLoggingContext.h"
#include "IGStoryHighlightsCreationControllerDelegate-Protocol.h"
#include "IGStoryItemType-Protocol.h"
#include "IGStoryPostCaptureEditingViewControllerDelegate-Protocol.h"
#include "IGStoryViewerPresentationController.h"
#include "IGStoryViewerSectionControllerViewerDelegate-Protocol.h"
#include "IGStoryViewersListController.h"
#include "IGStoryViewersListExpiredFooterView.h"
#include "IGTextViewSectionControllerDelegate-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"

@class IGAPIPollSticker, IGAPIStoryQuizDict, IGAPIStorySliderStickerDict, IGActionableConfirmationToastController, IGFullscreenSearchViewController, IGGenericMegaphone, IGListAdapter, IGPerformanceComponent, IGPerformanceNavigationLogger, IGPromptStickerViewerListModel, IGQPMegaphone, IGQuestionAnswerStickerModel, IGStoryFundraiserStickerModel, IGUserSession, NSArray, NSString, UICollectionView, UIView;
@protocol IGStoryViewerShareToFBControllerProtocol, IGStoryViewersListViewControllerDelegate;

@interface IGStoryViewersListViewController : IGViewController<IGButtonSectionControllerDelegate, IGDirectOutgoingUpdateListener, IGDirectThreadParticipantsRequestsViewControllerDelegate, IGLabelSectionControllerDelegate, IGListAdapterDataSource, IGListAdapterDelegate, IGRestrictedUserControllerListener, IGCreationViewControllerNavigationDelegate, IGSearchBarDelegate, IGStoryHighlightsCreationControllerDelegate, IGStoryPostCaptureEditingViewControllerDelegate, IGStoryViewerSectionControllerViewerDelegate, IGCollectionViewLayoutConfigurationProvider, IGBannerSectionControllerDelegate, UIScrollViewDelegate, IGQPMegaphoneSectionControllerPresenterDelegate, IGTextViewSectionControllerDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  NSObject<IGStoryItemType> *_item;
  IGStoryViewersListController *_listController;
  IGStoryViewerPresentationController *_storyPresentationController;
  NSArray *_votersModels;
  IGAPIPollSticker *_pollStickerModel;
  IGAPIStorySliderStickerDict *_sliderStickerModel;
  IGQuestionAnswerStickerModel *_questionAnswerStickerModel;
  IGAPIStoryQuizDict *_storyQuizSticker;
  IGStoryFundraiserStickerModel *_fundraiserStickerModel;
  NSArray *_storyLikers;
  NSArray *_hypes;
  IGStoryCommentController *_commentController;
  IGPromptStickerViewerListModel *_promptStickerListViewModel;
  NSString *_reelId;
  NSString *_reelTitle;
  long long _viewerViewModelType;
  IGStoryViewersListExpiredFooterView *_expiredFooterView;
  NSObject<IGStoryViewerShareToFBControllerProtocol> *_shareToFbController;
  IGActionableConfirmationToastController *_toastController;
  IGDirectParticipantRequestsService *_participantsRequestService;
  IGDirectThreadParticipantsRequestsController *_participantsRequestsController;
  NSString *_chatStickerThreadId;
  IGPerformanceNavigationLogger *_performanceLogger;
  IGPerformanceComponent *_throttlePerfComponent;
  IGPerformanceComponent *_fetchPerfComponent;
  IGPerformanceComponent *_listUpdateComponent;
  BOOL _didLogShareToFBUpsell;
  BOOL _didLogAutoXpostToFBUpsell;
  BOOL _didShowXpostingUnifiedOnboardingUpsellAfterLinking;
  BOOL _didShowXpostingUnifiedOrMigrationUpsell;
  NSString *_sessionId;
  NSString *_viewerSourceString;
  IGQPMegaphone *_qpMegaphone;
  IGQPMegaphoneSectionControllerPresenter *_qpMegaphoneSectionControllerPresenter;
  IGFullscreenSearchViewController *_searchViewController;
  NSString *_searchQuery;
  NSArray *_searchResults;
  BOOL _isServerSearchEnabled;
  BOOL _displayMultiAuthorStoriesMegaphone;
  UIView *_emptySearchResultsView;
  IGGenericMegaphone *_multiAuthorStoriesMegaphone;
}

@property (readonly, copy, nonatomic) NSString *analyticsModule;
@property (readonly, nonatomic) UICollectionView *collectionView;
@property (readonly, nonatomic) IGListAdapter *adapter;
@property (readonly, nonatomic) UIView *emptyStateView;
@property (readonly, nonatomic) IGStoryFullscreenSectionLoggingContext *loggingContext;
@property (retain, nonatomic) IGGenericMegaphone *genericMegaphone;
@property (nonatomic) BOOL isCurrentPageInPageViewController;
@property (weak, nonatomic) NSObject<IGStoryViewersListViewControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session analyticsModule:(id)module item:(id)item loggingContext:(id)context viewerSourceString:(id)string reelId:(id)id reelTitle:(id)title viewerViewModelType:(long long)type context:(id)context;
- (void)dealloc;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (id)collectionViewLayoutConfiguration;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentInsetAdjustmentForIndexPath:(id)path;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentInsetAdjustmentForIndexPath:(id)path inDirection:(long long)direction;
- (id)objectsForListAdapter:(id)adapter;
- (id)listAdapter:(id)adapter sectionControllerForObject:(id)object;
- (void)listAdapter:(id)adapter willDisplayObject:(id)object atIndex:(long long)index;
- (void)listAdapter:(id)adapter didEndDisplayingObject:(id)object atIndex:(long long)index;
- (id)emptyViewForListAdapter:(id)adapter;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)scrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint *)offset;
- (void)storyViewersListControllerScheduledInitialFetch;
- (void)storyViewersListControllerWillFetchFromSource:(long long)source;
- (void)storyViewersListControllerDidFinishFetchFromSource:(long long)source fetchedViewersCount:(long long)count success:(BOOL)success error:(id)error;
- (void)storyViewersListControllerDidReceiveGenericMegaphone:(id)megaphone;
- (void)storyViewersListControllerDidReceiveUpdatedViewerCount:(long long)count;
- (void)storyViewersListControllerDidReceiveUpdatedTapModels:(id)models;
- (void)storyViewersListControllerDidReceivePromptStickerParticipantList:(id)list;
- (void)storyViewersListControllerDidReceiveMultiAuthorViewers:(id)viewers learnMoreURL:(id)url;
- (void)storyViewersListControllerDidReceiveStoryLikers:(id)likers;
- (void)storyViewersListControllerDidReceiveStoryHypes:(id)hypes;
- (void)storyViewersListControllerDidFetchSearchResultsForQuery:(id)query results:(id)results;
- (void)storyEntryPointSectionController:(id)controller didTapButtonWithViewModel:(id)model;
- (void)storyViewerSectionController:(id)controller didTapViewerSource:(id)source;
- (void)storyViewerSectionController:(id)controller didTapCheckmarkButtonInViewerCell:(id)cell;
- (void)storyViewerSectionController:(id)controller didTapProductThumbnailInViewerCell:(id)cell;
- (void)storyViewerSectionController:(id)controller didHideViewerSource:(id)source;
- (void)storyViewerSectionController:(id)controller didMarkAsNotSpamViewerSource:(id)source;
- (void)storyViewerSectionController:(id)controller didDeleteStoryComment:(id)comment;
- (void)storyViewerSectionController:(id)controller didTapMoreButtonInViewerCell:(id)cell;
- (void)storyViewerSectionController:(id)controller didTapAddButtonInViewerCell:(id)cell;
- (void)storyViewerSectionController:(id)controller presentStoryForReel:(id)reel media:(id)media fromView:(id)view profilePictureView:(id)view;
- (void)storyViewerSectionController:(id)controller willDisplayViewerSource:(id)source position:(long long)position;
- (void)storyViewerSectionController:(id)controller didTapHeartButtonInViewerCell:(id)cell;
- (void)storyViewerSectionController:(id)controller didTapViewCommentLikes:(id)likes;
- (void)megaphoneSectionController:(id)controller didSelectButton:(id)button;
- (void)didDismissMegaphoneSectionController:(id)controller;
- (void)megaphoneSectionController:(id)controller logButtonClickIfNeeded:(id)needed;
- (void)settingNavigatorViewDidDelete:(id)delete;
- (void)didSelectLabelSectionController:(id)controller;
- (void)participantRequestsViewControllerWillDismiss:(id)dismiss;
- (void)participantRequestsViewControllerDidNavigateToThread:(id)thread;
- (void)participantRequestsApprovedInViewController:(id)controller;
- (void)didUpdateRequestedParticipants;
- (void)didReachMaxParticipants:(long long)participants remainingUsersSelected:(long long)selected;
- (void)didTapButtonInSectionController:(id)controller button:(id)button;
- (void)directMessageOutgoingUpdateDidSucceed:(id)succeed;
- (void)directThreadOutgoingUpdateDidSucceed:(id)succeed;
- (void)directMessageOutgoingUpdate:(id)update didFailWithError:(id)error;
- (void)directThreadOutgoingUpdate:(id)update didFailWithError:(id)error;
- (void)questionAnswerStickerResponsesSectionControllerDidTapSeeAllEndCardCell:(id)cell;
- (void)questionAnswerStickerResponsesSectionControllerDidRemoveAllResponses:(id)responses;
- (void)pollStickerV2SummarySectionControllerDidTapShare:(id)share;
- (void)pollStickerV2SummarySectionController:(id)controller didTapResultIndex:(unsigned long long)index;
- (void)pollStickerSummarySectionController:(id)controller didTapShareButton:(id)button;
- (void)pollStickerSummarySectionController:(id)controller didTapVoteOption:(long long)option;
- (void)quizStickerSummarySectionController:(id)controller didTapOptionAtIndex:(long long)index;
- (void)fundraiserStickerSummarySectionController:(id)controller didTapBeneficiary:(id)beneficiary;
- (void)fundraiserStickerSummarySectionControllerDidTapSayThanks:(id)thanks;
- (void)fundraiserStickerSummarySectionControllerDidTapAmountInfoIcon:(id)icon;
- (void)rightsManagerFlagInfoSectionControllerDidSelectSeeAllCountriesButton:(id)button;
- (void)rightsManagerFlagInfoSectionControllerDidSelectDeleteButton:(id)button;
- (void)rightsManagerFlagInfoSectionControllerDidSelectLearnMoreButton:(id)button;
- (void)didRestrictUser:(id)user;
- (void)didUnrestrictUser:(id)user;
- (void)storyPostCaptureEditingViewController:(id)controller didShareToStory:(long long)story andDirectRecipients:(id)recipients storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids exitPoint:(long long)point completion:(id /* block */)completion;
- (void)storyPostCaptureEditingViewControllerDidCancel:(id)cancel;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendRollCallWithDirectRecipients:(id)recipients;
- (void)storyPostCaptureEditingViewController:(id)controller didTapSendPermanentMediaWithAsset:(id)asset entryPoint:(long long)point;
- (void)storyPostCaptureEditingViewController:(id)controller didTapConfirmNotesPogVideoWithComposition:(id)composition;
- (void)storyViewersExpiredUpsellView:(id)view didTapActionButtonWithType:(long long)type;
- (void)addHighlightsSheet:(id)sheet didUpdateReelWithPK:(id)pk added:(BOOL)added title:(id)title coverURL:(id)url isOpalHighlight:(BOOL)highlight;
- (void)addHighlightsSheet:(id)sheet wantsNewReelWithTitle:(id)title cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect creationToken:(id)token isOpalHighlight:(BOOL)highlight;
- (void)addHighlightsSheetDidCancel:(id)cancel;
- (void)highlightsCreationControllerDidTapCancel:(id)cancel;
- (void)highlightsCreationControllerDidFinish:(id)finish mode:(long long)mode reel:(id)reel highlightCoverModel:(id)model;
- (void)highlightsCreationControllerDidEditSuggestedHighlight:(id)highlight addedItems:(id)items removedItems:(id)items title:(id)title coverModel:(id)model;
- (void)highlightsCreationController:(id)controller didPublishSuggestHighlightType:(long long)type;
- (void)creationViewController:(id)controller didDismissWithExitPoint:(long long)point destination:(long long)destination storySendTarget:(long long)target toDirectRecipients:(id)recipients image:(id)image storyModelArray:(id)array metadataArray:(id)array highlightIds:(id)ids completion:(id /* block */)completion;
- (void)creationViewController:(id)controller didEnterState:(long long)state;
- (void)creationViewController:(id)controller willShareToDirectRecipients:(id)recipients;
- (void)creationViewController:(id)controller didFinishWithExitPoint:(long long)point shouldAnimateTransition:(BOOL)transition isNavigationHandledByPresenter:(BOOL)presenter;
- (void)creationViewControllerWillDismiss:(id)dismiss;
- (void)didTapButton:(id)button;
- (void)didTapDismissButton:(id)button;
- (void)didTapBannerView:(id)view;
- (void)didUpdateMembersForMainList:(id)list;
- (void)didSelectTextViewSectionController:(id)controller;
- (void)textViewSectionController:(id)controller didTapOnString:(id)string URL:(id)url;
- (void)textViewSectionController:(id)controller didLongTapOnString:(id)string URL:(id)url;
- (void)textViewSectionController:(id)controller didTapOnNonLinkedString:(id)string touchEvent:(unsigned long long)event;
- (void)fbSupplementaryDidClickInfoButton:(id)button;
- (void)fbSupplementaryDidClickChevronButton:(id)button;
- (void)_didTapFacebookHeaderButton;
- (void)viewersListXSharingDidTapCloseButton;
- (void)viewersListShareStoryToFB;
- (void)viewersListReloadData;
- (BOOL)viewersListXSharingAreAccountsLinked;
- (void)viewersListShareStoryActionSheet;
- (void)viewersListAutoSharingDidTurnOnWithSuccess:(BOOL)success;
- (void)viewersListShowXpostingUnifiedOnboardingUpsellAfterLinking;
- (void)viewersListAutoSharingDidTapNotNowButton;
- (void)viewersListOpenAccountCenter;
- (void)shareToFBControllerWillShowLoginModal:(id)modal;
- (void)shareToFBControllerWillShowShareToFacebookAlert:(id)alert;
- (void)shareToFBControllerDidTapAlreadySharedToFacebook:(id)facebook;
- (void)shareToFBControllerDidCloseShareToFacebookAlert:(id)alert;
- (void)shareToFBControllerDidTapShareToFacebookAlert:(id)alert;
- (void)shareToFBControllerDidShowXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidTapNotNowForXpostingUpsell:(id)upsell shouldShowACLinkageToast:(BOOL)toast;
- (void)shareToFBControllerDidTapAutoShareForXpostingUpsellAfterLinking:(id)linking;
- (void)shareToFBControllerDidTapShareOnceForXpostingUpsellAfterLinking:(id)linking;
- (void)shareToFBControllerDidTapAutoShareForXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidTapShareOnceForXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidDismissXpostingUpsell:(id)upsell;
- (void)shareToFBControllerDidShowShareToFacebookOptionAlert:(id)alert;
- (void)shareToFBControllerDidTapShareOnceAlert:(id)alert;
- (void)shareToFBControllerDidTapNotNowAlert:(id)alert;
- (void)shareToFBControllerDidRequestShareToFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidFinishLoginForService:(id)service;
- (void)shareToFBControllerDidFailLoginForService:(id)service;
- (void)shareToFBControllerShareListNeedsFullReload:(id)reload;
- (void)shareToFBControllerDidRequestToShowShareToCloseFriendsFacebookActionsMenu:(id)menu;
- (void)shareToFBControllerDidRequestRemoveFromFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidRemoveFromFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidFailRemoveFromFacebookWithStoryItem:(id)item;
- (void)shareToFBControllerDidRequestToShowDestinationPicker:(id)picker;
- (void)shareToFBControllerDidFailShareToFacebookWithStoryItem:(id)item showAlert:(BOOL)alert;
- (id)viewControllerForShareConfiguration;
- (void)shareToFBControllerDidShareToFacebookWithStoryItem:(id)item showAlert:(BOOL)alert;
- (void)encodeWithCoder:(id)coder;
- (void)traitCollectionDidChange:(id)change;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)container;
- (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id)container;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)willTransitionToTraitCollection:(id)collection withTransitionCoordinator:(id)coordinator;
- (void)didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (void)setNeedsFocusUpdate;
- (void)updateFocusIfNeeded;
- (void)promptParticipantsListSectionController:(id)controller didTapOnCell:(id)cell onProfileView:(id)view;
- (void)willDisplayPaginationSpinner;
- (void)storyViewerDidFocusOnReelWithPK:(id)pk;
- (void)didDismissQpMegaphoneSectionControllerPresenter:(id)presenter;
- (BOOL)searchBarShouldBeginEditing:(id)editing;
- (void)searchBar:(id)bar didChangeSearchText:(id)text;
- (void)searchBarDidTapReturnKey:(id)key;
- (void)_dismissSearch;
@end

#endif /* IGStoryViewersListViewController_h */
