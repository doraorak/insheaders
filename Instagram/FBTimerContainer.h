//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBTimerContainer_h
#define FBTimerContainer_h
@import Foundation;

@class FBTimer;
@protocol {DelayedInitialisationWrapper<FBTimerConfiguration>="_value"{Optional<FBTimerConfiguration>="_storage"{Storage<FBTimerConfiguration, false, false, true>="hasValue"B""(?="emptyState"c"value"{FBTimerConfiguration="block"{Required<void (^)()>="_t"@?}"queue"{Required<NSObject<OS_dispatch_queue> *>="_t"@"NSObject<OS_dispatch_queue>"}"interval"{Required<double>="_t"d}"minimumAfterPause"d"tolerance"d"repeats"{Required<bool>="_t"B}"allowedRunModes"Q})}}};

@interface FBTimerContainer : NSObject {
  /* instance variables */
  FBTimer *_timer;
  struct DelayedInitialisationWrapper<FBTimerConfiguration> { struct Optional<FBTimerConfiguration> { struct Storage<FBTimerConfiguration, false, false, true> { BOOL hasValue; union { char emptyState; struct FBTimerConfiguration { struct Required<void (^)()> { id /* block */ _t; } block; struct Required<NSObject<OS_dispatch_queue> *> { NSObject<OS_dispatch_queue> *_t; } queue; struct Required<double> { double _t; } interval; double minimumAfterPause; double tolerance; struct Required<bool> { BOOL _t; } repeats; unsigned long long allowedRunModes; } value; } x0; } _storage; } _value; } _configuration;
}

/* instance methods */
- (id)initWithTimer:(id)timer configuration:(const void *)configuration;
@end

#endif /* FBTimerContainer_h */
