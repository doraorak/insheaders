//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTImageLoader_h
#define RCTImageLoader_h
@import Foundation;

#include "NativeImageLoaderIOSSpec-Protocol.h"
#include "RCTBridge.h"
#include "RCTBridgeModule-Protocol.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTImageCache-Protocol.h"
#include "RCTImageLoaderLoggableProtocol-Protocol.h"
#include "RCTImageLoaderProtocol-Protocol.h"
#include "RCTImageLoaderWithAttributionProtocol-Protocol.h"
#include "RCTImageRedirectProtocol-Protocol.h"
#include "RCTModuleRegistry.h"
#include "RCTViewRegistry.h"

@class NSArray, NSMutableArray, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface RCTImageLoader : NSObject<NativeImageLoaderIOSSpec, RCTImageLoaderWithAttributionProtocol, RCTBridgeModule, RCTImageLoaderProtocol, RCTImageLoaderLoggableProtocol> {
  /* instance variables */
  id /* block */ _loadersProvider;
  id /* block */ _decodersProvider;
  NSArray *_loaders;
  NSArray *_decoders;
  NSOperationQueue *_imageDecodeQueue;
  NSObject<OS_dispatch_queue> *_URLRequestQueue;
  NSObject<RCTImageCache> *_imageCache;
  NSMutableArray *_pendingTasks;
  long long _activeTasks;
  NSMutableArray *_pendingDecodes;
  long long _scheduledDecodes;
  unsigned long long _activeBytes;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _loadersMutex;
  NSObject<RCTImageRedirectProtocol> *_redirectDelegate;
}

@optional
@property (weak, nonatomic) RCTModuleRegistry *moduleRegistry;
@optional
@property (weak, nonatomic) RCTViewRegistry *viewRegistry_DEPRECATED;
@optional
@property (weak, nonatomic) RCTBundleManager *bundleManager;
@optional
@property (weak, nonatomic) RCTCallableJSModules *callableJSModules;
@optional
@property (readonly, weak, nonatomic) RCTBridge *bridge;
@optional
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned long long maxConcurrentLoadingTasks;
@property (nonatomic) unsigned long long maxConcurrentDecodingTasks;
@property (nonatomic) unsigned long long maxConcurrentDecodingBytes;

/* class methods */
+ (id)moduleName;
+ (void)load;
+ (BOOL)requiresMainQueueSetup;
+ (const struct RCTMethodInfo *)__rct_export__11780;
+ (const struct RCTMethodInfo *)__rct_export__11981;
+ (const struct RCTMethodInfo *)__rct_export__12182;
+ (const struct RCTMethodInfo *)__rct_export__12283;
+ (const struct RCTMethodInfo *)__rct_export__12554;

/* instance methods */
- (id)init;
- (id)initWithRedirectDelegate:(id)delegate;
- (id)initWithRedirectDelegate:(id)delegate loadersProvider:(id /* block */)provider decodersProvider:(id /* block */)provider;
- (void)setUp;
- (float)handlerPriority;
- (id)imageCache;
- (void)setImageCache:(id)cache;
- (id)imageURLLoaderForURL:(id)url;
- (id)imageDataDecoderForData:(id)data;
- (id /* block */)loadImageWithURLRequest:(id)urlrequest callback:(id /* block */)callback;
- (id /* block */)loadImageWithURLRequest:(id)urlrequest priority:(long long)priority callback:(id /* block */)callback;
- (id /* block */)loadImageWithURLRequest:(id)urlrequest size:(struct CGSize { double x0; double x1; })size scale:(double)scale clipped:(BOOL)clipped resizeMode:(long long)mode progressBlock:(id /* block */)block partialLoadBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (id /* block */)loadImageWithURLRequest:(id)urlrequest size:(struct CGSize { double x0; double x1; })size scale:(double)scale clipped:(BOOL)clipped resizeMode:(long long)mode priority:(long long)priority progressBlock:(id /* block */)block partialLoadBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (void)dequeueTasks;
- (id)_loadImageOrDataWithURLRequest:(id)urlrequest size:(struct CGSize { double x0; double x1; })size scale:(double)scale resizeMode:(long long)mode priority:(long long)priority attribution:(const void *)attribution progressBlock:(id /* block */)block partialLoadBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (id /* block */)_loadURLRequest:(id)urlrequest progressBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (id)loadImageWithURLRequest:(id)urlrequest size:(struct CGSize { double x0; double x1; })size scale:(double)scale clipped:(BOOL)clipped resizeMode:(long long)mode priority:(long long)priority attribution:(const void *)attribution progressBlock:(id /* block */)block partialLoadBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (BOOL)shouldEnablePerfLoggingForRequestUrl:(id)url;
- (void)trackURLImageVisibilityForRequest:(id)request imageView:(id)view;
- (void)trackURLImageRequestDidDestroy:(id)destroy;
- (void)trackURLImageDidDestroy:(id)destroy;
- (id /* block */)decodeImageData:(id)data size:(struct CGSize { double x0; double x1; })size scale:(double)scale clipped:(BOOL)clipped resizeMode:(long long)mode completionBlock:(id /* block */)block;
- (id /* block */)getImageSizeForURLRequest:(id)urlrequest block:(id /* block */)block;
- (id)getImageCacheStatus:(id)status;
- (BOOL)canHandleRequest:(id)request;
- (id)sendRequest:(id)request withDelegate:(id)delegate;
- (void)cancelRequest:(id)request;
- (struct shared_ptr<facebook::react::TurboModule> { struct TurboModule * x0; struct __shared_weak_count * x1; })getTurboModule:(const void *)module;
- (void)getSize:(id)size resolve:(id /* block */)resolve reject:(id /* block */)reject;
- (void)getSizeWithHeaders:(id)headers headers:(id)headers resolve:(id /* block */)resolve reject:(id /* block */)reject;
- (void)prefetchImage:(id)image resolve:(id /* block */)resolve reject:(id /* block */)reject;
- (void)prefetchImageWithMetadata:(id)metadata queryRootName:(id)name rootTag:(double)tag resolve:(id /* block */)resolve reject:(id /* block */)reject;
- (void)queryCache:(id)cache resolve:(id /* block */)resolve reject:(id /* block */)reject;
@end

#endif /* RCTImageLoader_h */
