//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MWALinkSecurer_h
#define MWALinkSecurer_h
@import Foundation;

#include "MWACipherBuffers.h"
#include "MWALinkSecurerDelegate-Protocol.h"
#include "MWALinkSetupService.h"
#include "NSObject-Protocol.h"

@class NSString;
@protocol {shared_ptr<datax::Connection>="__ptr_"^{Connection}"__cntrl_"^{__shared_weak_count}}, {vector<unsigned char, std::allocator<unsigned char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::allocator<unsigned char>>="__value_"*}};

@interface MWALinkSecurer : NSObject<NSObject> {
  /* instance variables */
  MWACipherBuffers *_cipherBuffers;
  struct shared_ptr<datax::Connection> { struct Connection *__ptr_; struct __shared_weak_count *__cntrl_; } _connection;
  MWALinkSetupService *_setupService;
  struct vector<unsigned char, std::allocator<unsigned char>> { char *__begin_; char *__end_; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char *__value_; } __end_cap_; } _receiveFragment;
}

@property (weak, nonatomic) NSObject<MWALinkSecurerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConnection:(struct datax_connection *)connection internalLock:(id)lock sendLock:(id)lock;
- (id)initWithSharedConnection:(struct shared_ptr<datax::Connection> { struct Connection * x0; struct __shared_weak_count * x1; })connection;
- (unsigned short)write:(id)write;
- (void)start;
- (void)stop;
- (void)linkSetupService:(id)service isReadyToEncrypt:(struct unique_ptr<airshield::stream::ManualFraming, std::default_delete<airshield::stream::ManualFraming>> { struct __compressed_pair<airshield::stream::ManualFraming *, std::default_delete<airshield::stream::ManualFraming>> { struct ManualFraming * x0; } x0; })encrypt;
- (void)linkSetupService:(id)service isReadyToDecrypt:(struct unique_ptr<airshield::stream::ManualFraming, std::default_delete<airshield::stream::ManualFraming>> { struct __compressed_pair<airshield::stream::ManualFraming *, std::default_delete<airshield::stream::ManualFraming>> { struct ManualFraming * x0; } x0; })decrypt;
- (void)linkSetupService:(id)service failedWithError:(id)error;
- (void)linkSetupServiceEnded:(id)ended;
@end

#endif /* MWALinkSecurer_h */
