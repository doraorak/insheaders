//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGSundialSingleVideoClipEditorViewController_h
#define IGSundialSingleVideoClipEditorViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAssetPlayerViewDelegate-Protocol.h"
#include "IGStoryAudioPlayerDelegate-Protocol.h"
#include "IGSundialCapturePreviewPlaybackProgressIndicator.h"
#include "IGSundialEdgeTapNavigationView.h"
#include "IGSundialSingleVideoClipEditorControlsOverlayView.h"
#include "IGSundialSingleVideoClipEditorViewControllerDelegate-Protocol.h"
#include "IGSundialSingleVideoClipEditorViewControlling-Protocol.h"
#include "IGSundialVideoClipEditorCaptionLoadingIndicator.h"
#include "IGSundialVideoTrimmerDelegate-Protocol.h"
#include "IGSundialVideoTrimmingFooterView.h"
#include "IGTransitionZoomFromCapable-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class IGAssetPlayerView, IGAsyncTask, IGAudioBrowserCameraLogger, IGCameraInstructionView, IGGradientView, IGMediaTextButton, IGScrollingSelectorView, IGSimpleVideoPlayerView, IGStoryAudioPlayer, IGStoryMediaLoadingIndicatorView, IGSundialRemixedVideo, IGSundialRemixedVideoWatermarkView, IGSundialVideoClip, IGUserSession, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, PHAsset, UIImage, UIImageView, UIImpactFeedbackGenerator, UILabel, UIPanGestureRecognizer, UITapGestureRecognizer, UIView, UIVisualEffectView;

@interface IGSundialSingleVideoClipEditorViewController : IGViewController<IGAssetPlayerViewDelegate, IGSundialVideoTrimmerDelegate, IGStoryAudioPlayerDelegate, UIGestureRecognizerDelegate, IGTransitionZoomFromCapable, IGSundialSingleVideoClipEditorViewControlling> {
  /* instance variables */
  IGUserSession *_userSession;
  double _maxOverallDuration;
  unsigned long long _initialClipIndex;
  IGSundialVideoClip *_untrimmedCurrentClip;
  IGGradientView *_gradientBackgroundView;
  UIVisualEffectView *_blurView;
  IGSundialVideoClip *_lastCompositionVideoClip;
  UIImageView *_ghostModeImageView;
  IGAsyncTask *_audioAsset;
  IGSundialRemixedVideo *_remixedVideo;
  IGAsyncTask *_audioBrowserCatalogRequest;
  IGAudioBrowserCameraLogger *_audioBrowserCameraLogger;
  IGSundialEdgeTapNavigationView *_edgeTapNavigationView;
  UIView *_videoPreviewWrapperView;
  IGAssetPlayerView *_videoPlayerView;
  IGStoryAudioPlayer *_musicAudioPlayer;
  UIImageView *_previewImageView;
  IGStoryMediaLoadingIndicatorView *_loadingIndicatorView;
  IGSimpleVideoPlayerView *_remixedVideoPlayer;
  IGSundialRemixedVideoWatermarkView *_remixStickerWatermark;
  IGMediaTextButton *_cancelButton;
  IGMediaTextButton *_trimButton;
  IGMediaTextButton *_nextButton;
  IGSundialCapturePreviewPlaybackProgressIndicator *_playbackProgressIndicator;
  IGSundialVideoTrimmingFooterView *_videoTrimmingFooterView;
  UILabel *_videoClipCountLabel;
  UIView *_timeIndicatorLabelWrapperView;
  UILabel *_timeIndicatorLabel;
  UILabel *_v3TimelinePlaybackTimeLabel;
  double _currentTimeBeforeTrim;
  BOOL _isTrimming;
  UIPanGestureRecognizer *_scrubGesture;
  UITapGestureRecognizer *_tapGesture;
  UIImpactFeedbackGenerator *_feedbackGenerator;
  IGSundialSingleVideoClipEditorControlsOverlayView *_controlsOverlayView;
  struct CGPoint { double x; double y; } _mediaOffsetFromCenter;
  double _mediaRotation;
  double _mediaScale;
  struct CGPoint { double x; double y; } _mediaAnchorPoint;
  NSMutableArray *_loadedAVAssets;
  IGSundialVideoClipEditorCaptionLoadingIndicator *_captionLoadingIndicator;
  NSDictionary *_audios;
  IGScrollingSelectorView *_livePhotoToolsView;
  IGCameraInstructionView *_livePhotoModesInstructionView;
  BOOL _livePhotoToolsInitialized;
  NSMutableDictionary *_livePhotoModesConvertedClips;
  double _capturePreviewCornerRadius;
  struct { IGStrictUserFlowLogger *strictLogger; unsigned long long userFlowInstanceId; } _applyAudioLogger;
  NSString *_videoClipCountLabelText;
}

@property (nonatomic) BOOL loadingIndicatorViewVisible;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSDictionary *magicMoveSubviews;
@property (weak, nonatomic) NSObject<IGSundialSingleVideoClipEditorViewControllerDelegate> *delegate;
@property (readonly, copy, nonatomic) NSArray *videoClips;
@property (readonly, nonatomic) BOOL videoClipsEdited;
@property (readonly, nonatomic) long long currentClipIndex;
@property (retain, nonatomic) UIImage *previewImage;
@property (nonatomic) BOOL showControlsOverlay;
@property (nonatomic) BOOL showTrimButton;
@property (nonatomic) BOOL showSpeedPicker;
@property (nonatomic) BOOL enableEdgeTapNavigation;
@property (nonatomic) BOOL isAudioDisabled;
@property (nonatomic) double totalDurationOfVideoClips;
@property (nonatomic) double originalMediaDuration;
@property (nonatomic) BOOL showClipCountLabel;
@property (nonatomic) BOOL muteAudioPlayer;
@property (retain, nonatomic) NSString *rightTrimButtonText;
@property (retain, nonatomic) PHAsset *livePhotoAsset;
@property (nonatomic) BOOL showMusicButton;
@property (nonatomic) BOOL isPrecapture;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentRegion;

/* instance methods */
- (id)initWithVideoClips:(id)clips initialClipIndex:(unsigned long long)index maxOverallDuration:(double)duration userSession:(id)session;
- (id)initWithVideoClips:(id)clips lastCompositionVideoClip:(id)clip audioAsset:(id)asset audioTrackClips:(id)clips remixedVideo:(id)video initialClipIndex:(unsigned long long)index maxOverallDuration:(double)duration userSession:(id)session;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewDidLayoutSubviews;
- (void)assetPlayerView:(id)view didPlayToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)assetPlayerViewDidPlayToEnd:(id)end;
- (void)assetPlayerView:(id)view effectivePlaybackRateDidChange:(double)change;
- (void)assetPlayerViewAssetLoaded:(id)loaded;
- (void)assetPlayerViewPlayStateDidChange:(id)change;
- (void)assetPlayerView:(id)view readyToSyncAndPlay:(BOOL)play;
- (void)_didTapTrimButton:(id)button;
- (void)_didTapNextButton:(id)button;
- (void)_didTapCancelButton:(id)button;
- (void)videoTrimmerDidBeginTrimming:(id)trimming;
- (void)videoTrimmerDidEndTrimming:(id)trimming;
- (void)videoTrimmer:(id)trimmer didScrubPlayheadToTime:(double)time;
- (void)videoTrimmer:(id)trimmer didUpdateAmountTrimmedFromStart:(double)start amountTrimmedFromEnd:(double)end;
- (void)pickerButtonDidExpandPicker:(id)picker;
- (void)pickerButtonDidCollapsePicker:(id)picker;
- (void)pickerButton:(id)button didSelectItemAtIndex:(unsigned long long)index;
- (void)storyAudioPlayer:(id)player didDetermineAssetPlayabilityStatus:(BOOL)status;
- (void)storyAudioPlayer:(id)player didUpdateToPlaybackTime:(double)time;
- (void)storyAudioPlayer:(id)player didUpdateStallState:(BOOL)state;
- (void)storyAudioPlayerDidPlayToEnd:(id)end;
- (void)storyAudioPlayer:(id)player didDetermineDuration:(double)duration ofAsset:(id)asset;
- (void)storyAudioPlayer:(id)player effectivePlaybackRateDidChange:(double)change;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)_handleTapGesture:(id)gesture;
- (void)_handleScrubGesture:(id)gesture;
- (void)_didTapScaleToFillButton:(id)button;
- (void)_didTapMusicButton;
- (void)_didTapGhostButton;
- (BOOL)edgeTapNavigationView:(id)view tapNavigationGestureCanBegin:(id)begin;
- (void)edgeTapNavigationView:(id)view didTapEdge:(unsigned long long)edge;
- (void)zoomTransitionWillPrepareWithContext:(id)context;
- (void)zoomTransitionWillBeginWithContext:(id)context;
- (void)prepareBackwardZoomTransitionWithContext:(id)context completionHandler:(id /* block */)handler;
- (id)transitionZoomViewFromItem:(id)item withZoomContext:(id)context shouldMoveToVisiblePosition:(BOOL)position;
- (BOOL)shouldZoomFromTransition;
- (void)didCompleteBackwardZoomTransition;
- (long long)numberOfItemsInScrollingSelectorView:(id)view;
- (id)scrollingSelectorView:(id)view itemAtIndexPath:(id)path;
- (void)scrollingSelectorView:(id)view didChangeSelectedIndexPath:(id)path;
- (BOOL)scrollingSelectorView:(id)view shouldSelectItemAtIndexPath:(id)path;
- (void)scrollingSelectorView:(id)view didEndScrollingAtIndexPath:(id)path;
- (void)scrollingSelectorView:(id)view didSelectItemAtIndexPath:(id)path;
- (void)scrollingSelectorView:(id)view didTapItemAtIndexPath:(id)path;
- (void)audioBrowserViewController:(id)controller didSelectAudioTrack:(id)track;
- (void)audioBrowserViewController:(id)controller didTapAudioTrack:(id)track context:(struct { id x0; id x1; id x2; id x3; id x4; id x5; id x6; long long x7; long long x8; unsigned long long x9; BOOL x10; })context;
- (void)sundialAudioPreCaptureEditorDidTapDismissButton:(id)button;
- (void)sundialAudioPreCaptureEditor:(id)editor didTapDoneButtonWithAudioTrackClip:(id)clip;
- (void)editNewClip:(id)clip maxDuration:(double)duration;
- (void)prepareToDisplayNextVideoWithPreviewImage:(id)image;
@end

#endif /* IGSundialSingleVideoClipEditorViewController_h */
