//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGPasswordLoginLandingViewController_h
#define IGPasswordLoginLandingViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAPIClient-Protocol.h"
#include "IGAuthenticationLoginManager.h"
#include "IGKeyboardObserverHideDelegate-Protocol.h"
#include "IGKeyboardObserverShowDelegate-Protocol.h"
#include "IGPasswordLoginLandingView.h"

@class IGAuthenticator, IGDeviceSession, IGKeyboardObserver, IGRegistrationLogger, NSString;
@protocol IGAuthenticationFlowDismissDelegate, IGPasswordLoginLandingViewControllerDelegate;

@interface IGPasswordLoginLandingViewController : IGViewController<IGKeyboardObserverShowDelegate, IGKeyboardObserverHideDelegate> {
  /* instance variables */
  NSString *_username;
  NSString *_profilePictureURL;
  NSObject<IGAPIClient> *_networker;
  IGAuthenticator *_authenticator;
  IGRegistrationLogger *_logger;
  IGPasswordLoginLandingView *_containerView;
  IGKeyboardObserver *_keyboardObserver;
  NSString *_stepName;
  IGAuthenticationLoginManager *_loginManager;
  NSString *_password;
  NSObject<IGAuthenticationFlowDismissDelegate> *_flowDismissDelegate;
  IGDeviceSession *_deviceSession;
}

@property (weak, nonatomic) NSObject<IGPasswordLoginLandingViewControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUsername:(id)username profilePictureURL:(id)url deviceSession:(id)session networker:(id)networker authenticator:(id)authenticator logger:(id)logger flowDismissDelegate:(id)delegate;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (BOOL)prefersNavigationBarHidden;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)keyboardObserverKeyboardDidShow:(id)show;
- (void)keyboardObserverKeyboardDidHide:(id)hide;
- (void)keyboardObserver:(id)observer keyboardWillShowWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserver:(id)observer keyboardWillHideWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)passwordLoginLandingView:(id)view didTapLoginWithPassword:(id)password;
- (void)passwordLoginLandingViewDidTapRecoveryButton:(id)button;
- (void)passwordLoginLandingViewDidTapSwitchAccountButton:(id)button;
- (void)passwordLoginLandingViewDidTapSignUpButton:(id)button;
- (BOOL)loginResponseHandler:(id)handler hasFirstPartyFBLoginTokenForUser:(id)user;
- (void)loginResponseHandler:(id)handler didHandleTwoFactorInfo:(id)info;
- (void)loginResponseHandler:(id)handler didHandleResetPasswordWithBundle:(id)bundle;
- (void)loginResponseHandlerDidTriggerAccountRecovery:(id)recovery;
- (void)loginResponseHandlerDidSwitchToSignUpAfterFailure:(id)failure;
- (void)loginResponseHandler:(id)handler didReactivateAccountWithStopDeletionToken:(id)token;
- (void)loginResponseHandlerDidTriggerFbLogin:(id)login forUser:(id)user;
- (void)loginResponseHandlerDidFailOneTapLogin:(id)login;
- (void)loginResponseHandlerDidHandleBadPassword:(id)password;
- (void)loginManager:(id)manager didAttemptToLoginWithUsernameAndPassword:(BOOL)password;
- (void)loginManager:(id)manager authenticationFailureWithError:(id)error responseDict:(id)dict notification:(id)notification currentUserSession:(id)session;
- (void)loginManagerAttemptToLoginFailed:(id)failed;
- (void)loginManager:(id)manager didAttemptToLoginFromLink:(BOOL)link;
- (void)loginManager:(id)manager biometricsLoginFailedForUsername:(id)username;
- (void)loginManager:(id)manager didAttemptToLoginWithUsername:(id)username;
- (void)loginManager:(id)manager didLoginWithUsernameAndPasswordWithSession:(id)session;
@end

#endif /* IGPasswordLoginLandingViewController_h */
