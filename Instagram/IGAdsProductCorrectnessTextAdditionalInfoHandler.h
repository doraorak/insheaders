//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGAdsProductCorrectnessTextAdditionalInfoHandler_h
#define IGAdsProductCorrectnessTextAdditionalInfoHandler_h
@import Foundation;

@class UIView;

@interface IGAdsProductCorrectnessTextAdditionalInfoHandler : NSObject {
  /* instance variables */
  UIView *_view;
  long long _totalLineCount;
}

/* instance methods */
- (id)initWithView:(id)view totalLineCount:(long long)count;
- (BOOL)populateAdditionalInfo:(id)info;
- (struct TpccomponentshapeTypeNoBuilder { struct optional<double> { union { char x0; double x1; } x0; BOOL x1; } x0; id x1; id x2; id x3; id x4; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x5; id x6; struct Required<NSString *> { id x0; } x7; id x8; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x9; struct optional<double> { union { char x0; double x1; } x0; BOOL x1; } x10; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x11; id x12; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x13; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x14; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x15; struct Required<double> { double x0; } x16; id x17; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x18; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x19; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x20; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x21; id x22; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x23; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x24; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x25; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x26; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x27; id x28; struct optional<std::vector<StructuredLogger::TtextcolorshapeTypeNoBuilder>> { union { char x0; struct vector<StructuredLogger::TtextcolorshapeTypeNoBuilder, std::allocator<StructuredLogger::TtextcolorshapeTypeNoBuilder>> { struct TtextcolorshapeTypeNoBuilder * x0; struct TtextcolorshapeTypeNoBuilder * x1; struct __compressed_pair<StructuredLogger::TtextcolorshapeTypeNoBuilder *, std::allocator<StructuredLogger::TtextcolorshapeTypeNoBuilder>> { struct TtextcolorshapeTypeNoBuilder * x0; } x2; } x1; } x0; BOOL x1; } x29; id x30; id x31; struct optional<double> { union { char x0; double x1; } x0; BOOL x1; } x32; id x33; id x34; id x35; struct optional<StructuredLogger::PostimpressionviewtrackingnodeEnum> { union { char x0; int x1; } x0; BOOL x1; } x36; struct Required<double> { double x0; } x37; struct Required<double> { double x0; } x38; struct Required<double> { double x0; } x39; })populateEventPayload:(struct TpccomponentshapeTypeNoBuilder { struct optional<double> { union { char x0; double x1; } x0; BOOL x1; } x0; id x1; id x2; id x3; id x4; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x5; id x6; struct Required<NSString *> { id x0; } x7; id x8; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x9; struct optional<double> { union { char x0; double x1; } x0; BOOL x1; } x10; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x11; id x12; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x13; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x14; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x15; struct Required<double> { double x0; } x16; id x17; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x18; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x19; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x20; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x21; id x22; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x23; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x24; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x25; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x26; struct optional<long long> { union { char x0; long long x1; } x0; BOOL x1; } x27; id x28; struct optional<std::vector<StructuredLogger::TtextcolorshapeTypeNoBuilder>> { union { char x0; struct vector<StructuredLogger::TtextcolorshapeTypeNoBuilder, std::allocator<StructuredLogger::TtextcolorshapeTypeNoBuilder>> { struct TtextcolorshapeTypeNoBuilder * x0; struct TtextcolorshapeTypeNoBuilder * x1; struct __compressed_pair<StructuredLogger::TtextcolorshapeTypeNoBuilder *, std::allocator<StructuredLogger::TtextcolorshapeTypeNoBuilder>> { struct TtextcolorshapeTypeNoBuilder * x0; } x2; } x1; } x0; BOOL x1; } x29; id x30; id x31; struct optional<double> { union { char x0; double x1; } x0; BOOL x1; } x32; id x33; id x34; id x35; struct optional<StructuredLogger::PostimpressionviewtrackingnodeEnum> { union { char x0; int x1; } x0; BOOL x1; } x36; struct Required<double> { double x0; } x37; struct Required<double> { double x0; } x38; struct Required<double> { double x0; } x39; })payload withData:(id)data;
@end

#endif /* IGAdsProductCorrectnessTextAdditionalInfoHandler_h */
