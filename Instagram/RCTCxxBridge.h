//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCTCxxBridge_h
#define RCTCxxBridge_h
@import Foundation;

#include "RCTBridge.h"
#include "RCTBridge.h"
#include "RCTBundleManager.h"
#include "RCTCallableJSModules.h"
#include "RCTDisplayLink.h"
#include "RCTModuleDataCallInvokerProvider-Protocol.h"
#include "RCTModuleRegistry.h"
#include "RCTPerformanceLogger.h"
#include "RCTViewRegistry.h"

@class NSMutableArray, NSMutableDictionary, NSString, NSThread;
@protocol RCTTurboModuleRegistry, {atomic<long>="__a_"{__cxx_atomic_impl<long, std::__cxx_atomic_base_impl<long>>="__a_value"Aq}}, {shared_ptr<facebook::react::Instance>="__ptr_"^{Instance}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<facebook::react::RCTMessageThread>="__ptr_"^{RCTMessageThread}"__cntrl_"^{__shared_weak_count}};

@interface RCTCxxBridge : RCTBridge<RCTModuleDataCallInvokerProvider> {
  /* instance variables */
  BOOL _didInvalidate;
  BOOL _moduleRegistryCreated;
  NSMutableArray *_pendingCalls;
  struct atomic<long> { struct __cxx_atomic_impl<long, std::__cxx_atomic_base_impl<long>> { atomic  __a_value; long long x0; } __a_; } _pendingCount;
  NSMutableDictionary *_moduleDataByName;
  NSMutableArray *_moduleDataByID;
  NSMutableArray *_moduleClassesByID;
  unsigned long long _modulesInitializedOnMainQueue;
  RCTDisplayLink *_displayLink;
  NSThread *_jsThread;
  struct shared_ptr<facebook::react::RCTMessageThread> { struct RCTMessageThread *__ptr_; struct __shared_weak_count *__cntrl_; } _jsMessageThread;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _moduleRegistryLock;
  struct shared_ptr<facebook::react::Instance> { struct Instance *__ptr_; struct __shared_weak_count *__cntrl_; } _reactInstance;
  NSObject<RCTTurboModuleRegistry> *_turboModuleRegistry;
  RCTModuleRegistry *_objCModuleRegistry;
  RCTViewRegistry *_viewRegistry_DEPRECATED;
  RCTBundleManager *_bundleManager;
  RCTCallableJSModules *_callableJSModules;
  BOOL _loading;
  BOOL _valid;
  NSString *_bridgeDescription;
  RCTPerformanceLogger *_performanceLogger;
}

@property (readonly, weak, nonatomic) RCTBridge *parentBridge;
@property (readonly, nonatomic) BOOL moduleSetupComplete;
@property (readonly, nonatomic) void * runtime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)runRunLoop;

/* instance methods */
- (id)moduleRegistry;
- (void)setRCTTurboModuleRegistry:(id)registry;
- (id)bridgeModuleDecorator;
- (struct shared_ptr<facebook::react::MessageQueueThread> { struct MessageQueueThread * x0; struct __shared_weak_count * x1; })jsMessageThread;
- (BOOL)isInspectable;
- (id)initWithParentBridge:(id)bridge;
- (void)dealloc;
- (void)_tryAndHandleError:(id /* block */)error;
- (void)handleMemoryWarning;
- (void)ensureOnJavaScriptThread:(id /* block */)thread;
- (void)start;
- (void)loadSource:(id /* block */)source onProgress:(id /* block */)progress;
- (id)moduleClasses;
- (id)moduleDataForName:(id)name;
- (id)moduleForName:(id)name;
- (id)moduleForName:(id)name lazilyLoadIfNecessary:(BOOL)necessary;
- (BOOL)moduleIsInitialized:(Class)initialized;
- (id)moduleForClass:(Class)class;
- (struct shared_ptr<facebook::react::ModuleRegistry> { struct ModuleRegistry * x0; struct __shared_weak_count * x1; })_buildModuleRegistryUnlocked;
- (void)_initializeBridge:(struct shared_ptr<facebook::react::JSExecutorFactory> { struct JSExecutorFactory * x0; struct __shared_weak_count * x1; })bridge parentInspectorTarget:(void *)target;
- (void)_initializeBridgeLocked:(struct shared_ptr<facebook::react::JSExecutorFactory> { struct JSExecutorFactory * x0; struct __shared_weak_count * x1; })locked parentInspectorTarget:(void *)target;
- (void)updateModuleWithInstance:(id)instance;
- (id)registerModulesForClasses:(id)classes;
- (id)_registerModulesForClasses:(id)classes lazilyDiscovered:(BOOL)discovered;
- (void)registerExtraModules;
- (void)registerExtraLazyModules;
- (id)_initializeModules:(id)modules withDispatchGroup:(id)group lazilyDiscovered:(BOOL)discovered;
- (void)registerAdditionalModuleClasses:(id)classes;
- (void)_prepareModulesWithDispatchGroup:(id)group;
- (void)registerModuleForFrameUpdates:(id)updates withModuleData:(id)data;
- (void)executeSourceCode:(id)code withSourceURL:(id)url sync:(BOOL)sync;
- (void)handleError:(id)error;
- (id)initWithDelegate:(id)delegate bundleURL:(id)url moduleProvider:(id /* block */)provider launchOptions:(id)options;
- (id)initWithBundleURL:(id)url moduleProvider:(id /* block */)provider launchOptions:(id)options;
- (void)setUp;
- (Class)executorClass;
- (void)setExecutorClass:(Class)class;
- (id)bundleURL;
- (void)setBundleURL:(id)url;
- (id)delegate;
- (void)dispatchBlock:(id /* block */)block queue:(id)queue;
- (void)invalidate;
- (void)logMessage:(id)message level:(id)level;
- (void)_runAfterLoad:(id /* block */)load;
- (void)logStartupFinish;
- (void)_flushPendingCalls;
- (void)enqueueJSCall:(id)jscall method:(id)method args:(id)args completion:(id /* block */)completion;
- (void)enqueueCallback:(id)callback args:(id)args;
- (void)_immediatelyCallTimer:(id)timer;
- (void)enqueueApplicationScript:(id)script url:(id)url onComplete:(id /* block */)complete;
- (void)executeApplicationScriptSync:(id)sync url:(id)url;
- (void)executeApplicationScript:(id)script url:(id)url async:(BOOL)async;
- (void)registerSegmentWithId:(unsigned long long)id path:(id)path;
- (void)partialBatchDidFlush;
- (void)batchDidComplete;
- (void)startProfiling;
- (void)stopProfiling:(id /* block */)profiling;
- (BOOL)isBatchActive;
- (void)invokeAsync:(void *)async;
- (struct shared_ptr<facebook::react::CallInvoker> { struct CallInvoker * x0; struct __shared_weak_count * x1; })jsCallInvoker;
- (struct shared_ptr<facebook::react::NativeMethodCallInvoker> { struct NativeMethodCallInvoker * x0; struct __shared_weak_count * x1; })decorateNativeMethodCallInvoker:(struct shared_ptr<facebook::react::NativeMethodCallInvoker> { struct NativeMethodCallInvoker * x0; struct __shared_weak_count * x1; })invoker;
- (id)callInvokerForModuleData:(id)data;
- (id)bridgeDescription;
- (void)setBridgeDescription:(id)description;
- (BOOL)isLoading;
- (id)performanceLogger;
- (BOOL)isValid;
@end

#endif /* RCTCxxBridge_h */
