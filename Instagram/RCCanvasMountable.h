//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef RCCanvasMountable_h
#define RCCanvasMountable_h
@import Foundation;

#include "RCMountable.h"

@protocol {Optional<Canvas::CanvasBuilder>="_storage"{Storage<Canvas::CanvasBuilder, false, false, false>="hasValue"Q""(?="emptyState"c"value"{CanvasBuilder="canvasBuilder"@?})}};

@interface RCCanvasMountable : RCMountable {
  /* instance variables */
  struct Optional<Canvas::CanvasBuilder> { struct Storage<Canvas::CanvasBuilder, false, false, false> { unsigned long long hasValue; union { char emptyState; struct CanvasBuilder { id /* block */ canvasBuilder; } value; } x0; } _storage; } _canvasBuilder;
}

/* class methods */
+ (id)newWithCanvasBuilder:(struct CanvasBuilder *)builder;

/* instance methods */
- (struct RCLayout { id x0; struct CGSize { double x0; double x1; } x1; struct shared_ptr<const std::vector<RCLayoutChild>> { void * x0; struct __shared_weak_count * x1; } x2; id x3; })layoutThatFits:(struct RCSizeRange { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fits parentSize:(struct CGSize { double x0; double x1; })size;
- (struct MountResult { BOOL x0; struct MountContext { struct shared_ptr<RC::ViewManager> { struct ViewManager * x0; struct __shared_weak_count * x1; } x0; struct CGPoint { double x0; double x1; } x1; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x2; BOOL x3; struct MountAnalyticsContext * x4; } x1; })mountInContext:(const void *)context layout:(const void *)layout supercomponent:(id)supercomponent;
@end

#endif /* RCCanvasMountable_h */
