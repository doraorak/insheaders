//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef AEEmbodimentStructuredLogger_h
#define AEEmbodimentStructuredLogger_h
@import Foundation;

#include "AEEmbodimentAnalyticsLogging-Protocol.h"
#include "FBAnalyticsLogging-Protocol.h"

@class NSString;
@protocol {optional<StructuredLogger::AvatarproductloggingenumEnum>=""(?="__null_state_"c"__val_"i)"__engaged_"B}, {optional<StructuredLogger::BizapploggedinusertypeEnum>=""(?="__null_state_"c"__val_"i)"__engaged_"B}, {optional<long long>=""(?="__null_state_"c"__val_"q)"__engaged_"B};

@interface AEEmbodimentStructuredLogger : NSObject<AEEmbodimentAnalyticsLogging> {
  /* instance variables */
  NSObject<FBAnalyticsLogging> *_unifiedStructuredLogger;
  struct optional<long long> { union { char __null_state_; long long __val_; } x0; BOOL __engaged_; } _avatarId;
  NSString *_avatarSessionId;
  NSString *_loggedInUserId;
  struct optional<StructuredLogger::BizapploggedinusertypeEnum> { union { char __null_state_; int __val_; } x0; BOOL __engaged_; } _loggedInUserType;
  struct optional<StructuredLogger::AvatarproductloggingenumEnum> { union { char __null_state_; int __val_; } x0; BOOL __engaged_; } _product;
  BOOL _isEmbodimentSupported;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUnifiedStructuredLogger:(id)logger avatarId:(id)id avatarSessionId:(id)id loggedInUserId:(id)id loggedInUserType:(long long)type product:(long long)product isEmbodimentSupported:(BOOL)supported;
- (void)logImpressionWithEffectId:(id)id avatarComponent:(long long)component;
- (void)logFetchWithEffectId:(id)id fetchType:(long long)type isSuccess:(BOOL)success timeToFetch:(id)fetch;
- (void)logAnimationWithEffectId:(id)id animationId:(id)id;
- (void)logFallbackWithEffectId:(id)id fallbackReason:(long long)reason;
- (void)logFallbackRecoveryWithEffectId:(id)id timeSpent:(id)spent;
@end

#endif /* AEEmbodimentStructuredLogger_h */
