//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryCameraOverlayViewController_h
#define IGStoryCameraOverlayViewController_h
@import Foundation;

#include "UIViewController.h"
#include "IGAddPartnerSearchContainerViewControllerDelegate-Protocol.h"
#include "IGAlertHUDHandling-Protocol.h"
#include "IGAudioStatusChangeListener-Protocol.h"
#include "IGCameraAuthorizationHandler.h"
#include "IGCameraEffectBottomSheetViewController.h"
#include "IGCameraEffectBottomSheetViewControllerDelegate-Protocol.h"
#include "IGCameraToolsMenu.h"
#include "IGCameraToolsMenuHandednessController.h"
#include "IGCameraTrayDataSource-Protocol.h"
#include "IGCameraTrayDelegate-Protocol.h"
#include "IGCameraTrayItem.h"
#include "IGCameraTraySelectionDelegate-Protocol.h"
#include "IGCameraZoomControllerDelegate-Protocol.h"
#include "IGLiveAudienceControlViewController.h"
#include "IGLiveBrandedContentPartnersViewController.h"
#include "IGLiveBroadcastLogger.h"
#include "IGLivePromptsViewControllerDelegate-Protocol.h"
#include "IGLiveSubscriptionDetailViewController.h"
#include "IGLiveUserPaySheetViewController.h"
#include "IGPartialModalSheetListener-Protocol.h"
#include "IGQuestionResharedMusicStickerView.h"
#include "IGQuickCamCaptureButtonDelegate-Protocol.h"
#include "IGStoryAudienceSelectionViewControllerDelegate-Protocol.h"
#include "IGStoryCameraHeaderViewController.h"
#include "IGStoryCameraOverlayAudienceInfoViewDelegate-Protocol.h"
#include "IGStoryCameraOverlayConfig.h"
#include "IGStoryCameraOverlayViewControllerAudienceDataSource-Protocol.h"
#include "IGStoryCameraOverlayViewControllerAudienceSelectorDelegate-Protocol.h"
#include "IGStoryCameraOverlayViewControllerDelegate-Protocol.h"
#include "IGStoryCameraOverlayViewControlling-Protocol.h"
#include "IGStoryCameraVariantSelectorViewController.h"
#include "IGStoryCanvasViewController.h"
#include "IGStoryLiveOverlayView.h"
#include "IGStoryMusicStickerProtocol-Protocol.h"
#include "IGStoryStickerGestureControllerDataSource-Protocol.h"
#include "IGStoryStickerGestureControllerDelegate-Protocol.h"
#include "IGSubscriptionToken-Protocol.h"
#include "IGTextInputResponder.h"
#include "IGWearableVersionEnforcing-Protocol.h"
#include "_TtC22IGCameraUtilityToolbar35IGCameraUtilityToolbarContainerView.h"
#include "_TtP13SUPConnecting13SUPConnecting_-Protocol.h"
#include "_TtP22SUPEngagementProducing22SUPEngagementProducing_-Protocol.h"

@class IGARAudioEffectData, IGActionableConfirmationToastController, IGAudioMusicTrackClip, IGBloksActionNavigationController, IGBrandedContentUpsellHelper, IGCameraAREffectsLoggingContext, IGCameraZoomController, IGCountdownController, IGITakeCareStickerCreationViewController, IGITakeCareStickerView, IGMusicStickerEditor, IGNavigationController, IGPartialModalSheetViewController, IGPassthroughView, IGPromptStickerView, IGPromptStickerViewController, IGStoryCameraFormatModel, IGStoryCreationLiveViewModeDefaultValues, IGStoryGradientRingView, IGStoryMusicQuestionStickerEditor, IGStoryMusicTrackPlayer_DEPRECATED, IGStoryPrecaptureMusicBrowserViewController, IGStoryStickerGestureController, IGTooltipView, IGUserSession, NSArray, NSData, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, UILabel, UIView;
@protocol IGARAudioEffectTimeUpdateListener><IGARAudioEffectDataConsumer, IGStoryCameraOverlayViewControllerCameraCaptureViewDataSource, IGStoryCameraOverlayViewControllerDataSource, IGStoryCameraOverlayViewControllerEffectsDataSource, IGStoryCameraOverlayViewControllerEffectsDelegate, IGStoryCameraOverlayViewControllerMusicDelegate, IGStoryCameraOverlayViewControllerOverlayHideDelegate, IGStoryCameraOverlayViewControllerTrayDelegate, IGStoryCameraOverlayViewControllerVariantSelectorDataSource, IGStoryCameraOverlayViewControllerVariantSelectorDelegate, IGStoryCameraVariantSelectorViewControllerDataSource, IGSundialStoryCameraOverlayViewControllerDelegate, UIView<IGDialMagnifierViewType, UIView<IGStoryCameraOverlayViewProtocol, UIView<IGStoryMusicStickerProtocol;

@interface IGStoryCameraOverlayViewController : UIViewController<IGAudioStatusChangeListener, IGCameraZoomControllerDelegate, IGCameraTrayDataSource, IGCameraTraySelectionDelegate, IGCameraTrayDelegate, IGPartialModalSheetListener, IGCameraEffectBottomSheetViewControllerDelegate, IGStoryStickerGestureControllerDataSource, IGStoryStickerGestureControllerDelegate, IGAddPartnerSearchContainerViewControllerDelegate, IGStoryAudienceSelectionViewControllerDelegate, IGLivePromptsViewControllerDelegate, IGStoryCameraOverlayViewControlling, IGQuickCamCaptureButtonDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  IGStoryCameraFormatModel *_initialMode;
  IGStoryCameraFormatModel *_normalFormat;
  IGCameraAuthorizationHandler *_cameraAuthorizationHandler;
  IGCountdownController *_countdownController;
  IGStoryCameraHeaderViewController *_headerViewController;
  IGCameraEffectBottomSheetViewController *_effectBottomSheetViewController;
  IGCameraToolsMenuHandednessController *_handednessController;
  IGLiveBrandedContentPartnersViewController *_brandedContentPartnersViewController;
  IGLiveAudienceControlViewController *_audienceControlVC;
  IGNavigationController *_audienceNavigationController;
  IGPartialModalSheetViewController *_audiencePartialModalSheet;
  IGLiveSubscriptionDetailViewController *_subscriptionDetailViewController;
  IGTextInputResponder *_arEffectTextInputResponder;
  NSTimer *_loadingIndicatorDelayTimer;
  IGStoryCanvasViewController *_canvasModeViewController;
  IGMusicStickerEditor *_musicStickerEditor;
  IGStoryMusicQuestionStickerEditor *_musicQuestionStickerEditor;
  IGStoryPrecaptureMusicBrowserViewController *_presentedMusicBrowserViewController;
  IGITakeCareStickerCreationViewController *_iTakeCareStickerCreationViewController;
  IGITakeCareStickerView *_iTakeCareStickerView;
  IGStoryStickerGestureController *_stickerGestureController;
  NSMutableArray *_stickers;
  IGPassthroughView *_stickerClippingView;
  long long _presentationStyle;
  NSMutableDictionary *_selectedDialItems;
  NSString *_module;
  NSObject<IGAlertHUDHandling> *_alertHandler;
  NSNumber *_cameraConfigurationShouldSurfacePTLEnabledinUI;
  IGTooltipView *_musicEffectTooltip;
  NSMutableSet *_loggedImpressionAREffectIDs;
  NSMutableDictionary *_loggedImpressionAREffectIDsByCategory;
  BOOL _isScrollingFooterView;
  NSObject<IGSubscriptionToken> *_subscriptionToken;
  NSMutableArray *_pendingUnlockedStickers;
  BOOL _shouldImmediatelyUseUnlockedSticker;
  IGCameraAREffectsLoggingContext *_effectsLoggingContext;
  NSMutableSet *_preLiveConfigurations;
  long long _selectedPreLiveOptions;
  NSString *_shoppingWaterfallId;
  IGPartialModalSheetViewController *_liveUserPayPartialModalSheetViewController;
  IGLiveUserPaySheetViewController *_liveUserPaySheetViewController;
  BOOL _hasUserIntentToUseAREFfects;
  NSMutableSet *_prepopulatedStickerApplicationLogged;
  BOOL _isBrandedContentNonFeedDisclosureRedesign;
  NSMutableArray *_brandPartners;
  NSString *_liveDetailsTitle;
  IGBrandedContentUpsellHelper *_brandedContentUpsellHelper;
  IGARAudioEffectData *_arAudioEffectData;
  BOOL _arAudioEffectDataUpdated;
  BOOL _arAudioEffectRequiresData;
  unsigned long long _sliderType;
  long long _sliderSteps;
  NSData *_colorArray;
  NSData *_imageData;
  BOOL _enableFBAInAudioEngine;
  IGPromptStickerViewController *_promptStickerViewController;
  IGPromptStickerView *_promptSticker;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _promptStickerFrame;
  NSArray *_trendingPrompts;
  long long _trendingPromptsIndex;
  IGBloksActionNavigationController *_bloksNavigationController;
  IGTooltipView *_nuxTooltip;
  BOOL _shouldHideToolsForDirectRemixReaction;
  UIView *_blockerView;
  IGStoryGradientRingView *_loadingRingView;
  BOOL _shouldHideAllOverlayItemsWhenReturningFromPostCapture;
  BOOL _isLoading;
  NSObject<_TtP13SUPConnecting13SUPConnecting_> *_supConnector;
  NSObject<_TtP22SUPEngagementProducing22SUPEngagementProducing_> *_engagementProducer;
  BOOL _didDeferShowDogfoodingToast;
  IGActionableConfirmationToastController *_IGLiveAudienceConfirmationToastController;
  IGTooltipView *_audienceControlPillTooltip;
  IGTooltipView *_audienceControlPillTooltipV2;
  BOOL _wasInitialTrayLoadCompleted;
  BOOL _wasPresentedOnce;
  BOOL _hasPrepopulatedMusicSticker;
  NSObject<IGStoryMusicStickerProtocol> *_templateMusicSticker;
  IGStoryCreationLiveViewModeDefaultValues *_liveDefaultValues;
  NSObject<IGWearableVersionEnforcing> *_wearableVersionEnforcementController;
  BOOL _canSupportPreliveInvitations;
  BOOL _didLoadPreliveOptions;
  BOOL _didLayoutAudiencePill;
  IGLiveBroadcastLogger *_preliveLogger;
  BOOL _hasUnregisteredGalleryDataSource;
  UIView *_dimmedBackgroundView;
  UILabel *_explanationLabel;
  BOOL _overlayControlsVisible;
  IGActionableConfirmationToastController *_toastController;
}

@property (nonatomic) BOOL showDialItems;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) IGStoryCameraFormatModel *currentCameraFormat;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerDataSource> *dataSource;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<IGSundialStoryCameraOverlayViewControllerDelegate> *sundialDelegate;
@property (weak, nonatomic) NSObject<IGQuickCamCaptureButtonDelegate> *captureButtonDelegate;
@property (weak, nonatomic) NSObject<IGStoryStickerGestureControllerDelegate> *stickerGestureDelegate;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerMusicDelegate> *musicDelegate;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerCameraCaptureViewDataSource> *cameraCaptureViewDataSource;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerOverlayHideDelegate> *overlayHideDelegate;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerVariantSelectorDataSource> *variantSelectorDataSource;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerVariantSelectorDelegate> *variantSelectorDelegate;
@property (retain, nonatomic) NSObject<IGStoryCameraVariantSelectorViewControllerDataSource> *variantSelectorDataSourceObject;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerEffectsDelegate> *effectsDelegate;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerEffectsDataSource> *effectsDataSource;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerAudienceSelectorDelegate> *audienceSelectorDelegate;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerAudienceDataSource> *audienceSelectionDataSource;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayAudienceInfoViewDelegate> *audienceInfoViewDelegate;
@property (weak, nonatomic) NSObject<IGARAudioEffectTimeUpdateListener><IGARAudioEffectDataConsumer> *arAudioEffectService;
@property (weak, nonatomic) NSObject<IGStoryCameraOverlayViewControllerTrayDelegate> *trayDelegate;
@property (readonly, nonatomic) UIView<IGStoryCameraOverlayViewProtocol> *overlayView;
@property (readonly, nonatomic) IGStoryLiveOverlayView *liveOverlayView;
@property (readonly, nonatomic) UIView *variantSelectorView;
@property (readonly, nonatomic) UIView *stickerContainerView;
@property (readonly, nonatomic) UIView *captureRegionWrapperView;
@property (nonatomic) BOOL switchCameraButtonHidden;
@property (nonatomic) BOOL variantSelectorHidden;
@property (nonatomic) BOOL lightingButtonHidden;
@property (nonatomic) BOOL storyControlsHidden;
@property (nonatomic) BOOL forceCameraModeSwitcherHidden;
@property (retain, nonatomic) IGCameraToolsMenu *toolsMenu;
@property (retain, nonatomic) NSString *loggingSessionID;
@property (nonatomic) double cameraRequestedTimestamp;
@property (readonly, nonatomic) IGStoryCameraVariantSelectorViewController *variantSelectorViewController;
@property (retain, nonatomic) IGStoryCameraFormatModel *cameraSwitcherMode;
@property (readonly, nonatomic) IGStoryMusicTrackPlayer_DEPRECATED *musicPlayer;
@property (retain, nonatomic) IGAudioMusicTrackClip *precaptureMusicTrackClip;
@property (readonly, nonatomic) double currentPlaybackTime;
@property (retain, nonatomic) IGQuestionResharedMusicStickerView *resharedMusicStickerView;
@property (readonly, nonatomic) UIView<IGStoryMusicStickerProtocol> *musicSticker;
@property (readonly, nonatomic) IGStoryCameraOverlayConfig *config;
@property (readonly, nonatomic) IGCameraZoomController *zoomController;
@property (readonly, nonatomic) NSString *goalSettingMessage;
@property (readonly, nonatomic) IGCameraTrayItem *previousDialItem;
@property (nonatomic) long long storyCameraState;
@property (nonatomic) long long captureState;
@property (readonly, nonatomic) BOOL isCameraUsageAuthorized;
@property (readonly, nonatomic) BOOL isEffectDiscoveryItemSelected;
@property (nonatomic) BOOL dialHidden;
@property (nonatomic) BOOL isAREffectLoading;
@property (readonly, nonatomic) BOOL isTrayScrolling;
@property (readonly, nonatomic) NSArray *trayItems;
@property (readonly, nonatomic) IGCameraTrayItem *defaultTrayItem;
@property (readonly, nonatomic) long long selectedTrayItemIndex;
@property (readonly, nonatomic) long long highlightedTrayItemIndex;
@property (nonatomic) BOOL musicTrackPlayerDidPlayToEnd;
@property (readonly, nonatomic) BOOL muteButtonSelected;
@property (nonatomic) BOOL showLiveAudienceOptions;
@property (nonatomic) unsigned long long liveAudienceType;
@property (nonatomic) unsigned long long preliveViewDefaultOpenView;
@property (retain, nonatomic) UIView<IGDialMagnifierViewType> *shutterButton;
@property (readonly, nonatomic) BOOL isShowingShutter;
@property (nonatomic) BOOL backButtonOnLeftSide;
@property (nonatomic) BOOL hasSelectedEffectGalleryMedia;
@property (nonatomic) BOOL shouldManageViewState;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } stickerGestureMarginPadding;
@property (nonatomic) BOOL effectSliderRevealsLeft;
@property (nonatomic) BOOL closeButtonHidden;
@property (nonatomic) BOOL settingsButtonHidden;
@property (nonatomic) BOOL hideAREffectDial;
@property (nonatomic) BOOL disableCapture;
@property (readonly, nonatomic) _TtC22IGCameraUtilityToolbar35IGCameraUtilityToolbarContainerView *utilityToolbarContainerView;
@property (nonatomic) BOOL isAnimatingFormatPresentation;
@property (readonly, nonatomic) NSString *liveBroadcastNoteId;

/* instance methods */
- (id)initWithConfig:(id)config presentationStyle:(long long)style userSession:(id)session module:(id)module effectsLoggingContext:(id)context;
- (void)dealloc;
- (void)loadView;
- (void)viewDidLoad;
- (void)_applicationDidBecomeInactive:(id)inactive;
- (void)_applicationDidBecomeActive:(id)active;
- (void)willBecomeActive;
- (void)willBecomeInactive;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewDidLayoutSubviews;
- (void)audioStatusDidChangeIsAudioEnabled:(BOOL)enabled forReason:(long long)reason;
- (id)modes;
- (void)setCaptureUIElementsEnabled:(BOOL)enabled;
- (void)setShowAudioPermission:(BOOL)permission;
- (void)setHeaderViewHidden:(BOOL)hidden;
- (void)setGalleryButtonHidden:(BOOL)hidden;
- (void)setBottomLeftButtonDimmed:(BOOL)dimmed;
- (void)showDraftSavedNUX;
- (BOOL)isSwitchCameraButtonHidden;
- (BOOL)isVariantSelectorHidden;
- (BOOL)isLightingButtonHidden;
- (BOOL)areStoryControlsHidden;
- (void)setCloseButtonHidden:(BOOL)hidden animated:(BOOL)animated;
- (void)setSettingsButtonHidden:(BOOL)hidden animated:(BOOL)animated;
- (void)showMusicReactiveEffectTooltipOnMusicButton:(id)button shouldPointDown:(BOOL)down;
- (void)cameraToolsMenuHandednessController:(id)controller didUpdateHandedness:(unsigned long long)handedness;
- (void)storyDraftStore:(id)store didFinishLoadingSavedDrafts:(id)drafts;
- (void)storyDraftStore:(id)store didSaveDraft:(id)draft;
- (void)storyDraftStore:(id)store didDeleteDraftsWithIdentifiers:(id)identifiers;
- (void)arEffectSavingController:(id)controller didChangeSaveState:(unsigned long long)state forAREffectID:(id)id isFromMiniGallery:(BOOL)gallery;
- (void)clearSelectedDial;
- (void)setCameraFooterViewButtonsEnabled:(BOOL)enabled;
- (void)setCameraFooterViewButtonsHidden:(BOOL)hidden;
- (void)reloadDial;
- (void)reloadTraySelectingEffectWithID:(id)id;
- (void)setUserIntentToUseAR:(BOOL)ar;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })safeAreaInsets;
- (void)removeCaptureThumbnails;
- (void)removeStickers;
- (void)removePromptSticker:(id)sticker;
- (void)addCaptureThumbnail:(id)thumbnail;
- (void)setCurrentCaptureThumbnailRecordingProgress:(double)progress;
- (void)setVideoRecordingProgress:(double)progress;
- (void)cameraDidStartRecording:(struct { long long x0; int x1; unsigned int x2; long long x3; })recording;
- (void)dismissShutterIfNeededAnimated:(BOOL)animated;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })preferredCaptureFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })preferredCaptureButtonFrame;
- (BOOL)isDialHidden;
- (void)setDialPeripheralCellsHidden:(BOOL)hidden animated:(BOOL)animated;
- (void)setTrayTitleItemsHidden:(BOOL)hidden;
- (void)presentTrayAnimated:(BOOL)animated;
- (void)dismissTrayAnimated:(BOOL)animated;
- (void)selectDefaultDialItemAnimated:(BOOL)animated;
- (BOOL)selectDialAREffectWithID:(id)id usingData:(id)data;
- (void)addPrepopulatedSticker:(id)sticker;
- (id)prepopulatedStickers;
- (void)selectTrayItemAtIndex:(long long)index animated:(BOOL)animated usingData:(id)data;
- (void)setLightingMode:(long long)mode;
- (void)setAudioButtonHidden:(BOOL)hidden;
- (id)captureButton;
- (void)updateAccessibilityForCameraForGoalPositionUsingCurrentPosition:(long long)position;
- (void)updateAccessibilityForCameraPosition:(long long)position;
- (id)footerViewForTransition;
- (id)headerViewForTransition;
- (void)updateVariantSelector;
- (void)configureAREffectPickerWithConfiguration:(id)configuration;
- (void)setAREffectPickerSelectedIndex:(unsigned long long)index;
- (void)setAREffectPickerHidden:(BOOL)hidden;
- (void)configureAREffectSlider:(unsigned long long)slider steps:(long long)steps colorArray:(id)array imageData:(id)data;
- (void)setAREffectSliderValue:(double)value;
- (void)setAREffectSliderViewHidden:(BOOL)hidden;
- (void)configureAREffectTextInputWithReturnKeyType:(long long)type;
- (void)setNativeTextInputHidden:(BOOL)hidden;
- (void)setNativeTextInputCurrentText:(id)text;
- (void)configureAREffectEditableTextInputWithText:(id)text containerView:(id)view;
- (void)resetAREffectNativeUIComponents;
- (void)setUnlockedStickerId:(id)id actionSourceType:(long long)type;
- (void)setStaticStickerId:(id)id targetStickerType:(long long)type actionSourceType:(long long)type;
- (void)cameraAudienceInfoViewDidTapTitle:(id)title audienceTrayItem:(id)item;
- (void)cameraAudienceInfoViewDidTapSubtitle:(id)subtitle audienceTrayItem:(id)item;
- (void)textInputResponderTextDidChange:(id)change;
- (void)textInputResponderDidTapDone:(id)done;
- (void)unlockedStickerService:(id)service didReceiveStickerView:(id)view withStickerId:(id)id actionSourceType:(long long)type;
- (void)unlockedStickerService:(id)service didReceiveResponseDictionary:(id)dictionary;
- (void)unlockedStickerService:(id)service didFailedFetchStickerWithStickerId:(id)id;
- (void)showAREffectTextInstructions:(id)instructions;
- (void)showAREffectTextInstructions:(id)instructions forDuration:(double)duration;
- (void)showAREffectInstructionImages:(id)images;
- (void)hideAREffectInstructions;
- (void)showCaptureModeInstructions:(id)instructions;
- (void)hideAllInstructions;
- (void)setIsLoading:(BOOL)loading;
- (void)setIsLoading:(BOOL)loading withDelay:(double)delay;
- (void)hideAREffectAttributionView;
- (void)showCameraHeaderPill:(id)pill pillTapBlock:(id /* block */)block;
- (void)hideCameraHeaderPill;
- (void)setCameraModeSwitcherVisible:(BOOL)visible animated:(BOOL)animated;
- (void)setCameraToolsMenuVisible:(BOOL)visible animated:(BOOL)animated;
- (void)setMuteButtonHidden:(BOOL)hidden;
- (void)setMusicButtonHidden:(BOOL)hidden;
- (void)setGalleryButtonBadgeVisible:(BOOL)visible;
- (void)updateConfig:(id)config;
- (void)presentEffectGalleryWithEntryPoint:(unsigned long long)point;
- (void)discoveryViewControllerDidTapDismiss:(id)dismiss;
- (BOOL)discoveryViewControllerShouldPresentCamera:(id)camera;
- (void)discoveryViewControllerDidTapTryIt:(id)it onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (void)miniGalleryDidLogImpressionForEffectID:(id)id;
- (BOOL)isImpressionLoggedForEffectID:(id)id;
- (void)miniGalleryPlusLogImpressionForEffectID:(id)id categoryID:(id)id;
- (BOOL)isImpressionLoggedForEffectID:(id)id categoryID:(id)id;
- (void)presentPrecaptureMusicEditor;
- (void)tryPlayMusic;
- (void)storyMusicQuestionStickerEditorDidTapCancelButton:(id)button;
- (void)storyMusicQuestionStickerEditorDidTapDoneButton:(id)button;
- (void)iTakeCareStickerCreationViewController:(id)controller willFinishEditingSticker:(id)sticker;
- (void)iTakeCareStickerCreationViewController:(id)controller didFinishEditingSticker:(id)sticker;
- (void)storyCameraMusicClipEditorDidTapDismissButton:(id)button;
- (void)storyCameraMusicClipEditorDidTapDoneButton:(id)button;
- (void)musicStickerEditorDidSelectCancel:(id)cancel musicStickerView:(id)view;
- (void)musicStickerEditor:(id)editor didFinishEditingMusicSticker:(id)sticker musicTrackClip:(id)clip musicTrackDidChange:(BOOL)change;
- (id)stickerViewEnumeratorForStickerGestureController:(id)controller;
- (BOOL)stickerGestureController:(id)controller stickerCanBePlacedOffscreen:(id)offscreen;
- (BOOL)stickerGestureController:(id)controller stickerCanBePlacedOffGuidelines:(id)guidelines;
- (BOOL)stickerGestureController:(id)controller shouldBeginPositioningSticker:(id)sticker withGesture:(id)gesture;
- (BOOL)stickerGestureController:(id)controller stickerCanBeDeleted:(id)deleted;
- (id)stickerGestureController:(id)controller additionalStickersForDeletionWithSticker:(id)sticker;
- (BOOL)stickerGestureController:(id)controller shouldBringStickerToFront:(id)front withGesture:(id)gesture;
- (void)stickerGestureController:(id)controller didTapSticker:(id)sticker atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)stickerGestureController:(id)controller didLongPressOnSticker:(id)sticker longPressGesture:(id)gesture;
- (void)stickerGestureController:(id)controller willBeginPositioningSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didUpdateStickerPosition:(id)position;
- (void)stickerGestureController:(id)controller didFinishPositioningSticker:(id)sticker deleted:(BOOL)deleted;
- (void)stickerGestureController:(id)controller willDeleteSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didDeleteSticker:(id)sticker deleteVariant:(long long)variant;
- (void)stickerGestureController:(id)controller didUpdateAlignmentGuideState:(unsigned long long)state;
- (double)stickerGestureController:(id)controller maximumScaleForSticker:(id)sticker;
- (double)stickerGestureController:(id)controller minimumScaleForSticker:(id)sticker;
- (BOOL)stickerGestureController:(id)controller rotationPermittedForSticker:(id)sticker;
- (long long)stickerGestureController:(id)controller minimumIndexForSticker:(id)sticker;
- (long long)stickerGestureController:(id)controller maximumIndexForSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didBringStickerToFront:(id)front;
- (void)stickerContainerView:(id)view stickerWasAddedToContainer:(id)container;
- (void)stickerContainerView:(id)view stickerWillBeRemovedFromContainer:(id)container;
- (void)synchronizeMusicStickerForPlaybackRate:(double)rate time:(double)time atHostTime:(double)time;
- (BOOL)effectUsesMusic:(id)music;
- (void)updateControlsAnimated:(BOOL)animated;
- (void)_updateHeaderMoreButtonAppearance;
- (void)_showEducationUIIfNeeded;
- (void)_fadeOutExplanationUIAnimation;
- (void)musicTrackPlayer:(id)player didChangeToAsset:(id)asset;
- (void)musicTrackPlayer:(id)player didUpdateToPlaybackTime:(double)time;
- (void)musicTrackPlayer:(id)player didUpdateStallState:(BOOL)state;
- (void)musicTrackPlayerDidPlayToEnd:(id)end;
- (void)musicTrackPlayer:(id)player effectivePlaybackRateDidChange:(double)change;
- (void)musicTrackPlayer:(id)player didDetermineDuration:(double)duration ofAudioAsset:(id)asset;
- (void)musicTrackPlayer:(id)player didUpdatePlaybackState:(BOOL)state;
- (void)audienceSelectionViewControllerDidTapCreateSharedList:(id)list;
- (void)audienceSelectionViewControllerDidSuccessfullyCreateSharedList:(id)list sharedListID:(id)id;
- (void)audienceSelectionViewControllerDidFailToCreateSharedList:(id)list;
- (void)audienceSelectionViewControllerDidTapShare:(id)share privateStoryList:(id)list;
- (void)audienceSelectionViewControllerDidTapShare:(id)share audienceSelectionType:(long long)type selectedMembers:(id)members;
- (void)audienceSelectionViewControllerWillDismissWithMembers:(id)members andExitPoint:(long long)point;
- (void)audienceSelectionViewControllerDidTapBackButton:(id)button;
- (void)audienceSelectionViewControllerDidTapDoneButton:(id)button;
- (void)audienceSelectionViewControllerDidTapDeletePrivateStoryList:(id)list privateStoryList:(id)list;
- (void)audienceSelectionViewControllerDidCreatePrivateStoryList:(id)list privateStoryList:(id)list;
- (void)storyCameraHeaderViewControllerDidTapAddToCart:(id)cart;
- (void)storyCameraHeaderViewControllerDidTapShoppingCart:(id)cart;
- (void)storyCameraHeaderViewControllerDidTapClose:(id)close;
- (void)storyCameraHeaderViewControllerDidTapSettings:(id)settings;
- (void)storyCameraHeaderViewControllerDidTapEffectAttribution:(id)attribution;
- (void)storyCameraHeaderViewControllerDidTapEffectNetworkConsentPill:(id)pill;
- (void)storyCameraHeaderViewControllerDidTapMuteButton:(id)button;
- (void)storyCameraHeaderViewControllerDidTapMusicButton:(id)button;
- (void)storyCameraHeaderViewControllerDidTapAlbumButton:(id)button;
- (void)storyCameraHeaderViewControllerDidTapDoneButton:(id)button;
- (void)storyCameraHeaderViewControllerDidTapCancelButton:(id)button;
- (void)storyLiveOverlayViewDidTapLiveDualCameraButton:(id)button;
- (void)storyLiveOverlayViewDidTapAddTitleButton:(id)button;
- (void)storyLiveOverlayViewDidTapAddPromptsButton:(id)button;
- (void)storyLiveOverlayViewDidTapAddFundraiserButton:(id)button;
- (void)storyLiveOverlayViewDidTapPreliveInviteButton:(id)button;
- (void)storyLiveOverlayViewDidAddSupButtonAsSubview:(id)subview;
- (void)storyLiveOverlayViewDidTapAddUserPayButton:(id)button;
- (void)storyLiveOverlayView:(id)view didChangeZoomScaleBy:(double)by;
- (void)storyLiveOverlayViewDidTapAudienceControlButton:(id)button;
- (void)storyLiveOverlayViewDidTapLiveSchedulingButton:(id)button;
- (void)storyLiveOverlayViewDidTapSubscriptionButton:(id)button;
- (void)storyLiveOverlayViewDidTapSUPButton:(id)supbutton action:(long long)action completion:(id /* block */)completion;
- (void)storyLiveOverlayViewDidTapSUPRequestCapture:(id)capture;
- (void)storyLiveOverlayViewDidBeginEditingTitle:(id)title;
- (void)storyLiveOverlayViewDidEndEditingTitle:(id)title;
- (void)setupLiveDefaultValues:(id)values;
- (void)liveInviteGuestController:(id)controller didInviteUser:(id)user;
- (void)liveInviteGuestController:(id)controller didCancelInviteForUser:(id)user;
- (void)liveInviteGuestController:(id)controller didFinishBulkInviteWithUsers:(id)users;
- (void)liveInviteGuestControllerWillDismiss:(id)dismiss;
- (void)liveDetailsComposerViewDidTapAddTitleButton:(id)button withTitle:(id)title taggedPartners:(id)partners;
- (void)liveDetailsComposerViewDidTapAddBusinessPartner:(id)partner withTitle:(id)title taggedPartners:(id)partners;
- (void)addStandaloneFundraiserToLive:(id)live;
- (void)addPartnerSearchContainerViewControllerDidUpdateBrandPartners:(id)partners;
- (void)addPartnerSearchContainerViewControllerDidTapBackButton;
- (void)partnersViewController:(id)controller didUpdatePartners:(id)partners isPaidPartnership:(BOOL)partnership isBCAdsPermissionOn:(BOOL)on;
- (void)partnersViewController:(id)controller didUpdateAudienceRestrictions:(id)restrictions;
- (void)partnersViewControllerDidTapDoneButton:(id)button;
- (void)partnersViewController:(id)controller didUpdateBrandedContentAdsBoostPostToken:(id)token;
- (void)IGLivePromptsViewDidSelectPrompt:(id)prompt withPrompt:(id)prompt promptEmoji:(id)emoji;
- (void)IGLiveAudienceControlViewDidSelectAudience:(id)audience withAudience:(unsigned long long)audience;
- (void)IGLiveAudienceControlControllerDidTapSetAudienceButton:(id)button withAudience:(unsigned long long)audience;
- (void)presentAudienceSelection:(id)selection;
- (void)IGLiveAudienceControlViewControllerDidDismiss:(id)dismiss;
- (void)IGLiveSubscriptionDetailViewControllerDidTapTurnOnSubscriptionsButton:(id)button;
- (void)addFundraiserInPreLiveWithExistingFundraiser:(id)fundraiser fundraiserTitle:(id)title;
- (void)liveUserPaySheetViewControllerDidToggleUserPay:(id)pay goalSettingMessage:(id)message;
- (void)liveUserPaySheetViewControllerDidDismiss:(id)dismiss goalSettingMessage:(id)message;
- (void)liveUserPaySheetViewControllerNeedsToBeResized:(id)resized;
- (void)brandedContentUpsellHelperDidTapAddTagButtonWithSignals:(id)signals suspectedCoauthors:(id)coauthors;
- (void)brandedContentUpsellHelperDidTapShareAnywayButtonWithSignals:(id)signals entryPoint:(unsigned long long)point;
- (void)brandedContentUpsellHelperDidTapShareAnywayButtonWithSignals:(id)signals entryPoint:(unsigned long long)point contentType:(unsigned long long)type;
- (void)brandedContentUpsellHelperDidTapReviewBrandedContentPolicies;
- (void)captureButtonDidZoomScale:(double)scale;
- (void)zoomControllerDidStopZoom:(id)zoom withGestureRecognizer:(id)recognizer;
- (void)zoomController:(id)controller didChangeZoomScaleBy:(double)by;
- (void)captureButtonDidTouchDown;
- (void)captureButtonDidReleaseBeforeExpandingFinished;
- (void)captureButtonDidReleaseAfterExpandingFinished;
- (void)captureButtonDidReleaseFromInterruption;
- (void)captureButtonDidBeginExpanding;
- (void)captureButtonDidEndExpanding;
- (void)captureButtonDidConfirm;
- (void)countdownController:(id)controller didCountTo:(long long)to;
- (void)countdownControllerDidInvalidateTimer:(id)timer;
- (void)storyCameraFooterViewDidTapGalleryButton:(id)button;
- (void)storyCameraFooterViewDidTapEffectGalleryButton:(id)button;
- (void)storyCameraFooterViewDidTapGradientButton:(id)button;
- (void)storyCameraFooterViewWillShowCircularHuePicker:(id)picker;
- (void)storyCameraFooterViewWillHideCircularHuePicker:(id)picker;
- (void)storyCameraFooterViewDidTapMusicProgressButton:(id)button;
- (void)storyCameraFooterViewDidTapSwitchCameras:(id)cameras;
- (void)storyCameraFooterViewDidTapHistoryButton:(id)button;
- (void)storyCameraFooterViewDidTapLightingButton:(id)button;
- (void)storyCameraFooterViewDidTapShoppingCartButton:(id)button;
- (void)storyCameraFooterViewDidTapAudioButton:(id)button;
- (void)storyCameraFooterViewDidTapAnonymityButton:(id)button;
- (BOOL)storyCameraFooterViewShouldBeginDraggingFromMode:(id)mode;
- (void)resetAnonymityState;
- (void)storyCameraFooterViewDidSwitchFromCameraMode:(id)mode toCameraMode:(id)mode;
- (void)storyCameraFooterViewDidSelectCameraMode:(id)mode;
- (void)storyCameraFooterViewDidEndScrollOnCameraMode:(id)mode;
- (long long)selectedPreLiveOptions;
- (void)resetSelectedPreLiveOptions;
- (long long)numberOfItemsInCameraVariantSelectorViewController:(id)controller;
- (id)cameraVariantSelectorViewController:(id)controller representationForItemAtIndex:(long long)index;
- (void)cameraVariantSelectorViewControllerDidTapCustomItem:(id)item;
- (void)cameraVariantSelectorViewController:(id)controller didSelectItemAtIndex:(long long)index;
- (void)cameraVariantSelectorViewController:(id)controller didChangeSelectedIndex:(long long)index;
- (void)cameraVariantSelectorViewController:(id)controller didTapItemAtIndex:(long long)index;
- (void)cameraVariantSelectorViewController:(id)controller didEndScrollingAtIndex:(long long)index;
- (void)cameraVariantSelectorViewController:(id)controller didChangeSliderValue:(double)value;
- (void)captureFormatDataSource:(id)source requestAREffectPrefetchAtIndex:(long long)index;
- (long long)captureFormatDataSourceNumberOfAREffects:(id)areffects;
- (id)captureFormatDataSource:(id)source assetModelAtIndex:(long long)index;
- (long long)numberOfItemsInCameraTray;
- (id)cameraTrayAccessibilityLabelForItemAtIndex:(long long)index;
- (id)cameraTrayAccessibilityIdentifierForItemAtIndex:(long long)index;
- (id)cameraTrayAccessibilityHintForItemAtIndex:(long long)index;
- (id)cameraTrayImageURLForItemAtIndex:(long long)index isHighlighted:(BOOL)highlighted;
- (id)cameraTrayImageProcessorForItemAtIndex:(long long)index;
- (id /* block */)cameraTrayImageProviderForItemAtIndex:(long long)index isHighlighted:(BOOL)highlighted;
- (id)cameraCustomDialViewForItemAtIndex:(long long)index;
- (BOOL)cameraTrayShouldAllowMoreInfoAccessForItemAtIndex:(long long)index;
- (BOOL)cameraTrayItemDisabledAtIndex:(long long)index;
- (BOOL)cameraTrayItemPrivacyIncompatibleAtIndex:(long long)index;
- (BOOL)cameraTrayItemShouldUseOpaqueBackground:(long long)background;
- (double)cameraTrayImageViewContentScaleAtIndex:(long long)index;
- (double)magnifiedImageViewContentScaleAtIndex:(long long)index;
- (BOOL)cameraTrayItemIsAvatarEffectAtIndex:(long long)index;
- (id)cameraTrayItemAvatarAnimatedImageURLForItemAtIndex:(long long)index;
- (void)cameraTrayWillDisplayItemAtIndex:(long long)index isHighlighted:(BOOL)highlighted;
- (void)cameraTrayDidChangeCameraSurfaceElement:(unsigned long long)element;
- (BOOL)cameraTrayShouldEnableCaptureForItemAtIndex:(long long)index;
- (void)cameraTrayDidFailVideoCapture;
- (BOOL)cameraTrayShouldAllowVideoCapture;
- (BOOL)cameraTrayShouldStartVideoCaptureOnInitialTap;
- (void)cameraTrayDidStartVideoCapture;
- (void)cameraTrayDidStopVideoCapture;
- (void)cameraTrayWillCapturePhoto;
- (void)cameraTrayDidManuallyScrollToPrecisionItemIndex:(double)index;
- (void)cameraTrayDidManuallyScrollToItemAtIndex:(long long)index;
- (void)cameraTrayDidScrollToItemAtIndex:(long long)index;
- (void)cameraTrayDidSelectItemAtIndex:(long long)index usingData:(id)data isManualSelection:(BOOL)selection;
- (void)cameraTrayDidCompleteScrollAtItemWithIndex:(long long)index;
- (void)cameraTrayDidConfirmItemAtIndex:(long long)index;
- (void)cameraTrayDidTapDisabledItem;
- (void)storyCameraOverlayViewDidTapTrayTitle:(id)title;
- (void)storyCameraOverlayViewDidTapMemoryPressureErrorButton:(id)button;
- (void)storyCameraOverlayViewDidTapFooterCloseButton:(id)button;
- (void)storyCameraOverlayView:(id)view didToggleFooterSaveButtonToSaveState:(BOOL)state;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (void)cameraEffectBottomSheetViewControllerDidEnterFullscreenMode:(id)mode;
- (void)cameraEffectBottomSheetViewControllerDidLeaveFullscreenMode:(id)mode;
- (void)cameraEffectBottomSheetViewController:(id)controller didTapViewProductItem:(id)item;
- (void)cameraEffectBottomSheetViewController:(id)controller didToggleSaveToWishlist:(BOOL)wishlist showToast:(BOOL)toast;
- (void)cameraEffectBottomSheetViewController:(id)controller didRequestRemovalOfEffectWithID:(id)id completion:(id /* block */)completion;
- (id)cameraEffectBottomSheetViewControllerAttributionModelForCurrentAREffect:(id)areffect;
- (BOOL)cameraEffectBottomSheetViewControllerShouldPresentCamera:(id)camera;
- (void)cameraEffectBottomSheetViewControllerDidTapTryIt:(id)it onEffectWithID:(id)id effectName:(id)name effectIconURL:(id)url;
- (long long)cameraEffectBottomSheetViewControllerCaptureType:(id)type;
- (long long)cameraEffectBottomSheetViewControllerSwitcherMode:(id)mode;
- (void)showTargetEffectFailureAlertWithResponse:(id)response;
- (void)showDefaultAREffectLoadFailure;
- (void)showARLoadFailureWithError:(unsigned long long)error;
- (void)showDefaultAREffectLoadSuccess;
- (void)livePreLiveAvailableOptionsService:(id)service didUpdateAvailablePreLiveOptions:(long long)options userPayBroadcasterConfig:(id)config;
- (void)precaptureMusicBrowserViewController:(id)controller didSelectAudioTrack:(id)track;
- (void)precaptureMusicBrowserViewControllerDidCancel:(id)cancel;
- (void)liveBrandedContentPartnersViewControllerDidUpdatePartners:(id)partners liveDetailsTitle:(id)title viewController:(id)controller;
- (void)storyCanvasViewController:(id)controller didShareToStory:(long long)story andDirectRecipients:(id)recipients;
- (void)storyCanvasViewController:(id)controller didStartTransitioningToPostCapture:(BOOL)capture mediaCompositions:(id)compositions;
- (void)storyCanvasViewController:(id)controller didFinishTransitioningToPostCapture:(BOOL)capture;
- (void)storyCanvasViewControllerDidTapClose:(id)close;
- (void)storyCanvasViewControllerShowDial:(id)dial withDialIndex:(long long)index;
- (void)storyCanvasViewControllerReloadDial:(id)dial;
- (void)storyCanvasViewController:(id)controller selectDialIndex:(long long)index animated:(BOOL)animated;
- (BOOL)storyCanvasViewControllerDidTapBack:(id)back;
- (void)storyCanvasViewControllerDidStartEditing:(id)editing;
- (void)storyCanvasViewControllerWillEndEditing:(id)editing;
- (void)storyCanvasViewController:(id)controller showModeSwitcher:(BOOL)switcher;
- (void)storyCanvasViewController:(id)controller updateGradientColor:(id)color gradientAngle:(double)angle;
- (void)storyCanvasViewController:(id)controller showOverlayControls:(BOOL)controls updateGalleryButtonVisibility:(BOOL)visibility animated:(BOOL)animated;
- (void)storyCanvasViewController:(id)controller configureGradientButtonVisibility:(BOOL)visibility animated:(BOOL)animated;
- (void)storyCanvasViewController:(id)controller configureGalleryButtonVisibility:(BOOL)visibility animated:(BOOL)animated;
- (void)storyCanvasViewController:(id)controller configureVariantSelectorCloseButtonVisibility:(BOOL)visibility;
- (void)storyCanvasViewControllerDidUpdateGalleryPermissions:(id)permissions;
- (void)storyCanvasViewController:(id)controller didSelectItemWithTitle:(id)title;
- (void)showCameraAuthorizationScreenIfNeeeded;
- (void)hideCameraAuthorizationScreen;
- (BOOL)canRespondToGesture:(id)gesture;
- (void)authorizationHandlerDidUpdateAuthorizedState:(id)state;
- (void)authorizationHandler:(id)handler presentAuthorizationView:(id)view;
- (void)authorizationHandler:(id)handler presentEmbeddedAuthorizationView:(id)view;
- (void)authorizationHandlerDidUpdatePresentationState:(id)state;
- (void)authorizationHandler:(id)handler switchCameraToMode:(long long)mode;
- (void)authorizationHandlerDidAbort:(id)abort;
- (void)shoppingCameraCoordinatorDidUpdateCartStore:(id)store;
- (void)shoppingCameraCoordinatorDidUpdateCurrentProduct:(id)product;
- (void)upcomingLiveEventsViewController:(id)controller didTapShareStoryForEvent:(id)event;
- (void)upcomingLiveEventsViewController:(id)controller didTapShareAsPostForEvent:(id)event;
- (void)upcomingLiveEventsViewController:(id)controller didSelectUpcomingLiveEvent:(id)event;
- (void)upcomingEventServiceDidLoadUpcomingEvents:(id)events;
- (void)upcomingEventServiceDidFailLoad;
- (void)upcomingEventServiceDidLoadForProductIds:(id)ids upcomingEvent:(id)event;
- (void)upcomingEventServiceDidFailLoadForProductIds:(id)ids;
- (long long)defaultDialIndex;
- (id)effectForSelectedDialItem;
- (BOOL)_isHomeDialMode:(long long)mode;
- (BOOL)_isHomeDialItem:(id)item;
- (void)currentEffectRequiresARAudioEffectData:(BOOL)data;
- (void)promptStickerCreationViewController:(id)controller willFinishEditingPromptStickerView:(id)view;
- (void)promptStickerCreationViewController:(id)controller didFinishEditingPromptStickerView:(id)view;
- (void)promptStickerCreationViewControllerDidTapSeeMorePromptsPill:(id)pill withCurrentStickerView:(id)view;
- (BOOL)showNUXTooltipIfNeededOnButton:(id)button userDefaultsKey:(id)key tooltipTitle:(id)title;
- (void)updateAvailableSwitcherModes:(id)modes targetMode:(id)mode;
- (void)switchAvailableModeType:(long long)type with:(long long)with targetMode:(id)mode;
- (void)setEDR:(BOOL)edr;
- (void)storyCameraOverlayView:(id)view didTapSUPButton:(long long)supbutton completion:(id /* block */)completion;
- (void)storyCameraOverlayViewDidTapSUPRequestCapture:(id)capture;
- (void)performSupernovaLiveStreamingVersionChecks;
- (BOOL)isMuteButtonSelected;
@end

#endif /* IGStoryCameraOverlayViewController_h */
