//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGLiveArchiveFullscreenSectionController_h
#define IGLiveArchiveFullscreenSectionController_h
@import Foundation;

#include "IGListSectionController.h"
#include "IGAlertHUDHandling-Protocol.h"
#include "IGListDisplayDelegate-Protocol.h"
#include "IGListScrollDelegate-Protocol.h"
#include "IGMediaOverviewAnimationController.h"
#include "IGPostLivePreloading-Protocol.h"
#include "IGRetryHelper.h"
#include "IGStoryFullscreenControllerType-Protocol.h"
#include "IGStoryFullscreenSectionLoggingContext.h"
#include "IGStoryPlayerMediaViewDelegate-Protocol.h"
#include "IGStorySaveMediaRequest.h"
#include "IGStoryViewerLoggingContext.h"
#include "IGStoryViewerState.h"
#include "IGVideoSharingUploadFlow.h"

@class FBTimer, IGLiveBroadcast, IGStoryViewerViewModel, IGUserSession, NSArray, NSMutableDictionary, NSString, UIColor;
@protocol IGAdInsertionMediaViewTracking, IGStoryFullscreenControllerTypeDelegate, UIViewController<IGStoryOverviewViewControllerProtocol><IGViewToFullScreenAnimationProtocol;

@interface IGLiveArchiveFullscreenSectionController : IGListSectionController<IGListDisplayDelegate, IGListScrollDelegate, IGStoryPlayerMediaViewDelegate, IGStoryFullscreenControllerType, IGPostLivePreloading> {
  /* instance variables */
  IGUserSession *_userSession;
  long long _entryPoint;
  IGStoryFullscreenSectionLoggingContext *_loggingContext;
  IGStoryViewerLoggingContext *_storyLoggingContext;
  IGLiveBroadcast *_currentBroadcast;
  BOOL _didSeeCurrentPostLive;
  BOOL _playbackPausedForGesture;
  FBTimer *_playbackTimestampAppearanceTimer;
  UIViewController<IGStoryOverviewViewControllerProtocol><IGViewToFullScreenAnimationProtocol> *_overviewViewController;
  IGMediaOverviewAnimationController *_overviewAnimationController;
  UIColor *_cellBackgroundColor;
  NSArray *_broadcasts;
  IGRetryHelper *_retryHelper;
  NSMutableDictionary *_broadcastIdToLastPlaybackTime;
  NSObject<IGAdInsertionMediaViewTracking> *_adInsertionMediaViewTracker;
  id _postLiveShareToIGTVFlow;
  BOOL _archiveDidPostToIGTV;
  IGStorySaveMediaRequest *_archiveSaveMediaRequest;
  NSObject<IGAlertHUDHandling> *_archiveSaveMediaHUDHandler;
  IGVideoSharingUploadFlow *_videoUploadFlow;
  IGStoryViewerState *_storyViewerState;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) long long errorType;
@property (readonly, nonatomic) BOOL audioEnabled;
@property (readonly, nonatomic) long long lastAudioChangeReason;
@property (readonly, nonatomic) BOOL isForceMuted;
@property (readonly, nonatomic) NSString *forceMutedReason;
@property (readonly, nonatomic) IGStoryViewerViewModel *viewModel;
@property (weak, nonatomic) NSObject<IGStoryFullscreenControllerTypeDelegate> *delegate;
@property (nonatomic) BOOL isFocusedController;

/* class methods */
+ (double)_skipIntervalForVideoView:(id)view;

/* instance methods */
- (id)initWithUserSession:(id)session storyLoggingContext:(id)context entryPoint:(long long)point adInsertionMediaViewTracker:(id)tracker;
- (id)story;
- (long long)currentCarouselTransformationSegmentIndex;
- (long long)numberOfItems;
- (void)refreshView;
- (void)updateCurrentlyVisibleCell;
- (struct CGSize { double x0; double x1; })sizeForItemAtIndex:(long long)index;
- (id)cellForItemAtIndex:(long long)index;
- (void)didUpdateToObject:(id)object;
- (void)didSelectItemAtIndex:(long long)index;
- (id)displayDelegate;
- (id)scrollDelegate;
- (id)currentStoryItem;
- (struct CGPoint { double x0; double x1; })navigationTapPoint;
- (BOOL)isPlaying;
- (void)tryResumePlaybackWithReason:(long long)reason;
- (void)pauseWithReason:(long long)reason;
- (void)stopWithReason:(long long)reason;
- (void)seekToTime:(double)time;
- (void)resetSeenState;
- (void)seekToBeginning;
- (void)setFooterHidden:(BOOL)hidden;
- (void)setAudioEnabled:(BOOL)enabled reason:(long long)reason;
- (id)sectionLoggingContext;
- (void)addSharingInterstitialViewWithDelegate:(id)delegate;
- (void)addLatelyFullscreenNuxIfNeededWithDelegate:(id)delegate;
- (double)targetDimmingPercentForProposedDimmingPercent:(double)percent;
- (void)endEditingForOverlayView;
- (void)viewControllerDidAppear;
- (void)dismissWithNavAction:(long long)action;
- (id)tryToFetchSurveyWithIntegrationPointsAttempted:(id)attempted;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller cell:(id)cell atIndex:(long long)index;
- (void)listAdapter:(id)adapter willDisplaySectionController:(id)controller;
- (void)listAdapter:(id)adapter didEndDisplayingSectionController:(id)controller;
- (void)listAdapter:(id)adapter didScrollSectionController:(id)controller;
- (void)listAdapter:(id)adapter willBeginDraggingSectionController:(id)controller;
- (void)listAdapter:(id)adapter didEndDraggingSectionController:(id)controller willDecelerate:(BOOL)decelerate;
- (void)storyPlayerMediaView:(id)view didUpdateProgress:(double)progress player:(id)player captionController:(id)controller;
- (void)storyPlayerMediaViewDidPlayToEnd:(id)end;
- (void)storyPlayerMediaViewDidLoad:(id)load loadSource:(id)source networkRequestSummary:(id)summary;
- (void)storyPlayerMediaViewDidPlay:(id)play;
- (void)storyPlayerMediaViewDidBeginPlayback:(id)playback;
- (void)storyPlayerMediaViewDidFailToPlayback:(id)playback error:(id)error;
- (void)storyPlayerMediaView:(id)view didUpdateLoadingState:(id)state;
- (void)storyPlayerMediaViewWillLoadVideo:(id)video;
- (void)storyPlayerMediaView:(id)view didTapLinkIconWithGestureRecognizer:(id)recognizer;
- (void)storyPlayerMediaView:(id)view willLoadURL:(id)url;
- (void)storyPlayerMediaViewReceivedEmptyBuffer:(id)buffer;
- (void)storyPlayerMediaViewDidFailToLoadImage:(id)image error:(id)error networkRequestSummary:(id)summary;
- (void)storyPlayerMediaView:(id)view didGenerateVideoPlaybackWarningWithError:(id)error;
- (BOOL)storyPlayerMediaViewDidExpandCarouselStory:(id)story;
- (void)closeButtonTappedInPostLiveView:(id)view;
- (void)postLiveOwnerProfileTappedInPostLiveView:(id)view;
- (void)emptyStoryBadgeTappedInPostLiveView:(id)view;
- (void)leftRegionTappedInPostLiveView:(id)view;
- (void)rightRegionTappedInPostLiveView:(id)view;
- (void)didBeginLongPressingInPostLiveView:(id)view;
- (void)didEndLongPressingInPostLiveView:(id)view;
- (void)forwardButtonTappedInPostLiveView:(id)view;
- (void)backwardButtonTappedInPostLiveView:(id)view;
- (void)errorButtonTappedInPostLiveView:(id)view;
- (void)viewerCountTappedInPostLiveView:(id)view;
- (void)swipedUpInPostLiveView:(id)view;
- (long long)currentBroadcastIndexForPostLiveView:(id)view;
- (void)postLiveArchiveShareToIGTVButtonTapped:(id)tapped;
- (void)postLiveArchiveDownloadButtonTapped:(id)tapped;
- (void)postLiveArchiveDeleteButtonTapped:(id)tapped;
- (void)setPostLiveShareToIGTVFlow:(id)igtvflow;
- (void)postLiveShareToIGTVFlowDidCompletePosting:(id)posting;
- (void)postLiveShareToIGTVFlowDidAttemptPosting;
- (void)storyOverviewDidFinish:(id)finish withExitPoint:(unsigned long long)point currentOverviewStoryItem:(id)item;
- (void)storyOverviewControllerDidTapViewMembers:(id)members sharedList:(id)list modalSheetNavigationController:(id)controller;
- (void)storyOverviewControllerDidTapSharedListReshare:(id)reshare sharedList:(id)list;
- (void)videoSharingUploadFlowDidBeginUpload;
- (void)videoSharingUploadFlowDidFinishUploadForPromote;
- (void)videoSharingUploadFlowDidCancelAnimated:(BOOL)animated;
- (id)postLiveBroadcastsToPreload;
@end

#endif /* IGLiveArchiveFullscreenSectionController_h */
