//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGFBFilteredPhotoView_h
#define IGFBFilteredPhotoView_h
@import Foundation;

#include "UIView.h"
#include "IGFeedCompositionMediaView-Protocol.h"
#include "IGFeedMediaLayeringView-Protocol.h"
#include "IGUserLauncherSet-Protocol.h"

@class CADisplayLink, CALayer, FBIGLUFilter, FBMetalSurfaceView, FBSurface, IGCameraSampleBuffer, IGFBPostPipelineFilter, IGLContext, IGPassthroughView, IGTargetBlock, NSArray, NSString, UIImageView, UIView;
@protocol METAMediaCompositionViewStickerLayer, {shared_ptr<igl::ICommandQueue>="__ptr_"^{ICommandQueue}"__cntrl_"^{__shared_weak_count}};

@interface IGFBFilteredPhotoView : UIView<IGFeedCompositionMediaView, IGFeedMediaLayeringView> {
  /* instance variables */
  FBMetalSurfaceView *_reviewViewMetal;
  UIImageView *_borderImageView;
  FBMetalSurfaceView *_tiltShiftOverlayViewMetal;
  IGLContext *_mainIglContext;
  struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue *__ptr_; struct __shared_weak_count *__cntrl_; } _commandQueue;
  UIImageView *_initialImageView;
  CADisplayLink *_displayLink;
  BOOL _overlayNeedsRefresh;
  IGTargetBlock *_displayLinkBlock;
  FBIGLUFilter *_tiltShiftOverlayFilter;
  NSObject<IGUserLauncherSet> *_launcherSet;
  NSObject<METAMediaCompositionViewStickerLayer> *_stickerLayer;
  IGPassthroughView *_compositionWrapperView;
  FBSurface *_imageSurface;
}

@property (readonly, nonatomic) IGFBPostPipelineFilter *postPipelineFilter;
@property (retain, nonatomic) NSString *compositionId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL previewPresentsWithTransaction;
@property (retain, nonatomic) IGCameraSampleBuffer *imageBuffer;
@property (nonatomic) unsigned long long tiltShiftMode;
@property (nonatomic) struct CGPoint { double x0; double x1; } tiltShiftCenter;
@property (nonatomic) double tiltShiftAngle;
@property (nonatomic) double tiltShiftRadius;
@property (readonly, nonatomic) CALayer *tiltShiftOverlayLayer;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } maxSupportedImageSize;
@property (nonatomic) double previewScaleFactor;
@property (nonatomic) BOOL displayOriginal;
@property (readonly, nonatomic) BOOL isLocalLaplacianEnabled;
@property (nonatomic) BOOL luxEnabled;
@property (readonly, nonatomic) BOOL isEdited;
@property (nonatomic) double saturation;
@property (nonatomic) double temperature;
@property (nonatomic) double fade;
@property (nonatomic) double vignette;
@property (nonatomic) double highlights;
@property (nonatomic) double contrast;
@property (nonatomic) double brightness;
@property (nonatomic) double shadows;
@property (nonatomic) double sharpen;
@property (nonatomic) double localLaplacian;
@property (nonatomic) double luxBlend;
@property (nonatomic) double photoFilterStrength;
@property (nonatomic) double tintShadowsIntensity;
@property (nonatomic) struct _GLKVector3 { float x0[3] } tintShadowsColor;
@property (nonatomic) unsigned long long tintShadowsColorIndex;
@property (nonatomic) double tintHighlightsIntensity;
@property (nonatomic) struct _GLKVector3 { float x0[3] } tintHighlightsColor;
@property (nonatomic) unsigned long long tintHighlightsColorIndex;
@property (nonatomic) BOOL disableTiltShiftRendering;
@property (readonly, nonatomic) BOOL hasFilterApplied;
@property (retain, nonatomic) NSString *photoFilterIdentifier;
@property (readonly, nonatomic) struct __CVBuffer * mediaPixelBuffer;
@property (readonly, nonatomic) NSArray *stickers;
@property (readonly, nonatomic) UIView *stickerContainerView;

/* instance methods */
- (void)dealloc;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame userSession:(id)session;
- (void)layoutSubviews;
- (id)generateFilteredMediaDisplayImageOfSize:(struct CGSize { double x0; double x1; })size;
- (id)generateUnfilteredMediaDisplayImage;
- (BOOL)isLuxEnabled;
- (void)setContentTransform:(struct _GLKMatrix4 { float x0[16] })transform;
- (void)setPhotoFilterIdentifier:(id)identifier defaultPhotoFilterStrengthOverride:(double)override;
- (void)flashTiltShiftHighlight;
- (void)fadeOutTiltShiftHighlight;
- (void)fadeInTiltShiftHighlight;
- (void)animateImageEdits;
- (void)drawIfNeeded;
- (void)setOverlayNeedsRefresh;
- (void)reduceRenderingCaches;
- (void)setImage:(id)image viewPortSize:(struct CGSize { double x0; double x1; })size;
- (void)prepareForReuse;
- (id)snapshot;
- (id)unfilteredSnapshot;
- (id)renderToImageOfSize:(struct CGSize { double x0; double x1; })size;
- (void)postPipelineFilterWillRender;
- (void)postPipelineFilterDidRender;
- (struct METARegion { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; double x2; })_mediaRegion;
- (void)updateStickers:(id)stickers;
- (void)setOverlayImage:(id)image;
- (void)addSticker:(id)sticker atIndex:(long long)index withSceneSpaceToMediaSpaceTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (void)stickerLayer:(id)layer stickerWasAddedToLayer:(id)layer;
- (void)stickerLayer:(id)layer stickerWillBeRemovedFromLayer:(id)layer;
- (void)stickerLayer:(id)layer didUpdateMediaRegion:(struct METARegion { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; double x2; })region;
- (void)stickerLayer:(id)layer didTransformToMatchMediaSpace:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })space;
- (BOOL)stickerLayer:(id)layer shouldTransformToMatchMediaSpace:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })space;
@end

#endif /* IGFBFilteredPhotoView_h */
