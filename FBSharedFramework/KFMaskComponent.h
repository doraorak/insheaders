//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef KFMaskComponent_h
#define KFMaskComponent_h
@import Foundation;

#include "KFComponent.h"

@protocol {KFValue<std::vector<KFPathCommand>>="_value"{variant<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__impl_"{__impl<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__data"(__union<std::__variant_detail::_Trait::_Available, 0UL, bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__dummy"c"__head"{__alt<0UL, bool>="__value"B}"__tail"(__union<std::__variant_detail::_Trait::_Available, 1UL, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__dummy"c"__head"{__alt<1UL, std::vector<KFPathCommand>>="__value"{vector<KFPathCommand, std::allocator<KFPathCommand>>="__begin_"^{KFPathCommand}"__end_"^{KFPathCommand}"__end_cap_"{__compressed_pair<KFPathCommand *, std::allocator<KFPathCommand>>="__value_"^{KFPathCommand}}}}"__tail"(__union<std::__variant_detail::_Trait::_Available, 2UL, KFAnimation<std::vector<KFPathCommand>> *>="__dummy"c"__head"{__alt<2UL, KFAnimation<std::vector<KFPathCommand>> *>="__value"^v}"__tail"(__union<std::__variant_detail::_Trait::_Available, 3UL>=))))"__index"I}}};

@interface KFMaskComponent : KFComponent {
  /* instance variables */
  struct KFValue<std::vector<KFPathCommand>> { struct variant<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { struct __impl<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { union __union<std::__variant_detail::_Trait::_Available, 0UL, bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_Available, 1UL, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<1UL, std::vector<KFPathCommand>> { struct vector<KFPathCommand, std::allocator<KFPathCommand>> { struct KFPathCommand *__begin_; struct KFPathCommand *__end_; struct __compressed_pair<KFPathCommand *, std::allocator<KFPathCommand>> { struct KFPathCommand *__value_; } __end_cap_; } __value; } __head; union __union<std::__variant_detail::_Trait::_Available, 2UL, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<2UL, KFAnimation<std::vector<KFPathCommand>> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_Available, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } path;
}

/* class methods */
+ (unsigned short)componentClassIdentifier;

/* instance methods */
@end

#endif /* KFMaskComponent_h */
