//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBBackgroundTaskGroup_h
#define FBBackgroundTaskGroup_h
@import Foundation;

#include "METADebouncer.h"

@class NSMutableDictionary, NSString;
@protocol {atomic<double>="__a_"{__cxx_atomic_impl<double, std::__cxx_atomic_base_impl<double>>="__a_value"Ad}}, {atomic<unsigned long>="__a_"{__cxx_atomic_impl<unsigned long, std::__cxx_atomic_base_impl<unsigned long>>="__a_value"AQ}};

@interface FBBackgroundTaskGroup : NSObject {
  /* instance variables */
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _taskMutex;
  NSMutableDictionary *_taskMap;
  unsigned long long _osTaskIdentifier;
  id /* block */ _expirationHandler;
  struct atomic<unsigned long> { struct __cxx_atomic_impl<unsigned long, std::__cxx_atomic_base_impl<unsigned long>> { atomic  __a_value; unsigned long long x0; } __a_; } _overallTaskCount;
  struct atomic<unsigned long> { struct __cxx_atomic_impl<unsigned long, std::__cxx_atomic_base_impl<unsigned long>> { atomic  __a_value; unsigned long long x0; } __a_; } _overallOSTaskCount;
  struct atomic<double> { struct __cxx_atomic_impl<double, std::__cxx_atomic_base_impl<double>> { atomic  __a_value; double x0; } __a_; } _timeOfLastTask;
  METADebouncer *_debouncer;
}

@property (readonly, copy, nonatomic) NSString *label;
@property (readonly, nonatomic) double debounceInterval;

/* instance methods */
- (id)initWithLabel:(id)label debounceInterval:(double)interval;
- (id)initWithLabel:(id)label;
- (void)dealloc;
- (unsigned long long)numberOfTasks;
- (unsigned long long)beginTaskWithName:(id)name expirationHandler:(id /* block */)handler;
- (void)endTask:(unsigned long long)task;
- (void)_debounceEndUIKitBackgroundTaskForIdentifier:(unsigned long long)identifier;
- (void)_endUIKitBackgroundTaskForIdentifier:(unsigned long long)identifier expired:(BOOL)expired;
- (void)_callExpirationHandler;
@end

#endif /* FBBackgroundTaskGroup_h */
