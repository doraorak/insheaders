//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef BKModel_Protocol_h
#define BKModel_Protocol_h
@import Foundation;

#include "BKBloksComponentController.h"
#include "BKClientID.h"
#include "BKContext.h"
#include "BKModel-Protocol.h"
#include "BKSourceMapNode.h"
#include "NSObject-Protocol.h"
#include "RCMountable-Protocol.h"

@class NSString, UIView;
@protocol {Optional<RCViewConfiguration>="_storage"{Storage<RCViewConfiguration, false, false, true>="hasValue"Q""(?="emptyState"c"value"{RCViewConfiguration="rep"{shared_ptr<const RCViewConfiguration::Repr>="__ptr_"^{Repr}"__cntrl_"^{__shared_weak_count}}})}}, {unique_ptr<RCMountInfo, std::default_delete<RCMountInfo>>="__ptr_"{__compressed_pair<RCMountInfo *, std::default_delete<RCMountInfo>>="__value_"^{RCMountInfo}}}, {vector<std::pair<int, id<NSObject>>, std::allocator<std::pair<int, id<NSObject>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<int, id<NSObject>> *, std::allocator<std::pair<int, id<NSObject>>>>="__value_"^v}};

@protocol BKModel <NSObject>
/* instance methods */
- (id)clientID;
- (id)serverID;
- (int)getStyleID;
- (id)getStringValue:(struct bloks_string { int x0; })value;
- (id)getWrappedIntegerValue:(struct bloks_int { int x0; })value;
- (id)getWrappedLongValue:(struct bloks_long { int x0; })value;
- (id)getWrappedBoolValue:(struct bloks_bool { int x0; })value;
- (id)getWrappedFloatValue:(struct bloks_float { int x0; })value;
- (id)getBloksScriptValue:(struct bloks_script { int x0; })value;
- (id)getElementIDValue:(struct bloks_element_id { int x0; })idvalue;
- (id)getTemplate:(struct bloks_template { int x0; })template;
- (id)getTemplatePlural:(struct bloks_template_plural { int x0; })plural;
- (id)getPrimitivePlural:(struct bloks_primitive_plural { int x0; })plural;
- (id)getUntypedObject:(struct bloks_untyped_object { int x0; })object;
- (id)getAlienObject:(struct bloks_template { int x0; })object;
- (id)getBlocklistedChildren:(struct bloks_template_plural_blocklisted { int x0; })children;
- (id)unsafeUntypedValueForProp:(int)prop;
@end

#endif /* BKModel_Protocol_h */
