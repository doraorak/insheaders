//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGSystemicNavigationLatencyLogger_h
#define IGSystemicNavigationLatencyLogger_h
@import Foundation;

#include "FBViewpointManager.h"
#include "IGAutomatedImageTrackerAnnouncer-Protocol.h"
#include "IGAutomatedImageTrackerListener-Protocol.h"
#include "IGAutomatedVideoTrackerAnnouncer-Protocol.h"
#include "IGAutomatedVideoTrackerListener-Protocol.h"
#include "IGSessionChainListener-Protocol.h"
#include "IGSessionChainProvider-Protocol.h"
#include "IGSystemicNavigationLatencyLogging-Protocol.h"
#include "IGUser.h"
#include "IGUserFlowLogger.h"

@class NSMapTable, NSMutableArray, NSMutableDictionary, NSString;
@protocol IGScopedNetworkingStatusAnnouncer, IGSystemicNavigationLatencyAnnouncer, IGSystemicNavigationLatencyLoggerDebugDelegate;

@interface IGSystemicNavigationLatencyLogger : NSObject<IGAutomatedImageTrackerListener, IGAutomatedVideoTrackerListener, IGSessionChainListener, IGSystemicNavigationLatencyLogging> {
  /* instance variables */
  IGUser *_user;
  NSObject<IGSystemicNavigationLatencyAnnouncer> *_announcer;
  NSObject<IGSessionChainProvider> *_sessionChainProvider;
  FBViewpointManager *_viewpointManager;
  double _recentTouchTimestamp;
  double _recentTouchTimestampValidUntilTimestamp;
  NSObject<IGAutomatedImageTrackerAnnouncer> *_automatedImageTrackerAnnouncer;
  NSObject<IGAutomatedVideoTrackerAnnouncer> *_automatedVideoTrackerAnnouncer;
  IGUserFlowLogger *_logger;
  NSMapTable *_viewControllersToBeTracked;
  NSMapTable *_viewControllerTrackers;
  NSMapTable *_analyticsModuleV1ToMediaTracking;
  NSMutableArray *_allTrackers;
  NSMutableArray *_eventsToProcess;
  NSMapTable *_trackersForTouches;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _networkingMutex;
  NSObject<IGScopedNetworkingStatusAnnouncer> *_networkingStatusAnnouncer;
  NSMutableDictionary *_URLsToBeTracked;
  unsigned long long _options;
  NSMutableDictionary *_analyticModuleV2ToUserFlowMarkers;
  NSObject<IGSystemicNavigationLatencyLoggerDebugDelegate> *_debugDelegate;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUser:(id)user announcer:(id)announcer sessionChainProvider:(id)provider imageTracker:(id)tracker videoTracker:(id)tracker qplHostMarkerID:(int)id networkingStatusAnnouncer:(id)announcer options:(unsigned long long)options;
- (void)shutdown;
- (void)_replayAndRerouteMediaEventsFromDelayedTracking:(id)tracking toMediaTracking:(id)tracking;
- (void)_routeMediaEventsFromAnalyticsModuleV1:(id)v1 toMediaTracking:(id)tracking;
- (double)_recentTouchTimestampIfValid;
- (void)sessionChainProvider:(id)provider didChangeFromSessionChain:(id)chain toSessionChain:(id)chain;
- (void)_processNavigationEvents;
- (id)_findEventsInSameViewControllerHierarchy:(id)hierarchy;
- (id)_findEventsFromArray:(id)array inSameHierarchyAsViewController:(id)controller;
- (id)_sortEventsFromArray:(id)array usingDistanceFromParentViewController:(id)controller;
- (long long)_depthBetweenViewController:(id)controller andParentViewController:(id)controller;
- (void)_processNavigationEvent:(id)event;
- (void)tracker:(id)tracker didObserveViewDidLoadAtTimestamp:(double)timestamp;
- (void)tracker:(id)tracker willObserveEventAtTimestamp:(double)timestamp;
- (void)tracker:(id)tracker didObserveEvent:(id)event atTimestamp:(double)timestamp;
- (void)tracker:(id)tracker willEndAtTimestamp:(double)timestamp;
- (void)tracker:(id)tracker didEndAtTimestamp:(double)timestamp;
- (double)recentUserInteractionTimestampForDelayedTracking:(id)tracking;
- (void)delayedTracking:(id)tracking didObserveAnalyticsModuleV1:(id)v1 analyticsModuleV2:(id)v2;
- (void)delayedTracking:(id)tracking shouldEndForViewController:(id)controller;
- (void)viewControllerDidInit:(id)init;
- (void)viewControllerWillDealloc:(id)dealloc;
- (id)trackingViewController:(id)controller;
- (void)disableTrackingViewController:(id)controller;
- (id)startEarlyTrackingForAnalyticsModuleV2:(id)v2;
- (void)earlyTracking:(id)tracking didCancelMarker:(id)marker atTimestamp:(double)timestamp;
- (void)earlyTracking:(id)tracking didFailMarker:(id)marker withError:(id)error atTimestamp:(double)timestamp;
- (void)earlyTracking:(id)tracking didFinishMarker:(id)marker withViewController:(id)controller andAnalyticsModule:(id)module atTimestamp:(double)timestamp;
- (void)imageDidStartTrackingWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidLoadFromSource:(unsigned long long)source imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidLoadAndComeOnScreenFromSource:(unsigned long long)source imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)didFailToLoadImageWithError:(id)error imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidComeOnScreenWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidGoOffScreenWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)videoDidStartTrackingWithVideoKey:(id)key forModule:(id)module inPlayer:(id)player;
- (void)videoDidComeOnScreenWithVideoKey:(id)key forModule:(id)module;
- (void)videoDidGoOffScreenWithVideoKey:(id)key forModule:(id)module;
- (void)actionableConfirmationToastPresenter:(id)presenter willShowEphemeralAlertWithViewModel:(id)model fromViewController:(id)controller;
- (void)actionableConfirmationToastPresenter:(id)presenter willShowPersistentAlertWithViewModel:(id)model fromViewController:(id)controller;
- (void)actionableConfirmationToastPresenter:(id)presenter willShowPersistentProgressViewWithViewModel:(id)model fromViewController:(id)controller;
- (void)requestDidStartWithURL:(id)url;
- (void)responseDidEndWithURL:(id)url forViewController:(id)controller withSuccess:(BOOL)success cache:(BOOL)cache error:(id)error;
@end

#endif /* IGSystemicNavigationLatencyLogger_h */
