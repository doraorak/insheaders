//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBWKWebView_h
#define FBWKWebView_h
@import Foundation;

#include "UIView.h"
#include "FBKVOController.h"
#include "FBPolicyZoneZonedValue.h"
#include "FBPrivacyContext.h"
#include "FBTRInterceptionConfig.h"
#include "FBTimer.h"
#include "FBWKWebViewDelegateAdaptor.h"
#include "FBWKWebViewNavigationRequest.h"
#include "FBWebViewDataStoreContaining-Protocol.h"
#include "FBWebViewMultiWindow-Protocol.h"
#include "_TtC10IABWebView12IABWKWebView.h"
#include "_TtC10IABWebView15IABWebStateView.h"
#include "_TtC16IABLegacyAdapter31LegacyWebViewJSInjectionAdapter.h"

@class NSArray, NSDate, NSMutableArray, NSMutableSet, NSRegularExpression, NSString, NSURL, UIScreenEdgePanGestureRecognizer, UIScrollView, UIView, WKBackForwardListItem, WKNavigation, WKWebView;
@protocol FBWebViewAlertHandler, FBWebViewAnalytics, FBWebViewDelegate, LegacyLifecycleAdapter;

@interface FBWKWebView : UIView<FBWebViewMultiWindow> {
  /* instance variables */
  FBKVOController *_KVOController;
  BOOL _readyToNavigate;
  id /* block */ _pendingBlockToRunWhenReady;
  FBTimer *_touchEventTimer;
  long long _hackPOSTMethod;
  NSRegularExpression *_linkshimPattern;
  BOOL _youtubeNavigationFix;
  BOOL _hidesTitle;
  BOOL _hidesURL;
  UIScreenEdgePanGestureRecognizer *_backGesture;
  NSMutableSet *_scriptMessageHandlerNames;
  BOOL _navDecisionOnDeallocEnabled;
  BOOL _enableUserInteractionDetectionFix;
  BOOL _disableWebViewLayout;
  BOOL _enableWebViewV2;
  _TtC10IABWebView12IABWKWebView *_webViewV2;
  _TtC10IABWebView15IABWebStateView *_webStateView;
  NSString *_defaultUserAgent;
  NSMutableArray *_webviews;
}

@property (readonly, nonatomic) FBWKWebViewDelegateAdaptor *delegateAdaptor;
@property (retain, nonatomic) FBPolicyZoneZonedValue *request;
@property (retain, nonatomic) FBPolicyZoneZonedValue *URL;
@property (nonatomic) BOOL isFollowingInitialURLChain;
@property (nonatomic) BOOL didCommitInitialNavigation;
@property (retain, nonatomic) NSMutableSet *initialURLChain;
@property (nonatomic) BOOL hasNonLinkshimInteraction;
@property (retain, nonatomic) FBWKWebViewNavigationRequest *pendingNavigationRequest;
@property (retain, nonatomic) NSObject<FBWebViewAlertHandler> *alertHandler;
@property (retain, nonatomic) NSObject<FBWebViewAnalytics> *analytics;
@property (retain, nonatomic) WKNavigation *perfLogNavigation;
@property (readonly, nonatomic) BOOL allowPopups;
@property (readonly, copy, nonatomic) NSArray *hostsForCookieInjector;
@property (nonatomic) BOOL isLoadingBlankPageForResetting;
@property (retain, nonatomic) NSString *paymentAutofillInlineJS;
@property (retain, nonatomic) NSMutableSet *paymentAutofillCachedFrames;
@property (retain, nonatomic) WKBackForwardListItem *lastItemOfLastSession;
@property (retain, nonatomic) NSObject<FBWebViewDataStoreContaining> *dataStoreContainer;
@property (nonatomic) BOOL enableITPLoginFlow;
@property (nonatomic) BOOL enableCookieHeaderFiddlingForITP;
@property (nonatomic) BOOL enableReplacingAEMPayloadWithTokenForClickID;
@property (nonatomic) BOOL enableClickIDAttachingAfterRedirections;
@property (nonatomic) BOOL shouldHandleBrowserPropertiesJSRequest;
@property (nonatomic) BOOL shouldHandleBrowserPropertiesForEpdOptIn;
@property (readonly, nonatomic) BOOL enableJSCompletionHandlerFix;
@property (readonly, nonatomic) BOOL enableUserAgentQuirkFix;
@property (readonly, nonatomic) BOOL enableMultiWindow;
@property (readonly, nonatomic) BOOL enableArchV2JSEvaluation;
@property (readonly, nonatomic) BOOL enablePaymentAutofillStaticJsInjection;
@property (readonly, nonatomic) BOOL enableContentfulPaintLogging;
@property (nonatomic) long long navigationState;
@property (retain, nonatomic) NSMutableArray *URLsOfCurrentNavigation;
@property (retain, nonatomic) NSDate *startTimeOfCurrentNavigation;
@property (retain, nonatomic) NSDate *interactiveTimeOfCurrentNavigation;
@property (retain, nonatomic) NSDate *fullyLoadedTimeOfCurrentNavigation;
@property (retain, nonatomic) NSDate *lastUserInteractionTime;
@property (retain, nonatomic) NSURL *lastURLFromURLChange;
@property (retain, nonatomic) NSURL *lastURLFromDecidePolicy;
@property (retain, nonatomic) NSURL *lastWebPageURLBrowsed;
@property (nonatomic) BOOL hasPendingDecision;
@property (readonly, nonatomic) FBPrivacyContext *privacyContext;
@property (readonly, nonatomic) FBTRInterceptionConfig *trInterceptionConfig;
@property (readonly, nonatomic) NSString *userAgent;
@property (nonatomic) long long displayState;
@property (readonly, nonatomic) WKWebView *webView;
@property (readonly, copy, nonatomic) NSString *title;
@property (readonly, copy, nonatomic) FBPolicyZoneZonedValue *currentLocationURL;
@property (readonly, nonatomic) BOOL canGoBack;
@property (readonly, nonatomic) BOOL canGoForward;
@property (nonatomic) BOOL allowsLinkPreview;
@property (copy, nonatomic) NSString *streamingWebViewEndpointURI;
@property (readonly, nonatomic) UIScrollView *scrollView;
@property (retain, nonatomic) UIView *bannerView;
@property (retain, nonatomic) UIView *errorView;
@property (readonly, nonatomic) BOOL loading;
@property (nonatomic) BOOL isBannerAtTop;
@property (weak, nonatomic) NSObject<FBWebViewDelegate> *delegate;
@property (nonatomic) BOOL allowPopupsOnlyDuringUserInteraction;
@property (copy, nonatomic) NSString *customUserAgent;
@property (nonatomic) BOOL allowsBackForwardNavigationGestures;
@property (readonly, nonatomic) double zoomScale;
@property (readonly, nonatomic) double minimumZoomScale;
@property (readonly, nonatomic) NSString *currentClickID;
@property (nonatomic) _TtC16IABLegacyAdapter31LegacyWebViewJSInjectionAdapter *v2WebViewJSInjectionAdapter;
@property (weak, nonatomic) NSObject<LegacyLifecycleAdapter> *legacyLifecycleAdapter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)addUnsupportedMIMEType:(id)mimetype;
+ (BOOL)isUnsupportedMIMEType:(id)mimetype;
+ (id)getTextSizeInheritStringValue:(id)value preferredContentSize:(id)size;

/* instance methods */
- (BOOL)isLoading;
- (void)setHackPOSTRequestMethod:(long long)method;
- (id)currentClickIDCombined:(id)idcombined;
- (void)setClickID:(id)id;
- (void)setClickIDCombined:(id)idcombined;
- (void)setClickIDConfigs:(id)idconfigs;
- (void)setFbcParams:(id)params;
- (void)setHasUserEpdOptOut:(BOOL)out;
- (void)setClickIDPool:(id)idpool;
- (void)_loadingStateChanged;
- (void)_estimatedProgressChanged;
- (void)_contentSizeChanged;
- (void)_titleChanged:(id)changed from:(id)from;
- (void)_URLChangedTo:(id)to from:(id)from;
- (void)_navigationHistoryChanged;
- (id)initWithParams:(struct FBWKWebViewInitParams { id x0; id x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; id x3; id x4; id x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; id x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; id x19; id x20; BOOL x21; BOOL x22; BOOL x23; id x24; id x25; BOOL x26; BOOL x27; BOOL x28; BOOL x29; BOOL x30; BOOL x31; BOOL x32; BOOL x33; id x34; })params;
- (id)initWithProcessPoolContainer:(id)container dataStoreContainer:(id)container frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame analytics:(id)analytics alertHandler:(id)handler hostsForCookieInjector:(id)injector enableAutomaticMediaPlayback:(BOOL)playback enablePaymentAutofill:(BOOL)autofill trInterceptionConfig:(id)config injectPCMJSToAllFrames:(BOOL)frames enableTextSizeInherit:(BOOL)inherit textSizeInheritValues:(id)values allowPIPMediaPlayback:(BOOL)playback enableITPLoginFlow:(BOOL)flow enableCookieHeaderFiddlingForITP:(BOOL)itp enableReplacingAEMPayloadWithTokenForClickID:(BOOL)id enableClickIDAttachingAfterRedirections:(BOOL)redirections shouldHandleBrowserPropertiesJSRequest:(BOOL)jsrequest shouldHandleBrowserPropertiesForEpdOptIn:(BOOL)in enableArchV2PopupNavigator:(BOOL)navigator autofillOdOverride:(id)override privacyContext:(id)context navDecisionOnDeallocEnabled:(BOOL)enabled enableUserInteractionDetectionFix:(BOOL)fix enableJSCompletionHandlerFix:(BOOL)fix defaultUserAgent:(id)agent enableUserAgentQuirkFix:(BOOL)fix disableWebViewLayout:(BOOL)layout useIabAutofillQRT:(BOOL)qrt enableWebViewV2:(BOOL)v2 enableMultiWindow:(BOOL)window enableArchV2JSEvaluation:(BOOL)jsevaluation enableContentfulPaintLogging:(BOOL)logging enablePaymentAutofillStaticJsInjection:(BOOL)injection productID:(id)id;
- (void)resetStateOfCurrentNavigation;
- (void)resetStateCommon;
- (void)resetForOpeningHistoryEntry;
- (void)resetForReuse;
- (void)viewControllerMayBeDismissed;
- (void)endUnfinishedNavigation;
- (void)endWebPageBrowsing;
- (void)applicationDidEnterBackground:(id)background;
- (void)dealloc;
- (id)_injectDeviceIdIfNeededForMobileWeb;
- (id)_TTIMetricScriptString;
- (id)_getTextSizeInheritString:(id)string;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)color;
- (void)setOpaque:(BOOL)opaque;
- (id)createWebViewWithConfiguration:(id)configuration forRequest:(id)request;
- (id)createWebViewWithConfiguration:(id)configuration;
- (void)configActiveWebView:(id)view withPreviousActiveWebView:(id)view;
- (void)resignActiveWebView:(id)view;
- (void)closeWebView:(id)view;
- (void)updateNavigationHistoryForWebView:(id)view withNavigationType:(long long)type;
- (void)removeWebViewsAfterWebView:(id)view;
- (void)setV2WebViewNavigationDelegate:(id)delegate;
- (void)evaluateJavaScript:(id)script completionHandler:(id /* block */)handler;
- (void)evaluateJavaScript:(id)script scope:(long long)scope completionHandler:(id /* block */)handler;
- (void)evaluateJavaScript:(id)script inFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)evaluateJavaScript:(id)script scope:(long long)scope inFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)forceYoutubeRestrictedMode;
- (void)safeExecuteJavaScript:(id)script completionHandler:(id /* block */)handler;
- (void)safeExecuteJavaScript:(id)script scope:(long long)scope completionHandler:(id /* block */)handler;
- (id)stringByEvaluatingJavaScriptFromString:(id)string;
- (void)loadRequest:(id)request;
- (void)loadHTMLString:(id)htmlstring baseURL:(id)url;
- (void)loadData:(id)data MIMEType:(id)mimetype characterEncodingName:(id)name baseURL:(id)url;
- (void)_runBlockWhenReadyToNavigate:(id /* block */)navigate;
- (void)_setReadyToNavigate;
- (BOOL)_tryHackPOSTForRequest:(id)request;
- (BOOL)_activeWebViewCanGoBack;
- (BOOL)_willGoingBackGoToLastSession;
- (id)_findBackGesture;
- (void)goBack;
- (void)goForward;
- (void)reload;
- (void)stopLoading;
- (BOOL)hasOnlySecureContent;
- (void)addScriptMessageHandlerForName:(id)name;
- (void)addScriptMessageHandlerWithReplyForName:(id)name;
- (void)addScriptMessageHandlerWithReplyForName:(id)name scope:(long long)scope;
- (id)getContentWorld:(long long)world;
- (void)removeScriptMessageHandlerForName:(id)name;
- (void)setCookieWithName:(id)name value:(id)value forDomain:(id)domain path:(id)path secure:(BOOL)secure expire:(id)expire httpOnly:(BOOL)only;
- (void)injectJavaScript:(id)script withName:(id)name injectionTime:(long long)time forMainFrameOnly:(BOOL)only;
- (void)tryStoppingAudioPlayingWithCompletionHandler:(id /* block */)handler;
- (id)previousLocationURL;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (void)_touchEventDetector;
@end

#endif /* FBWKWebView_h */
