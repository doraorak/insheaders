//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGAREffectApplicator_h
#define IGAREffectApplicator_h
@import Foundation;

#include "FBARAvatarsDataProviderDelegateWrapper.h"
#include "FBARCaptureScopePersistenceDelegateProvider.h"
#include "FBARGalleryPickerServiceDataProvider.h"
#include "FBARInMemoryPersistenceDelegateProvider.h"
#include "FBARPlatformEventsDataProviderConfiguration.h"
#include "FBARPlatformTexturesServiceConfiguration.h"
#include "FBARServiceHostBase.h"
#include "FBAudioStreamRecorder.h"
#include "FBCCMSQRDBasicFilterController.h"
#include "IGAREffectDownloader.h"
#include "IGAREffectLifecycleHandler.h"
#include "IGAREffectListController.h"
#include "IGAREffectNativeUIControlHandler.h"
#include "IGARInstructionServiceHandler.h"
#include "IGARPlatformTexturesServiceDataProvider.h"
#include "IGARServicesFailureHandler.h"
#include "IGAsyncTask.h"
#include "IGAudioMusicTrackClip.h"
#include "IGCameraAREffectsLoggingContext.h"
#include "IGCameraEffectAudioConfigurationChangeProvider.h"
#include "IGScopedListener-Protocol.h"
#include "IGUserSession.h"
#include "_IGARApplicatorStateController.h"

@class AVAssetExportSession, NSData, NSString;
@protocol FBARAnalyticsLogging, FBCCAudioGraphClientProvider, IGARAudioEffectTimeUpdateListener><IGARAudioEffectDataConsumer, IGARCaptionsEffectDataConsumer, IGAREffectApplicationListener, IGAREffectApplicatorCameraControlDelegate, IGAREffectAvailabilityListener, IGAREffectPlatformEventsSender, IGAvatarEventsDelegate, IGCallLayoutCommunicationListener, IGCameraSLAMControllerProvider, IGCharacterEventsDelegate, IGMultipeerEffectCommunicationListener, IGParticipantEffectCommunicationListener, IGPeerVideoStreamsServiceDataSourceProvider, IGSuperReshareMemeItEventsDelegate, IGVideoCapturing><IGAudioCapturing, {shared_ptr<msqrd::logging::IRawEventLogger>="__ptr_"^{IRawEventLogger}"__cntrl_"^{__shared_weak_count}};

@interface IGAREffectApplicator : NSObject<IGScopedListener> {
  /* instance variables */
  NSObject<IGVideoCapturing><IGAudioCapturing> *_videoCaptureManager;
  FBARPlatformEventsDataProviderConfiguration *_platformEventsConfig;
  FBARPlatformEventsDataProviderConfiguration *_platformEventsConfigTranscode;
  FBARPlatformTexturesServiceConfiguration *_platformTexturesConfig;
  FBCCMSQRDBasicFilterController *_arEffectController;
  IGAREffectNativeUIControlHandler *_nativeUIControlHandler;
  IGARInstructionServiceHandler *_instructionServiceHandler;
  IGARServicesFailureHandler *_servicesFailureHandler;
  IGAREffectLifecycleHandler *_effectLifecycleHandler;
  _IGARApplicatorStateController *_applicatorStateController;
  NSObject<IGCameraSLAMControllerProvider> *_cameraSLAMControllerProvider;
  FBARAvatarsDataProviderDelegateWrapper *_avatarsDataProviderDelegate;
  NSObject<IGAREffectApplicatorCameraControlDelegate> *_cameraControlDelegate;
  NSObject<IGAREffectAvailabilityListener> *_effectAvailabilityListener;
  NSObject<IGAREffectApplicationListener> *_effectApplicationListener;
  struct IGCameraPreviewInfo { long long cameraPosition; struct CGSize { double width; double height; } previewSize; struct UIEdgeInsets { double top; double left; double bottom; double right; } safeArea; BOOL isPostCapture; } _cameraInfo;
  unsigned long long _applicatorSurface;
  IGUserSession *_userSession;
  BOOL _doesAREffectNeedToCreatedUponMediaPreviewCancel;
  BOOL _canLogFaceDetected;
  IGAREffectListController *_arEffectListController;
  FBARCaptureScopePersistenceDelegateProvider *_captureScopeDelegateProvider;
  IGCameraEffectAudioConfigurationChangeProvider *_audioConfigurationChangeProvider;
  AVAssetExportSession *_assetExportSession;
  struct { NSString *title; NSString *artist; NSString *genre; NSString *category; } _songInfo;
  struct { NSString *path; struct { long long value; int timescale; unsigned int flags; long long epoch; } clipStartTimeMarker; struct { long long value; int timescale; unsigned int flags; long long epoch; } clipDuration; } _clipInfo;
  IGCameraAREffectsLoggingContext *_cameraLoggingContext;
  NSString *_previousGalleryPickerEffectID;
  IGAsyncTask *_greenScreenEffect;
  IGAsyncTask *_storyRemixReactionGreenScreenEffect;
  IGAsyncTask *_remixGreenscreenFetchTask;
  IGAsyncTask *_anonymityEffect;
  BOOL _useIGTemporaryDirectory;
  BOOL _enableFBAInAudioEngine;
  BOOL _isE2EE;
  NSObject<FBARAnalyticsLogging> *_arAnalyticsLogger;
  struct shared_ptr<msqrd::logging::IRawEventLogger> { struct IRawEventLogger *__ptr_; struct __shared_weak_count *__cntrl_; } _arRawEventLogger;
  FBARServiceHostBase *_arServiceHost;
  BOOL _useArmadilloCompliantAvatarLogging;
  FBAudioStreamRecorder *_audioRecorder;
  NSData *_audioBuffer;
  BOOL _isRecording;
  BOOL _shouldResumeRecording;
  BOOL _isEffectRecording;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _audioBufferMutex;
  BOOL _isAREffectFeatureReady;
  BOOL _disableLogFaceDetected;
  FBARInMemoryPersistenceDelegateProvider *_inMemoryPersistenceDelegateProvider;
  IGAREffectDownloader *_arEffectDownloader;
  long long _arEffectSurface;
  FBARGalleryPickerServiceDataProvider *_galleryPickerDataProvider;
  IGARPlatformTexturesServiceDataProvider *_platformTexturesDataProvider;
  long long _effectSelectionSurface;
  NSObject<IGMultipeerEffectCommunicationListener> *_multipeerEffectCommunicationListener;
  NSObject<IGParticipantEffectCommunicationListener> *_participantEffectCommunicationListener;
  NSObject<IGCallLayoutCommunicationListener> *_callLayoutCommunicationListener;
  NSObject<IGPeerVideoStreamsServiceDataSourceProvider> *_peerVideoStreamsServiceDataSourceProvider;
  NSObject<IGARAudioEffectTimeUpdateListener><IGARAudioEffectDataConsumer> *_arAudioEffectService;
  NSObject<IGARCaptionsEffectDataConsumer> *_arCaptionsService;
  NSObject<IGAREffectPlatformEventsSender> *_platformEventsService;
  id /* block */ _avatarEffectEligibilityBlock;
  id /* block */ _avatarLoadingStateDoneBlock;
  NSObject<IGAvatarEventsDelegate> *_avatarEventsDelegate;
  NSObject<IGCharacterEventsDelegate> *_characterEventsDelegate;
  NSObject<IGSuperReshareMemeItEventsDelegate> *_superReshareMemeItEventsDelegate;
  IGAudioMusicTrackClip *_musicClip;
}

@property BOOL muteState;
@property (nonatomic) BOOL isMuted;
@property (readonly, nonatomic) long long cameraPosition;
@property (retain, nonatomic) NSObject<FBCCAudioGraphClientProvider> *rtcAudioGraphClientProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithCaptureManager:(id)manager userSession:(id)session isE2EE:(BOOL)ee initialEffectSurface:(long long)surface applicatorSurface:(unsigned long long)surface cameraInfo:(struct IGCameraPreviewInfo { long long x0; struct CGSize { double x0; double x1; } x1; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x2; BOOL x3; })info arEffectChainingContext:(id)context nativeUIControlDelegate:(id)delegate cameraControlDelegate:(id)delegate cameraSLAMControllerProvider:(id)provider effectAvailabilityListener:(id)listener effectApplicationListener:(id)listener effectInstructionPresenter:(id)presenter effectsLoggingContext:(id)context;
- (void)dealloc;
- (void)deactivate;
- (void)prefetchAREffectAssetWithHighPriorityForEffectModel:(id)model;
- (void)sendDataToCurrentAREffect:(id)areffect;
- (void)setZoomScale:(double)scale;
- (void)updatePreCaptureIGImageFilter:(id)filter;
- (void)gestureServiceChanged;
- (void)arEffectDownloader:(id)downloader didUpdateEffectList:(id)list targetEffectResponse:(id)response fromNetwork:(BOOL)network;
- (void)arEffectDownloader:(id)downloader didFailWithTargetEffectResponse:(id)response;
- (void)arEffectDownloader:(id)downloader didFailFetchWithError:(id)error;
- (void)arEffectDownloaderAREffectDidBecomeAvailable:(id)available;
- (void)arEffectDownloaderSharedDependenciesAreReady:(id)ready;
- (void)arEffectDownloader:(id)downloader didCompleteDownloadAREffectFromLoadState:(id)state;
- (void)arEffectDownloader:(id)downloader didUpdateDownloadingProgress:(double)progress forEffect:(id)effect;
- (void)servicesForEffectDescriptor:(id)descriptor didGenerateFrameFeedback:(id)feedback;
- (BOOL)_shouldForceNoCameraPreviewWithEffectID:(id)id;
- (id)videoProcessorController;
- (id)currentAREffectModel;
- (id)currentlySelectedAssetModel;
- (void)engineDidFailToLoadEffectID:(id)id withError:(id)error;
- (void)engineDidRenderFirstFrameForEffectID:(id)id;
- (void)engineDidFailToRenderEffectID:(id)id withError:(id)error;
- (void)engineDidLoadEffectID:(id)id;
- (void)platformEventsServiceForEffectDescriptor:(id)descriptor didReceiveEventWithData:(id)data;
- (void)_applicationDidEnterBackground:(id)background;
- (void)_applicationWillEnterForeground:(id)foreground;
- (void)startAudioCapture;
- (void)setAudioCategoryForAudioCapture;
- (void)stopAudioCapture;
- (struct vector<unsigned char, std::allocator<unsigned char>> { char * x0; char * x1; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char * x0; } x2; })audioChunk;
- (void)onAudioUpdate:(short *)update withLength:(unsigned long long)length;
- (void)onAudioInputVolumeUpdate:(float)update;
- (void)onSampleAmplitudesUpdate:(float *)update withSampleSize:(unsigned long long)size;
- (void)multipeerSendMessage:(id)message toTopic:(id)topic usingRTPChannel:(BOOL)rtpchannel;
- (void)multipeerSendBinaryMessage:(id)message toTopic:(id)topic usingRTPChannel:(BOOL)rtpchannel;
- (void)multipeerSetHandler:(id /* block */)handler forTopic:(id)topic;
- (void)multipeerSetBinaryHandler:(id /* block */)handler forTopic:(id)topic;
- (id)currentUserForEffectDescriptor:(id)descriptor;
- (id)currentParticipantsForEffectDescriptor:(id)descriptor;
- (void)setParticipantsUpdatedHandler:(id /* block */)handler forEffectDescriptor:(id)descriptor;
- (void)sendDataToCurrentAREffectInTranscode:(id)transcode;
- (BOOL)isPlatformEventsTranscodeConfigPresent;
@end

#endif /* IGAREffectApplicator_h */
