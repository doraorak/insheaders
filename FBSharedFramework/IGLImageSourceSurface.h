//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGLImageSourceSurface_h
#define IGLImageSourceSurface_h
@import Foundation;

#include "ImageSourceSurface-Protocol.h"

@class NSArray, NSString;
@protocol struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; }, {shared_ptr<igl::IFramebuffer>="__ptr_"^{IFramebuffer}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::ITexture>="__ptr_"^{ITexture}"__cntrl_"^{__shared_weak_count}};

@interface IGLImageSourceSurface : NSObject<ImageSourceSurface> {
  /* instance variables */
  struct shared_ptr<igl::IFramebuffer> { struct IFramebuffer *__ptr_; struct __shared_weak_count *__cntrl_; } _iglFramebuffer;
}

@property (readonly, nonatomic) long long type;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } size;
@property (readonly, nonatomic) struct __CVBuffer * pixelBuffer;
@property (nonatomic) struct CGColorSpace * colorSpace;
@property (readonly, nonatomic) BOOL alphaIsPremultiplied;
@property (readonly, copy, nonatomic) NSString *label;
@property (readonly, nonatomic) struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; } iglTexture;
@property (readonly, nonatomic) struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; } iglChromaTexture;
@property (readonly, copy, nonatomic) NSArray *textures;

/* instance methods */
- (id)initWithRGBTexture:(struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; })rgbtexture pixelBuffer:(struct __CVBuffer *)buffer colorSpace:(struct CGColorSpace *)space alphaIsPremultiplied:(BOOL)premultiplied label:(id)label;
- (id)initWithLumaTexture:(struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; })texture chromaTexture:(struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; })texture pixelBuffer:(struct __CVBuffer *)buffer colorSpace:(struct CGColorSpace *)space label:(id)label;
- (id)initWithFramebuffer:(struct shared_ptr<igl::IFramebuffer> { struct IFramebuffer * x0; struct __shared_weak_count * x1; })framebuffer colorSpace:(struct CGColorSpace *)space label:(id)label;
- (struct InputDescriptor { struct Format { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; } x0; struct map<iglu::filterkit::IFilter::InputDescriptor::Slot, std::shared_ptr<igl::ITexture>, std::less<iglu::filterkit::IFilter::InputDescriptor::Slot>, std::allocator<std::pair<const iglu::filterkit::IFilter::InputDescriptor::Slot, std::shared_ptr<igl::ITexture>>>> { struct __tree<std::__value_type<iglu::filterkit::IFilter::InputDescriptor::Slot, std::shared_ptr<igl::ITexture>>, std::__map_value_compare<iglu::filterkit::IFilter::InputDescriptor::Slot, std::__value_type<iglu::filterkit::IFilter::InputDescriptor::Slot, std::shared_ptr<igl::ITexture>>, std::less<iglu::filterkit::IFilter::InputDescriptor::Slot>>, std::allocator<std::__value_type<iglu::filterkit::IFilter::InputDescriptor::Slot, std::shared_ptr<igl::ITexture>>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<iglu::filterkit::IFilter::InputDescriptor::Slot, std::shared_ptr<igl::ITexture>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<iglu::filterkit::IFilter::InputDescriptor::Slot, std::__value_type<iglu::filterkit::IFilter::InputDescriptor::Slot, std::shared_ptr<igl::ITexture>>, std::less<iglu::filterkit::IFilter::InputDescriptor::Slot>>> { unsigned long long x0; } x2; } x0; } x1; })inputDescriptor;
- (struct shared_ptr<igl::IFramebuffer> { struct IFramebuffer * x0; struct __shared_weak_count * x1; })framebufferWithContext:(id)context;
- (void)dealloc;
@end

#endif /* IGLImageSourceSurface_h */
