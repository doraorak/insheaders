//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGPrefetchManager_h
#define IGPrefetchManager_h
@import Foundation;

#include "FNFPrefetchChain.h"
#include "IGAutomatedImageTrackerAnnouncer-Protocol.h"
#include "IGAutomatedImageTrackerListener-Protocol.h"
#include "IGAutomatedVideoTrackerAnnouncer-Protocol.h"
#include "IGAutomatedVideoTrackerListener-Protocol.h"
#include "IGBulkMediaRequestManager.h"
#include "IGNetworkSpeedProvider.h"
#include "IGPrefetchDeduplicator.h"
#include "IGPrefetchManaging-Protocol.h"
#include "IGPrefetchPostsConfiguration.h"
#include "IGScopeEnding-Protocol.h"
#include "IGUserLauncherSetProviding-Protocol.h"
#include "IGVideoLoading-Protocol.h"
#include "_TtC22IGMediaPrefetchUIGraph17IGPrefetchUIGraph.h"

@class NSDate, NSDictionary, NSString;

@interface IGPrefetchManager : NSObject<IGAutomatedImageTrackerListener, IGAutomatedVideoTrackerListener, IGPrefetchManaging, IGScopeEnding> {
  /* instance variables */
  NSObject<IGUserLauncherSetProviding> *_featureSets;
  NSObject<IGVideoLoading> *_sessionVideoLoader;
  NSObject<IGPrefetchManaging> *_sessionFNFPrefetchManager;
  IGPrefetchPostsConfiguration *_prefetchConfiguration;
  IGBulkMediaRequestManager *_requestManager;
  IGNetworkSpeedProvider *_networkSpeedProvider;
  IGPrefetchDeduplicator *_deduplicator;
  _TtC22IGMediaPrefetchUIGraph17IGPrefetchUIGraph *_prefetchUIGraph;
  BOOL _enableFNFFlow;
  BOOL _enableDetectUnsupportedCallsite;
  BOOL _enableDeduplicator;
  BOOL _enableImmediateCompletion;
  BOOL _enableIgnoreLoadingConfigABR;
  BOOL _enableIgnoreLoadingConfigSegmentCount;
  BOOL _enableIgnoreLoadingConfigAllowMultipleSessions;
  BOOL _enableIgnoreLoadingConfigProgressiveReadAheadLimit;
  BOOL _enableUseDefaultLoadingConfig;
  BOOL _enableOverrideLoadingConfigBandwidthFraction;
  double _overrideLoadingConfigBandwidthFraction;
  FNFPrefetchChain *_prefetchChain;
  NSObject<IGAutomatedImageTrackerAnnouncer> *_imageTrackerAnnouncer;
  NSObject<IGAutomatedVideoTrackerAnnouncer> *_videoTrackerAnnouncer;
  NSDictionary *_moduleToChainIDForImage;
  NSDictionary *_moduleToChainIDForVideo;
  NSDictionary *_chainIDToDepth;
  NSString *_currentModule;
  BOOL _enableDelayFirstExplorePrefetch;
  BOOL _didDelayFirstExplorePrefetch;
  NSDate *_initTimestamp;
  BOOL _enableImageOnlyFirstExplorePrefetch;
  BOOL _didImageOnlyFirstExplorePrefetch;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithPrefetchConfiguration:(id)configuration sessionVideoLoader:(id)loader sessionFNFPrefetchManager:(id)manager videoProxy:(id)proxy requestManager:(id)manager featureSets:(id)sets networkSpeedProvider:(id)provider uiGraph:(id)graph imageTrackerAnnouncer:(id)announcer videoTrackerAnnouncer:(id)announcer;
- (void)bulkPrefetchVideos:(id)videos module:(id)module organicPrefetchConfig:(id)config adsPrefetchConfig:(id)config lazyLoadAudioTrack:(BOOL)track callsite:(Class)callsite isImmersive:(BOOL)immersive trackingWith:(id)with completionHandler:(id /* block */)handler;
- (void)cancelLoadingVideo:(id)video;
- (void)prefetchMediaForItems:(id)items module:(id)module lazyLoadAudioTrack:(BOOL)track;
- (void)_doPrefetchMediaForItems:(id)items module:(id)module lazyLoadAudioTrack:(BOOL)track;
- (void)prefetchMediaForItems:(id)items module:(id)module isReload:(BOOL)reload offset:(unsigned long long)offset lazyLoadAudioTrack:(BOOL)track;
- (void)scopeWillEnd;
- (void)_curbImageURLs:(id)urls module:(id)module;
- (void)_curbVideos:(id)videos module:(id)module lazyLoadAudioTrack:(BOOL)track;
- (void)_curbPrefetchItems:(id)items module:(id)module lazyLoadAudioTrack:(BOOL)track;
- (void)_setupPrefetchChainConfigs;
- (BOOL)_videoShouldUsePrefetchChainForModule:(id)module;
- (BOOL)_imageShouldUsePrefetchChainForModule:(id)module;
- (void)_updatePrefetchChain:(id)chain mediaID:(id)id;
- (id)_processLoadingConfig:(id)config;
- (void)_doDelayedPrefetch:(double)prefetch items:(id)items module:(id)module lazyLoadAudioTrack:(BOOL)track;
- (void)imageDidStartTrackingWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidLoadFromSource:(unsigned long long)source imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidLoadAndComeOnScreenFromSource:(unsigned long long)source imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)didFailToLoadImageWithError:(id)error imageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidComeOnScreenWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)imageDidGoOffScreenWithImageURL:(id)url forModule:(id)module inView:(id)view;
- (void)videoDidStartTrackingWithVideoKey:(id)key forModule:(id)module inPlayer:(id)player;
- (void)videoDidComeOnScreenWithVideoKey:(id)key forModule:(id)module;
- (void)videoDidGoOffScreenWithVideoKey:(id)key forModule:(id)module;
- (void)moduleDidChangeTo:(id)to;
- (void)currentModuleDidUpdateToState:(id)state change:(unsigned long long)change;
- (void)moduleItem:(id)item didTransitionFrom:(unsigned long long)from to:(unsigned long long)to;
@end

#endif /* IGPrefetchManager_h */
