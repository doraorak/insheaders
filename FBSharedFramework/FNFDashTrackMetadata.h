//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFDashTrackMetadata_h
#define FNFDashTrackMetadata_h
@import Foundation;

#include "FNFDashTrackEntryContainer.h"

@class NSArray, NSString, NSURL;
@protocol {vector<std::pair<double, double>, std::allocator<std::pair<double, double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<double, double> *, std::allocator<std::pair<double, double>>>="__value_"^v}};

@interface FNFDashTrackMetadata : NSObject {
  /* instance variables */
  struct vector<std::pair<double, double>, std::allocator<std::pair<double, double>>> { void *__begin_; void *__end_; struct __compressed_pair<std::pair<double, double> *, std::allocator<std::pair<double, double>>> { void *__value_; } __end_cap_; } _resolutionMosPairs;
  struct vector<std::pair<double, double>, std::allocator<std::pair<double, double>>> { void *__begin_; void *__end_; struct __compressed_pair<std::pair<double, double> *, std::allocator<std::pair<double, double>>> { void *__value_; } __end_cap_; } _resolutionMosPairsCsvqm;
  NSArray *_abrPolicyTags;
}

@property (readonly, copy, nonatomic) NSString *representationId;
@property (readonly, nonatomic) unsigned int width;
@property (readonly, nonatomic) unsigned int height;
@property (readonly, nonatomic) unsigned int bandwidth;
@property (readonly, nonatomic) unsigned int maxBandwidth;
@property (readonly, nonatomic) BOOL dynamicQualityDropped;
@property (readonly, copy, nonatomic) NSString *qualityLabel;
@property (readonly, copy, nonatomic) NSString *mimeType;
@property (readonly, copy, nonatomic) NSString *codecs;
@property (readonly, nonatomic) BOOL isUltraLowLatency;
@property (readonly, copy, nonatomic) NSString *encodingTag;
@property (readonly, copy, nonatomic) NSString *captionLabel;
@property (readonly, copy, nonatomic) NSString *lang;
@property (readonly, copy, nonatomic) NSString *role;
@property (readonly, copy, nonatomic) NSString *tagset;
@property (readonly, copy, nonatomic) NSString *manifestExperimentDescription;
@property (readonly, copy, nonatomic) NSString *playbackResolutionMos;
@property (readonly, copy, nonatomic) NSString *playbackResolutionCsvqm;
@property (readonly, nonatomic) BOOL isDefault;
@property (readonly, nonatomic) BOOL isAudioABREligible;
@property (readonly, nonatomic) unsigned int frameRate;
@property (readonly, nonatomic) int firstSegmentDurationMS;
@property (readonly, copy, nonatomic) NSURL *initializationUrl;
@property (readonly, copy, nonatomic) NSString *projection;
@property (readonly, copy, nonatomic) NSString *audioChannelConfiguration;
@property (readonly, copy, nonatomic) NSString *encodedInitData;
@property (readonly, nonatomic) unsigned long long source;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } indexRange;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } initializationRange;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } firstSegmentRange;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } secondSegmentRange;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } prefetchSegmentRange;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } firstKeyFrameRange;
@property (readonly, nonatomic) unsigned int timelineDuration;
@property (readonly, copy, nonatomic) NSURL *mpdUrl;
@property (readonly, copy, nonatomic) FNFDashTrackEntryContainer *timelineEntries;
@property (readonly, copy, nonatomic) FNFDashTrackEntryContainer *predictiveTimelineEntries;
@property (readonly, copy, nonatomic) FNFDashTrackEntryContainer *generatedTimelineEntries;
@property (readonly, nonatomic) int averageDurationTimeValue;
@property (readonly, nonatomic) unsigned int timelineTimescale;
@property (readonly, copy, nonatomic) NSString *predictiveMediaUrlTemplate;
@property (readonly, nonatomic) int predictiveMediaEndNumber;
@property (readonly, nonatomic) int predictiveMediaStartNumber;
@property (readonly, copy, nonatomic) NSString *pssh;
@property (readonly, copy, nonatomic) NSString *keyId;
@property (readonly, nonatomic) long long contentProtectionMode;

/* class methods */
+ (id)segmentBaseMetadataWithId:(id)id width:(unsigned int)width height:(unsigned int)height bandwidth:(unsigned int)bandwidth maxBandwidth:(unsigned int)bandwidth dynamicQualityDropped:(BOOL)dropped abrPolicyTags:(id)tags qualityLabel:(id)label mimeType:(id)type codecs:(id)codecs encodingTag:(id)tag captionLabel:(id)label lang:(id)lang role:(id)role isAudioABREligible:(BOOL)abreligible tagset:(id)tagset manifestExperimentDescription:(id)description initializationUrl:(id)url projection:(id)projection audioChannelConfiguration:(id)configuration indexRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range initializationRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range firstSegmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range secondSegmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range prefetchSegmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range firstKeyFrameRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range pssh:(id)pssh keyId:(id)id contentProtectionMode:(id)mode playbackResolutionMos:(id)mos playbackResolutionCsvqm:(id)csvqm isDefault:(BOOL)default frameRate:(unsigned int)rate firstSegmentDurationMS:(int)ms source:(unsigned long long)source;
+ (id)segmentListMetadataWithId:(id)id width:(unsigned int)width height:(unsigned int)height bandwidth:(unsigned int)bandwidth maxBandwidth:(unsigned int)bandwidth dynamicQualityDropped:(BOOL)dropped abrPolicyTags:(id)tags qualityLabel:(id)label mimeType:(id)type codecs:(id)codecs encodingTag:(id)tag captionLabel:(id)label lang:(id)lang role:(id)role isAudioABREligible:(BOOL)abreligible tagset:(id)tagset manifestExperimentDescription:(id)description initializationUrl:(id)url projection:(id)projection audioChannelConfiguration:(id)configuration timelineTimescale:(unsigned int)timescale timelineDuration:(unsigned int)duration timelineEntries:(id)entries pssh:(id)pssh keyId:(id)id contentProtectionMode:(id)mode playbackResolutionMos:(id)mos playbackResolutionCsvqm:(id)csvqm isDefault:(BOOL)default source:(unsigned long long)source;
+ (id)segmentTemplateMetadataWithId:(id)id width:(unsigned int)width height:(unsigned int)height bandwidth:(unsigned int)bandwidth maxBandwidth:(unsigned int)bandwidth dynamicQualityDropped:(BOOL)dropped abrPolicyTags:(id)tags qualityLabel:(id)label mimeType:(id)type codecs:(id)codecs isUltraLowLatency:(BOOL)latency encodingTag:(id)tag captionLabel:(id)label lang:(id)lang role:(id)role isAudioABREligible:(BOOL)abreligible tagset:(id)tagset manifestExperimentDescription:(id)description initializationUrl:(id)url projection:(id)projection audioChannelConfiguration:(id)configuration timelineTimescale:(unsigned int)timescale timelineEntries:(id)entries predictiveTimelineEntries:(id)entries generatedTimelineEntries:(id)entries encodedInitData:(id)data mpdUrl:(id)url mediaUrlTemplate:(id)template predictiveMediaUrlTemplate:(id)template predictiveMediaEndNumber:(int)number predictiveMediaStartNumber:(int)number averageDurationTimeValue:(int)value pssh:(id)pssh keyId:(id)id contentProtectionMode:(id)mode playbackResolutionMos:(id)mos playbackResolutionCsvqm:(id)csvqm isDefault:(BOOL)default source:(unsigned long long)source;

/* instance methods */
- (id)initWithId:(id)id width:(unsigned int)width height:(unsigned int)height bandwidth:(unsigned int)bandwidth maxBandwidth:(unsigned int)bandwidth dynamicQualityDropped:(BOOL)dropped abrPolicyTags:(id)tags qualityLabel:(id)label mimeType:(id)type codecs:(id)codecs isUltraLowLatency:(BOOL)latency encodingTag:(id)tag captionLabel:(id)label lang:(id)lang role:(id)role isAudioABREligible:(BOOL)abreligible tagset:(id)tagset manifestExperimentDescription:(id)description initializationUrl:(id)url projection:(id)projection audioChannelConfiguration:(id)configuration indexRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range initializationRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range firstSegmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range secondSegmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range prefetchSegmentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range firstKeyFrameRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range timelineTimescale:(unsigned int)timescale timelineDuration:(unsigned int)duration timelineEntries:(id)entries predictiveTimelineEntries:(id)entries generatedTimelineEntries:(id)entries encodedInitData:(id)data mpdUrl:(id)url mediaUrlTemplate:(id)template predictiveMediaUrlTemplate:(id)template predictiveMediaEndNumber:(int)number predictiveMediaStartNumber:(int)number averageDurationTimeValue:(int)value pssh:(id)pssh keyId:(id)id contentProtectionMode:(id)mode playbackResolutionMos:(id)mos playbackResolutionCsvqm:(id)csvqm isDefault:(BOOL)default source:(unsigned long long)source frameRate:(unsigned int)rate firstSegmentDurationMS:(int)ms;
- (BOOL)containsABRPolicyTag:(id)tag;
- (struct vector<std::pair<double, double>, std::allocator<std::pair<double, double>>> { void * x0; void * x1; struct __compressed_pair<std::pair<double, double> *, std::allocator<std::pair<double, double>>> { void * x0; } x2; })resolutionMosPairs;
- (struct vector<std::pair<double, double>, std::allocator<std::pair<double, double>>> { void * x0; void * x1; struct __compressed_pair<std::pair<double, double> *, std::allocator<std::pair<double, double>>> { void * x0; } x2; })resolutionMosPairsCsvqm;
@end

#endif /* FNFDashTrackMetadata_h */
