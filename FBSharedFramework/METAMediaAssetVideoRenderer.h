//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef METAMediaAssetVideoRenderer_h
#define METAMediaAssetVideoRenderer_h
@import Foundation;

#include "FBCCHDRColorConvert.h"
#include "IGAsyncTask.h"
#include "IGGLVVideoPlayer.h"
#include "METAAnimationCurve.h"
#include "METAMediaAssetRenderer-Protocol.h"
#include "METAMediaAssetRendererDelegate-Protocol.h"
#include "METAMediaCompositionPlayableProtocol-Protocol.h"

@class NSArray, NSString;

@interface METAMediaAssetVideoRenderer : NSObject<METAMediaAssetRenderer, METAMediaCompositionPlayableProtocol> {
  /* instance variables */
  IGGLVVideoPlayer *_videoPlayer;
  struct __CVBuffer * _mostRecentVideoFrame;
  BOOL _isRecomputingAudioMix;
  BOOL _supportHDR;
  BOOL _videoRangeHDR;
  BOOL _enableToneMap;
  FBCCHDRColorConvert *_colorConvert;
  BOOL _playWithMinFrameDuration;
  IGAsyncTask *_previewFrame;
}

@property (readonly, nonatomic) IGAsyncTask *audioTrack;
@property (readonly, nonatomic) IGAsyncTask *video;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } maxSize;
@property (nonatomic) BOOL forceRefreshAt30Fps;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<METAMediaAssetRendererDelegate> *delegate;
@property (readonly, nonatomic) struct __CVBuffer * displayTexture;
@property (readonly, nonatomic) BOOL readyForDisplay;
@property (readonly, nonatomic) double currentPlaybackRate;
@property (readonly, nonatomic) double currentPlaybackTime;
@property (nonatomic) BOOL muted;
@property (nonatomic) double volume;
@property (copy, nonatomic) NSArray *audioEffects;
@property (copy, nonatomic) METAAnimationCurve *volumeCurve;

/* instance methods */
- (void)dealloc;
- (void)setPlaybackRate:(double)rate time:(double)time atHostTime:(double)time;
- (void)seekToTime:(double)time toleranceBefore:(double)before toleranceAfter:(double)after completionHandler:(id /* block */)handler;
- (BOOL)isMuted;
- (void)videoPlayer:(id)player willLoadPixelBufferForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time fromPlayerItem:(id)item;
- (void)videoPlayer:(id)player didLoadPixelBuffer:(struct __CVBuffer *)buffer forTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time fromPlayerItem:(id)item;
- (unsigned int)videoPlayer:(id)player formatOfPixelBufferForPlayerItem:(id)item;
- (void)videoPlayer:(id)player didLoadPlayerItem:(id)item;
- (void)videoPlayer:(id)player didFailToLoadPlayerItem:(id)item;
- (void)videoPlayer:(id)player didUpdateStallState:(BOOL)state;
- (void)videoPlayer:(id)player isStuck:(BOOL)stuck timeSinceLastRefresh:(double)refresh;
- (struct CGSize { double x0; double x1; })videoPlayer:(id)player sizeOfPixelBufferForPlayerItem:(id)item;
- (id)videoPlayer:(id)player colorPropertiesForPlayerItem:(id)item;
- (void)videoPlayer:(id)player effectivePlaybackRateDidChange:(double)change;
- (BOOL)videoPlayerShouldPlayWithMinFrameDuration:(id)duration;
- (BOOL)videoPlayerShouldForceRefreshAt30Fps:(id)fps;
- (void)enableToneMap:(BOOL)map;
@end

#endif /* METAMediaAssetVideoRenderer_h */
