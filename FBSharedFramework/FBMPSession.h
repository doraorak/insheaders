//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBMPSession_h
#define FBMPSession_h
@import Foundation;

#include "FBMPGraph.h"
#include "FBMPSessionContext.h"

@protocol FBMPSessionErrorDelegate, OS_dispatch_queue, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}, {unordered_map<id, FBMPInternalFilterPerf, FBMPHashFunctor<NSObject *>, std::equal_to<id>, std::allocator<std::pair<const id, FBMPInternalFilterPerf>>>="__table_"{__hash_table<std::__hash_value_type<id, FBMPInternalFilterPerf>, std::__unordered_map_hasher<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, std::equal_to<id>>, std::__unordered_map_equal<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, std::equal_to<id>, FBMPHashFunctor<NSObject *>>, std::allocator<std::__hash_value_type<id, FBMPInternalFilterPerf>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, std::equal_to<id>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, std::equal_to<id>, FBMPHashFunctor<NSObject *>>>="__value_"f}}};

@interface FBMPSession : NSObject {
  /* instance variables */
  struct FBMPSessionConfig { BOOL trackPerformance; BOOL batchPostOperationPortBlocks; struct FBIGLActivations { BOOL surfaceDisabled; BOOL metalEnabled; BOOL imageFilterEnabled; BOOL imageOverlayFilterEnabled; BOOL dynamicImageOverlayFilterEnabled; } iglActivations; } _config;
  FBMPGraph *_graph;
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<OS_dispatch_queue> *_callbackQueue;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _running;
  struct unordered_map<id, FBMPInternalFilterPerf, FBMPHashFunctor<NSObject *>, std::equal_to<id>, std::allocator<std::pair<const id, FBMPInternalFilterPerf>>> { struct __hash_table<std::__hash_value_type<id, FBMPInternalFilterPerf>, std::__unordered_map_hasher<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, std::equal_to<id>>, std::__unordered_map_equal<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, std::equal_to<id>, FBMPHashFunctor<NSObject *>>, std::allocator<std::__hash_value_type<id, FBMPInternalFilterPerf>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<id, FBMPInternalFilterPerf>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, std::equal_to<id>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<id, std::__hash_value_type<id, FBMPInternalFilterPerf>, std::equal_to<id>, FBMPHashFunctor<NSObject *>>> { float __value_; } __p3_; } __table_; } _filterPerf;
  FBMPSessionContext *_context;
  NSObject<FBMPSessionErrorDelegate> *_errorDelegate;
}

@property (readonly, nonatomic) FBMPSessionContext *sessionContext;

/* instance methods */
- (id)init;
- (id)initWithWorkQueue:(id)queue videoDataQueue:(id)queue audioDataQueue:(id)queue callbackQueue:(id)queue errorDelegate:(id)delegate config:(struct FBMPSessionConfig { BOOL x0; BOOL x1; struct FBIGLActivations { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; } x2; })config iglDeviceProducer:(id)producer experimentManager:(id)manager configProviderDelegate:(id)delegate;
- (BOOL)isRunning;
- (void)start:(id /* block */)start;
- (void)stop:(id /* block */)stop;
- (void)_performSessionOperationWithCompletion:(id /* block */)completion usingBlock:(id /* block */)block;
- (id)_performOperations:(id)operations;
- (id)_connect:(id)_connect;
- (id)_replaceInput:(id)input withInput:(id)input connectPortBlock:(id /* block */)block disconnectPortBlock:(id /* block */)block;
- (id)_removeInput:(id)input disconnectPortBlock:(id /* block */)block;
- (void)_connectedProducerPort:(id)port;
- (void)_disconnectedProducerPort:(id)port;
- (id)_adjacencyList;
- (void)adjacencyList:(id /* block */)list;
@end

#endif /* FBMPSession_h */
