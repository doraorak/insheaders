//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBMetalSurface_h
#define FBMetalSurface_h
@import Foundation;

#include "NSObject-Protocol.h"

@class CAMetalLayer, NSString;
@protocol struct shared_ptr<igl::Color> { struct Color * x0; struct __shared_weak_count * x1; }, struct shared_ptr<igl::IFramebuffer> { struct IFramebuffer * x0; struct __shared_weak_count * x1; }, struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; }, {shared_ptr<igl::Color>="__ptr_"^{Color}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::ICommandQueue>="__ptr_"^{ICommandQueue}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::IDevice>="__ptr_"^{IDevice}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::IFramebuffer>="__ptr_"^{IFramebuffer}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::ITexture>="__ptr_"^{ITexture}"__cntrl_"^{__shared_weak_count}};

@interface FBMetalSurface : NSObject<NSObject> {
  /* instance variables */
  struct shared_ptr<igl::IDevice> { struct IDevice *__ptr_; struct __shared_weak_count *__cntrl_; } _device;
  BOOL _isAttachDepth;
  struct shared_ptr<igl::ITexture> { struct ITexture *__ptr_; struct __shared_weak_count *__cntrl_; } _iglDepthRenderbuffer;
  struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue *__ptr_; struct __shared_weak_count *__cntrl_; } _commandQueue;
  struct shared_ptr<igl::ITexture> { struct ITexture *__ptr_; struct __shared_weak_count *__cntrl_; } _iglNativeDrawableTexture;
  BOOL _refreshLayerFramebuffer;
}

@property (retain, nonatomic) CAMetalLayer *layer;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } size;
@property (readonly, nonatomic) struct __CVBuffer * pixelBuffer;
@property (readonly, nonatomic) BOOL flipped;
@property (readonly, nonatomic) BOOL hdr;
@property (readonly, nonatomic) struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; } iglTexture;
@property (readonly, nonatomic) const char * name;
@property (readonly, nonatomic) struct shared_ptr<igl::IFramebuffer> { struct IFramebuffer * x0; struct __shared_weak_count * x1; } iglFramebuffer;
@property (readonly, nonatomic) struct shared_ptr<igl::Color> { struct Color * x0; struct __shared_weak_count * x1; } iglClearColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithLayer:(id)layer device:(struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; })device size:(struct CGSize { double x0; double x1; })size name:(const char *)name attachDepth:(BOOL)depth commandQueue:(struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue * x0; struct __shared_weak_count * x1; })queue;
- (id)initWithPixelBuffer:(struct __CVBuffer *)buffer device:(struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; })device size:(struct CGSize { double x0; double x1; })size name:(const char *)name attachDepth:(BOOL)depth;
- (id)initWithFramebuffer:(struct shared_ptr<igl::IFramebuffer> { struct IFramebuffer * x0; struct __shared_weak_count * x1; })framebuffer device:(struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; })device flipped:(BOOL)flipped;
- (id)initWithPixelBuffer:(struct __CVBuffer *)buffer texture:(struct shared_ptr<igl::ITexture> { struct ITexture * x0; struct __shared_weak_count * x1; })texture device:(struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; })device name:(const char *)name attachDepth:(BOOL)depth flipped:(BOOL)flipped;
- (void)dealloc;
- (void)flushBuffer;
- (BOOL)isHDR;
- (void)present;
- (void)refreshLayerFramebuffer;
- (struct CGSize { double x0; double x1; })maxTextureSize;
- (void)setClearColorWithAlpha:(float)alpha Red:(float)red Green:(float)green Blue:(float)blue;
- (BOOL)isFlipped;
@end

#endif /* FBMetalSurface_h */
