//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGMobileConfigContextManager_h
#define IGMobileConfigContextManager_h
@import Foundation;

#include "FBMobileConfigAPI-Protocol.h"
#include "FBMobileConfigContextObjcImpl.h"
#include "FBTimer.h"

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol {atomic<unsigned int>="__a_"{__cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>>="__a_value"AI}}, {shared_ptr<FBMobileConfigManagerChangeListenerWrapper>="__ptr_"^{FBMobileConfigManagerChangeListenerWrapper}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<mobileconfig::FBMobileConfigManager>="__ptr_"^{FBMobileConfigManager}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<std::atomic<void *>[], std::default_delete<std::atomic<void *>[]>>="__ptr_"{__compressed_pair<std::atomic<void *> *, std::default_delete<std::atomic<void *>[]>>="__value_"^v}}, {unordered_map<unsigned long long, mobileconfig::config_meta_t, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, mobileconfig::config_meta_t>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}};

@interface IGMobileConfigContextManager : NSObject<FBMobileConfigAPI> {
  /* instance variables */
  FBMobileConfigContextObjcImpl *_emptyContext;
  struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>> { atomic  __a_value; unsigned int x0; } __a_; } _configsCount;
  struct unique_ptr<std::atomic<void *>[], std::default_delete<std::atomic<void *>[]>> { struct __compressed_pair<std::atomic<void *> *, std::default_delete<std::atomic<void *>[]>> { void *__value_; } __ptr_; } _cachedContexts;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _cachedContextsWriteMutex;
  struct shared_ptr<mobileconfig::FBMobileConfigManager> { struct FBMobileConfigManager *__ptr_; struct __shared_weak_count *__cntrl_; } _configManager;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _changeListenerMutex;
  struct shared_ptr<FBMobileConfigManagerChangeListenerWrapper> { struct FBMobileConfigManagerChangeListenerWrapper *__ptr_; struct __shared_weak_count *__cntrl_; } _nativeCallback;
  struct unordered_map<unsigned long long, mobileconfig::config_meta_t, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, mobileconfig::config_meta_t>>> { struct __hash_table<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, mobileconfig::config_meta_t>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>> { float __value_; } __p3_; } __table_; } _specifierToMetadata;
  FBTimer *_batchConsistencyLogging_timer;
  NSMutableDictionary *_userCallbacks;
  NSMutableArray *_globalUserCallbacks;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (int)getUnitType;
- (id)accessedConfigs;
- (BOOL)getBool:(struct mc_bool_param_t { unsigned long long x0; })bool;
- (BOOL)getBool:(struct mc_bool_param_t { unsigned long long x0; })bool withOptions:(id)options;
- (BOOL)getBool:(struct mc_bool_param_t { unsigned long long x0; })bool withDefault:(BOOL)default;
- (BOOL)getBool:(struct mc_bool_param_t { unsigned long long x0; })bool withOptions:(id)options withDefault:(BOOL)default;
- (long long)getInt64:(struct mc_long_param_t { unsigned long long x0; })int64;
- (long long)getInt64:(struct mc_long_param_t { unsigned long long x0; })int64 withOptions:(id)options;
- (long long)getInt64:(struct mc_long_param_t { unsigned long long x0; })int64 withDefault:(long long)default;
- (long long)getInt64:(struct mc_long_param_t { unsigned long long x0; })int64 withOptions:(id)options withDefault:(long long)default;
- (id)getString:(struct mc_string_param_t { unsigned long long x0; })string;
- (id)getString:(struct mc_string_param_t { unsigned long long x0; })string withDefault:(id)default;
- (id)getString:(struct mc_string_param_t { unsigned long long x0; })string withOptions:(id)options;
- (id)getString:(struct mc_string_param_t { unsigned long long x0; })string withOptions:(id)options withDefault:(id)default;
- (double)getDouble:(struct mc_double_param_t { unsigned long long x0; })double;
- (double)getDouble:(struct mc_double_param_t { unsigned long long x0; })double withOptions:(id)options;
- (double)getDouble:(struct mc_double_param_t { unsigned long long x0; })double withDefault:(double)default;
- (double)getDouble:(struct mc_double_param_t { unsigned long long x0; })double withOptions:(id)options withDefault:(double)default;
- (id)getMapValueForParam:(struct mc_string_string_map_param_t { unsigned long long x0; })param withKey:(id)key;
- (id)getMapKeys:(struct mc_string_string_map_param_t { unsigned long long x0; })keys;
- (void)logExposureForConfigParameter:(unsigned long long)parameter;
- (void)logExposureForBoolParameter:(struct mc_bool_param_t { unsigned long long x0; })parameter;
- (void)logExposureForDoubleParameter:(struct mc_double_param_t { unsigned long long x0; })parameter;
- (void)logExposureForInt64Parameter:(struct mc_long_param_t { unsigned long long x0; })parameter;
- (void)logExposureForStringParameter:(struct mc_string_param_t { unsigned long long x0; })parameter;
- (id)getLoggingID:(unsigned long long)id;
- (BOOL)hasValidConfig;
- (int)getEpVersion:(unsigned int)version configKey:(unsigned int)key;
- (void)forceRefreshOfConfig:(unsigned int)config;
- (id)contextForConfig:(unsigned int)config;
- (BOOL)existsInCache:(unsigned int)cache;
- (id)latestContextForConfig;
- (BOOL)addGlobalChangeListener:(id /* block */)listener;
- (BOOL)addChangeListener:(id /* block */)listener forConfig:(unsigned int)config;
- (id)userCallbacks;
- (id)globalUserCallbacks;
@end

#endif /* IGMobileConfigContextManager_h */
