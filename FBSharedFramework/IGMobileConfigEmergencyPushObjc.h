//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGMobileConfigEmergencyPushObjc_h
#define IGMobileConfigEmergencyPushObjc_h
@import Foundation;

#include "IGMobileConfigContextManager.h"

@protocol {weak_ptr<mobileconfig::FBMobileConfigManager>="__ptr_"^{FBMobileConfigManager}"__cntrl_"^{__shared_weak_count}};

@interface IGMobileConfigEmergencyPushObjc : NSObject {
  /* instance variables */
  BOOL _shouldCrashOnBackground;
  int _samplingOfNonRestartLogging;
  IGMobileConfigContextManager *_wContextManager;
  struct weak_ptr<mobileconfig::FBMobileConfigManager> { struct FBMobileConfigManager *__ptr_; struct __shared_weak_count *__cntrl_; } _wManager;
}

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (struct pair<mobileconfig::EmergencyPushDecisionMetadata, mobileconfig::FBMobileConfigEPDecisionResponseList> { struct EmergencyPushDecisionMetadata { BOOL x0; BOOL x1; unsigned int x2; unsigned int x3; struct unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int>> { struct __hash_table<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<unsigned int, void *> *>, std::allocator<std::__hash_node<unsigned int, void *>>> { struct __hash_node_base<std::__hash_node<unsigned int, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::hash<unsigned int>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::equal_to<unsigned int>> { float x0; } x3; } x0; } x4; struct unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int>> { struct __hash_table<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned int, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<unsigned int, void *> *>, std::allocator<std::__hash_node<unsigned int, void *>>> { struct __hash_node_base<std::__hash_node<unsigned int, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::hash<unsigned int>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::equal_to<unsigned int>> { float x0; } x3; } x0; } x5; BOOL x6; BOOL x7; } x0; struct FBMobileConfigEPDecisionResponseList { struct vector<mobileconfig::FBMobileConfigEPDecisionResponse, std::allocator<mobileconfig::FBMobileConfigEPDecisionResponse>> { struct FBMobileConfigEPDecisionResponse * x0; struct FBMobileConfigEPDecisionResponse * x1; struct __compressed_pair<mobileconfig::FBMobileConfigEPDecisionResponse *, std::allocator<mobileconfig::FBMobileConfigEPDecisionResponse>> { struct FBMobileConfigEPDecisionResponse * x0; } x2; } x0; } x1; })run:(const void *)run;
@end

#endif /* IGMobileConfigEmergencyPushObjc_h */
