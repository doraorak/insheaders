//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGApplicationAnalytics_h
#define IGApplicationAnalytics_h
@import Foundation;

#include "FBAnalyticsUnifiedLogging-Protocol.h"
#include "FBTimer.h"
#include "IGAnalyticsDispatcher.h"
#include "IGAnalyticsEventLoggingProtocol-Protocol.h"
#include "IGApplicationWillEnterForegroundCriticalEventsListener-Protocol.h"
#include "IGImmediateActiveSeconds.h"
#include "IGNetworkConnectionManager.h"
#include "IGScopeEnding-Protocol.h"

@class NSString;
@protocol IGAnalyticsEventObserverAnnouncer;

@interface IGApplicationAnalytics : NSObject<FBAnalyticsUnifiedLogging, IGAnalyticsEventLoggingProtocol, IGScopeEnding, IGApplicationWillEnterForegroundCriticalEventsListener> {
  /* instance variables */
  IGNetworkConnectionManager *_networkConnectionManager;
  IGImmediateActiveSeconds *_immediateActiveSeconds;
  NSObject<IGAnalyticsEventObserverAnnouncer> *_announcer;
  IGAnalyticsDispatcher *_analyticsDispatcher;
  BOOL _periodicUploadEnabled;
  BOOL _isCellarEnabled;
  BOOL _isMguardEnabled;
  long long _periodicUploadTimeInterval;
  FBTimer *_uploadTimer;
}

@property (copy, nonatomic) NSString *userID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithAppUID:(id)uid analyticsDispatcher:(id)dispatcher;
- (void)handleApplicationDidBecomeActive;
- (void)applicationWillEnterForegroundListener;
- (void)handleApplicationWillResignActive;
- (void)_handleApplicationWillTerminate;
- (void)_handleCellarDidBecomeActive;
- (void)_handleMguardDidBecomeActive;
- (void)_handleShareExtensionDidBecomeActive;
- (void)_handleShareExtensionWillResignActive;
- (void)_handleShareExtensionDidExposeExperiments;
- (void)addEventObserver:(id)observer;
- (void)logEvent:(id)event;
- (void)logEventImmediately:(id)immediately;
- (void)logTimeSpentForModule:(id)module;
- (void)uploadEvents;
- (void)scopeWillEnd;
- (void)logUntypedEvent:(id)event logEventMetadata:(struct FBStructuredLogEventMetadata { id x0; id x1; id x2; double x3; double x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; long long x8; BOOL x9; struct FBAnalyticsSerializedIdentities { id x0; id x1; id x2; } x10; struct FBAnalyticsPrivacyContext { id x0; id x1; id x2; } x11; struct FBAnalyticsSamplingResult { unsigned long long x0; unsigned long long x1; unsigned long long x2; long long x3; unsigned long long x4; } x12; double x13; unsigned long long x14; id x15; })metadata payloadBlock:(id /* block */)block;
- (void)flush;
- (unsigned long long)samplingRateForEvent:(id)event subEvent:(id)event;
- (void)logCounter:(id)counter;
- (void)logCounter:(id)counter value:(id)value;
- (void)logCounter:(id)counter value:(id)value eventName:(id)name;
- (void)setUserIdentity:(struct { id x0; id x1; id x2; id x3; id x4; })identity;
- (id)userFBID;
- (void)setUserFBID:(id)fbid;
- (void)setNonFBUserID:(id)id;
- (void)suspendAnalyticsQueueWithDelay:(unsigned long long)delay;
- (void)resumeAnalyticsQueue;
- (void)unsafelyPauseAnalyticsLogUploads;
- (void)resumeAnalyticsLogUploads;
- (void)unsafelyPauseHealthCountersUploads;
- (void)resumeHealthCountersUploads;
- (void)toggleState:(unsigned long long)state;
@end

#endif /* IGApplicationAnalytics_h */
