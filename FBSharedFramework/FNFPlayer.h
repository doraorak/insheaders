//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFPlayer_h
#define FNFPlayer_h
@import Foundation;

#include "FNFAVPlayer-Protocol.h"
#include "FNFAVPlayerItem-Protocol.h"
#include "FNFInternalPlayerDelegate-Protocol.h"
#include "FNFPlayerAudioDecoder-Protocol.h"
#include "FNFPlayerAudioEngine-Protocol.h"
#include "FNFPlayerControlling-Protocol.h"
#include "FNFValidationTokenProvider.h"

@class NSError, NSHashTable, NSString;
@protocol OS_dispatch_queue;

@interface FNFPlayer : NSObject<FNFInternalPlayerDelegate, FNFAVPlayer> {
  /* instance variables */
  NSObject<FNFPlayerControlling> *_internalPlayer;
  NSObject<FNFAVPlayerItem> *_currentItem;
  NSObject<FNFPlayerAudioDecoder> *_defaultAudioDecoder;
  id _seekThrottlingTimer;
  NSHashTable *_stateUpdateListeners;
  NSObject<OS_dispatch_queue> *_dispatchQueue;
  NSObject<FNFPlayerAudioEngine> *_defaultAudioEngine;
  double _lastSeekTimeInterval;
  BOOL _hasRegisteredNotificationsForProtectedContent;
  BOOL _shouldFlushTrailingSeek;
  FNFValidationTokenProvider *_tokenProvider;
  BOOL _removeNotificationObserversAtDealloc;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) float rate;
@property (nonatomic) BOOL muted;
@property (nonatomic) float volume;
@property (nonatomic) BOOL allowsExternalPlayback;
@property (readonly, nonatomic) long long status;
@property (readonly, nonatomic) NSError *error;

/* instance methods */
- (id)initWithDisplayEngine:(id)engine audioEngine:(id)engine config:(struct { struct FNFPlayerConfigGen { long long x0; BOOL x1; BOOL x2; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; int x5; BOOL x6; BOOL x7; unsigned int x8; double x9; BOOL x10; BOOL x11; BOOL x12; int x13; unsigned long long x14; BOOL x15; int x16; int x17; double x18; long long x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; double x25; int x26; BOOL x27; BOOL x28; BOOL x29; double x30; int x31; struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; } x32; BOOL x33; double x34; int x35; unsigned int x36; BOOL x37; BOOL x38; BOOL x39; int x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; double x45; BOOL x46; BOOL x47; BOOL x48; int x49; double x50; BOOL x51; BOOL x52; int x53; double x54; double x55; int x56; BOOL x57; BOOL x58; int x59; int x60; int x61; int x62; int x63; BOOL x64; BOOL x65; BOOL x66; int x67; BOOL x68; BOOL x69; BOOL x70; BOOL x71; int x72; BOOL x73; BOOL x74; BOOL x75; BOOL x76; unsigned long long x77; double x78; BOOL x79; BOOL x80; BOOL x81; double x82; BOOL x83; BOOL x84; BOOL x85; })config asyncTimebase:(BOOL)timebase enableOpus:(BOOL)opus;
- (id)initWithDisplayEngine:(id)engine audioEngine:(id)engine clock:(id)clock config:(struct { struct FNFPlayerConfigGen { long long x0; BOOL x1; BOOL x2; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; int x5; BOOL x6; BOOL x7; unsigned int x8; double x9; BOOL x10; BOOL x11; BOOL x12; int x13; unsigned long long x14; BOOL x15; int x16; int x17; double x18; long long x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; double x25; int x26; BOOL x27; BOOL x28; BOOL x29; double x30; int x31; struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; } x32; BOOL x33; double x34; int x35; unsigned int x36; BOOL x37; BOOL x38; BOOL x39; int x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; double x45; BOOL x46; BOOL x47; BOOL x48; int x49; double x50; BOOL x51; BOOL x52; int x53; double x54; double x55; int x56; BOOL x57; BOOL x58; int x59; int x60; int x61; int x62; int x63; BOOL x64; BOOL x65; BOOL x66; int x67; BOOL x68; BOOL x69; BOOL x70; BOOL x71; int x72; BOOL x73; BOOL x74; BOOL x75; BOOL x76; unsigned long long x77; double x78; BOOL x79; BOOL x80; BOOL x81; double x82; BOOL x83; BOOL x84; BOOL x85; })config enableOpus:(BOOL)opus;
- (id)initWithInceptionPlayer:(id)player playerConfig:(struct { struct FNFPlayerConfigGen { long long x0; BOOL x1; BOOL x2; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; int x5; BOOL x6; BOOL x7; unsigned int x8; double x9; BOOL x10; BOOL x11; BOOL x12; int x13; unsigned long long x14; BOOL x15; int x16; int x17; double x18; long long x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; double x25; int x26; BOOL x27; BOOL x28; BOOL x29; double x30; int x31; struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; } x32; BOOL x33; double x34; int x35; unsigned int x36; BOOL x37; BOOL x38; BOOL x39; int x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; double x45; BOOL x46; BOOL x47; BOOL x48; int x49; double x50; BOOL x51; BOOL x52; int x53; double x54; double x55; int x56; BOOL x57; BOOL x58; int x59; int x60; int x61; int x62; int x63; BOOL x64; BOOL x65; BOOL x66; int x67; BOOL x68; BOOL x69; BOOL x70; BOOL x71; int x72; BOOL x73; BOOL x74; BOOL x75; BOOL x76; unsigned long long x77; double x78; BOOL x79; BOOL x80; BOOL x81; double x82; BOOL x83; BOOL x84; BOOL x85; })config;
- (id)initWithAVAudioPlayer:(id)player playerConfig:(struct { struct FNFPlayerConfigGen { long long x0; BOOL x1; BOOL x2; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; int x5; BOOL x6; BOOL x7; unsigned int x8; double x9; BOOL x10; BOOL x11; BOOL x12; int x13; unsigned long long x14; BOOL x15; int x16; int x17; double x18; long long x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; double x25; int x26; BOOL x27; BOOL x28; BOOL x29; double x30; int x31; struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; } x32; BOOL x33; double x34; int x35; unsigned int x36; BOOL x37; BOOL x38; BOOL x39; int x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; double x45; BOOL x46; BOOL x47; BOOL x48; int x49; double x50; BOOL x51; BOOL x52; int x53; double x54; double x55; int x56; BOOL x57; BOOL x58; int x59; int x60; int x61; int x62; int x63; BOOL x64; BOOL x65; BOOL x66; int x67; BOOL x68; BOOL x69; BOOL x70; BOOL x71; int x72; BOOL x73; BOOL x74; BOOL x75; BOOL x76; unsigned long long x77; double x78; BOOL x79; BOOL x80; BOOL x81; double x82; BOOL x83; BOOL x84; BOOL x85; })config;
- (id)initWithDisplayEngine:(id)engine audioEngine:(id)engine clock:(id)clock config:(struct { struct FNFPlayerConfigGen { long long x0; BOOL x1; BOOL x2; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; int x5; BOOL x6; BOOL x7; unsigned int x8; double x9; BOOL x10; BOOL x11; BOOL x12; int x13; unsigned long long x14; BOOL x15; int x16; int x17; double x18; long long x19; BOOL x20; BOOL x21; BOOL x22; BOOL x23; BOOL x24; double x25; int x26; BOOL x27; BOOL x28; BOOL x29; double x30; int x31; struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; } x32; BOOL x33; double x34; int x35; unsigned int x36; BOOL x37; BOOL x38; BOOL x39; int x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; double x45; BOOL x46; BOOL x47; BOOL x48; int x49; double x50; BOOL x51; BOOL x52; int x53; double x54; double x55; int x56; BOOL x57; BOOL x58; int x59; int x60; int x61; int x62; int x63; BOOL x64; BOOL x65; BOOL x66; int x67; BOOL x68; BOOL x69; BOOL x70; BOOL x71; int x72; BOOL x73; BOOL x74; BOOL x75; BOOL x76; unsigned long long x77; double x78; BOOL x79; BOOL x80; BOOL x81; double x82; BOOL x83; BOOL x84; BOOL x85; })config asyncTimebase:(BOOL)timebase enableOpus:(BOOL)opus customPlayer:(id)player dispatchQueue:(id)queue;
- (id)playerLayer;
- (id)fnfValidationToken;
- (id)internalPlayerClass;
- (id)playerStateDebugInfo;
- (void)_applicationWillResignActive;
- (void)_applicationDidBecomeActive;
- (void)play;
- (void)pause;
- (void)playWithContext:(id)context;
- (void)pauseWithPauseReason:(int)reason context:(id)context;
- (void)setEnableAdsFrameLogging:(BOOL)logging;
- (void)setCaptionParser:(id)parser;
- (void)setAudioEngine:(id)engine;
- (void)setAudioTimeDomainPitchAlgorithmEnabled:(BOOL)enabled;
- (void)setAudioVarispeedPitchAlgorithmEnabled:(BOOL)enabled;
- (void)setAudioDecoder:(id)decoder;
- (void)setUserSelectedQuality:(id)quality;
- (void)selectAudioRole:(unsigned char)role language:(id)language;
- (void)replaceCurrentItemWithPlayerItem:(id)item;
- (void)replaceCurrentItemWithPlayerItem:(id)item loggingContext:(id)context;
- (void)setLoggingContext:(id)context;
- (void)setLogger:(id)logger;
- (void)setPSRProfiler:(id)psrprofiler;
- (void)setMuted:(BOOL)muted isUserInitiated:(BOOL)initiated context:(id)context;
- (void)setShowCaptions:(BOOL)captions;
- (void)setVolume:(float)volume rampTime:(float)time;
- (void)setRate:(float)rate context:(id)context;
- (void)setAudioOutputEffects:(id)effects;
- (void)setLiveTraceManager:(id)manager;
- (void)setEnableClientBackgroundPlayback:(BOOL)playback;
- (BOOL)isMuted;
- (BOOL)showCaptions;
- (id)currentItem;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })lastStartingTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })lastRequestedStartTime;
- (double)lastAudioQueueStartDuration;
- (id)addPeriodicTimeObserverForInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval queue:(id)queue usingBlock:(id /* block */)block;
- (id)addPeriodicTimeObserverForInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval queue:(id)queue followMasterClock:(BOOL)clock usingBlock:(id /* block */)block;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)_flushTrailingSeekAsApplicable;
- (void)_removeSeekThrottlingTimer;
- (void)removeTimeObserver:(id)observer;
- (void)addLevelMeterCallback:(id /* block */)callback timeInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval;
- (void)removeLevelMeterCallback;
- (void)protectedContentDetected:(BOOL)detected;
- (void)_didConnectWithExternalScreen;
- (void)_didDisconnectWithExternalScreen;
- (void)_didChangeScreenCaptured;
- (void)dealloc;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time completionHandler:(id /* block */)handler;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time seekReason:(int)reason completionHandler:(id /* block */)handler;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after seekReason:(int)reason;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after completionHandler:(id /* block */)handler;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after seekReason:(int)reason completionHandler:(id /* block */)handler;
- (id)_addSeekThrottlingTimeObserverForInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval usingBlock:(id /* block */)block;
- (void)setBroadcastLatencySensitivity:(long long)sensitivity;
- (void)internalPlayer:(id)player stateUpdated:(unsigned long long)updated playerState:(struct FNFPlayerInternalState { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; struct { long long x0; int x1; unsigned int x2; long long x3; } x16; struct { long long x0; int x1; unsigned int x2; long long x3; } x17; struct { long long x0; int x1; unsigned int x2; long long x3; } x18; struct { long long x0; int x1; unsigned int x2; long long x3; } x19; struct { long long x0; int x1; unsigned int x2; long long x3; } x20; struct { long long x0; int x1; unsigned int x2; long long x3; } x21; double x22; float x23; struct { long long x0; int x1; unsigned int x2; long long x3; } x24; float x25; id x26; id x27; id x28; id x29; id x30; id x31; struct { long long x0; int x1; unsigned int x2; long long x3; } x32; unsigned int x33; id x34; id x35; id x36; id x37; long long x38; struct opaqueCMFormatDescription * x39; unsigned long long x40; long long x41; struct FNFPlayerStallState { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; BOOL x7; } x42; struct FNFPlayerSeekState { BOOL x0; BOOL x1; int x2; } x43; int x44; int x45; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x46; id /* block */ x47; id x48; id x49; id x50; id x51; id x52; id x53; id x54; struct { long long x0; int x1; unsigned int x2; long long x3; } x55; struct FNFFrameDisplayState { double x0; double x1; double x2; } x56; struct FNFAVSyncStatus { double x0; long long x1; } x57; struct FNFDisplayedFrameInfo { double x0; double x1; double x2; } x58; struct FNFRenderedFrameInfo { double x0; double x1; BOOL x2; } x59; id x60; id x61; unsigned long long x62; unsigned long long x63; unsigned long long x64; unsigned long long x65; id x66; BOOL x67; BOOL x68; BOOL x69; struct FNFFrameDropInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } x70; int x71; })state psrProfiler:(id)profiler loggingContext:(id)context;
- (void)_dispatchWithPlayer:(id)player playerInternalState:(struct FNFPlayerInternalState { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; struct { long long x0; int x1; unsigned int x2; long long x3; } x16; struct { long long x0; int x1; unsigned int x2; long long x3; } x17; struct { long long x0; int x1; unsigned int x2; long long x3; } x18; struct { long long x0; int x1; unsigned int x2; long long x3; } x19; struct { long long x0; int x1; unsigned int x2; long long x3; } x20; struct { long long x0; int x1; unsigned int x2; long long x3; } x21; double x22; float x23; struct { long long x0; int x1; unsigned int x2; long long x3; } x24; float x25; id x26; id x27; id x28; id x29; id x30; id x31; struct { long long x0; int x1; unsigned int x2; long long x3; } x32; unsigned int x33; id x34; id x35; id x36; id x37; long long x38; struct opaqueCMFormatDescription * x39; unsigned long long x40; long long x41; struct FNFPlayerStallState { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; BOOL x7; } x42; struct FNFPlayerSeekState { BOOL x0; BOOL x1; int x2; } x43; int x44; int x45; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x46; id /* block */ x47; id x48; id x49; id x50; id x51; id x52; id x53; id x54; struct { long long x0; int x1; unsigned int x2; long long x3; } x55; struct FNFFrameDisplayState { double x0; double x1; double x2; } x56; struct FNFAVSyncStatus { double x0; long long x1; } x57; struct FNFDisplayedFrameInfo { double x0; double x1; double x2; } x58; struct FNFRenderedFrameInfo { double x0; double x1; BOOL x2; } x59; id x60; id x61; unsigned long long x62; unsigned long long x63; unsigned long long x64; unsigned long long x65; id x66; BOOL x67; BOOL x68; BOOL x69; struct FNFFrameDropInfo { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } x70; int x71; })state loggingContext:(id)context psrProfiler:(id)profiler dispatchBlock:(id /* block */)block;
- (void)_simulatePlaybackInteruptionWithError:(id)error;
@end

#endif /* FNFPlayer_h */
