//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBStashImpl_h
#define FBStashImpl_h
@import Foundation;

#include "FBStash-Protocol.h"

@class NSString;
@protocol OS_os_log, {shared_ptr<facebook::stash::Stash>="__ptr_"^{Stash}"__cntrl_"^{__shared_weak_count}};

@interface FBStashImpl : NSObject<FBStash> {
  /* instance variables */
  struct shared_ptr<facebook::stash::Stash> { struct Stash *__ptr_; struct __shared_weak_count *__cntrl_; } _stash;
  NSObject<OS_os_log> *_stashLog;
  unsigned long long _stashSignpostId;
}

@property (readonly, nonatomic) NSString *identifier;
@property (readonly, nonatomic) NSString *basePath;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithXplatStash:(struct shared_ptr<facebook::stash::Stash> { struct Stash * x0; struct __shared_weak_count * x1; })stash;
- (void)onMemoryLimitStateChanged:(id)changed;
- (id)getIdentifier;
- (id)xplatErrorWithCode:(struct error_code { int x0; struct error_category * x1; })code;
- (void)setXplatOutError:(struct error_code { int x0; struct error_category * x1; })error error:(id *)error;
- (id)insertionTimeForKey:(id)key error:(id *)error;
- (BOOL)insertData:(id)data forKey:(id)key error:(id *)error;
- (BOOL)insertData:(id)data annotations:(id)annotations forKey:(id)key error:(id *)error;
- (BOOL)insertData:(id)data extraData:(id)data forKey:(id)key ttl:(double)ttl evictionPriority:(long long)priority error:(id *)error;
- (BOOL)insertData:(id)data extraData:(id)data annotations:(id)annotations forKey:(id)key ttl:(double)ttl evictionPriority:(long long)priority error:(id *)error;
- (void)insertDataAsync:(id)async extraData:(id)data forKey:(id)key ttl:(double)ttl evictionPriority:(long long)priority callbackQueue:(id)queue completionBlock:(id /* block */)block;
- (void)insertDataAsync:(id)async extraData:(id)data annotations:(id)annotations forKey:(id)key ttl:(double)ttl evictionPriority:(long long)priority callbackQueue:(id)queue completionBlock:(id /* block */)block;
- (void)insertDataAsync:(id)async forKey:(id)key callbackQueue:(id)queue completionBlock:(id /* block */)block;
- (void)insertDataAsync:(id)async annotations:(id)annotations forKey:(id)key callbackQueue:(id)queue completionBlock:(id /* block */)block;
- (id)dataForKey:(id)key error:(id *)error;
- (id)dataForKey:(id)key annotations:(id)annotations error:(id *)error;
- (void)fetchDataForKey:(id)key queue:(id)queue completionBlock:(id /* block */)block;
- (void)fetchDataForKey:(id)key annotations:(id)annotations queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)hasKey:(id)key error:(id *)error;
- (id)allKeysAndReturnError:(id *)error;
- (unsigned long long)sizeAndReturnError:(id *)error;
- (BOOL)removeAll:(id *)all;
- (void)removeAllItemsWithCallbackQueue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)removeItemWithKey:(id)key error:(id *)error;
- (BOOL)removeItemWithKey:(id)key annotations:(id)annotations error:(id *)error;
- (void)removeItemAsyncWithKey:(id)key queue:(id)queue completionBlock:(id /* block */)block;
- (void)removeItemAsyncWithKey:(id)key annotations:(id)annotations queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)setExtraData:(id)data toKey:(id)key error:(id *)error;
- (id)extraDataForKey:(id)key error:(id *)error;
- (BOOL)promote:(id)promote error:(id *)error;
- (void)performWithSignpostEvents:(id /* block */)events;
@end

#endif /* FBStashImpl_h */
