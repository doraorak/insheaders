//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MBUIMediaManager_h
#define MBUIMediaManager_h
@import Foundation;

@interface MBUIMediaManager : NSObject {
  /* instance variables */
  struct __MCFRuntimeBaseData { unsigned char x[4] _cfinfo; unsigned int _rc; } _reserved;
  undefined * _reserved2;
  undefined * _reserved3;
  void * _reserved4;
  void * _reserved5;
  void * _reserved6;
  void * _reserved7;
  void * _reserved8;
  void * _reserved9;
  void * _reserved10;
  void * _reserved11;
  void * _reserved12;
  void * _reserved13;
  void * _reserved14;
  void * _reserved15;
  void * _reserved16;
  void * _reserved17;
  void * _reserved18;
  void * _reserved19;
  void * _reserved20;
  void * _reserved21;
  void * _reserved22;
  void * _reserved23;
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _reserved24;
  void * _reserved25;
  void * _reserved26;
  void * _reserved27;
  unsigned char _reserved28;
  unsigned char _reserved29;
  undefined * _reserved31;
  void * _reserved32;
}

/* instance methods */
- (void)_setUpObservers;
- (void)setCancelNetworkDownloadEnabled:(BOOL)enabled;
- (void)setUseCacheKeyWhenRemovingItemEnabled:(BOOL)enabled;
- (void)setMemoryCacheEvictionOptions:(struct { double x0; double x1; double x2; })options;
- (void)cacheMediaWithURL:(id)url mediaID:(id)id mediaType:(int)type dataRepresentation:(id)representation completion:(id /* block */)completion;
- (void)cancelLoadWithToken:(id)token;
- (id)cachedMediaWithMediaURL:(id)url mediaID:(id)id mediaSpec:(struct MBUIMediaSpec { struct MediaSize { double x0; double x1; } x0; int x1; double x2; struct CornerRadii { double x0; double x1; double x2; double x3; } x3; int x4; })spec;
- (id)loadMediaWithMediaURL:(id)url mediaID:(id)id mediaSpec:(struct MBUIMediaSpec { struct MediaSize { double x0; double x1; } x0; int x1; double x2; struct CornerRadii { double x0; double x1; double x2; double x3; } x3; int x4; })spec mediaLoadSource:(id)source loadFromCacheOnly:(unsigned char)only decodingContext:(id)context completion:(id /* block */)completion;
- (id)loadMediaWithMediaURL:(id)url mediaID:(id)id mediaSpec:(struct MBUIMediaSpec { struct MediaSize { double x0; double x1; } x0; int x1; double x2; struct CornerRadii { double x0; double x1; double x2; double x3; } x3; int x4; })spec mediaLoadPriority:(int)priority mediaLoadSource:(id)source loadFromCacheOnly:(unsigned char)only saveToDiskOnly:(unsigned char)only decodingContext:(id)context completion:(id /* block */)completion;
- (id)loadMediaAsyncWithMediaURL:(id)url mediaID:(id)id mediaSpec:(struct MBUIMediaSpec { struct MediaSize { double x0; double x1; } x0; int x1; double x2; struct CornerRadii { double x0; double x1; double x2; double x3; } x3; int x4; })spec mediaLoadSource:(id)source saveToDiskOnly:(unsigned char)only completion:(id /* block */)completion;
- (id)loadMediaAsyncWithMediaURL:(id)url mediaID:(id)id mediaSpec:(struct MBUIMediaSpec { struct MediaSize { double x0; double x1; } x0; int x1; double x2; struct CornerRadii { double x0; double x1; double x2; double x3; } x3; int x4; })spec mediaLoadSource:(id)source completion:(id /* block */)completion;
- (void)removeAllMediaWithCompletion:(id /* block */)completion;
- (void)removeMediaItemWithMediaURL:(id)url mediaID:(id)id mediaSpec:(struct MBUIMediaSpec { struct MediaSize { double x0; double x1; } x0; int x1; double x2; struct CornerRadii { double x0; double x1; double x2; double x3; } x3; int x4; })spec;
- (void)clearMemoryForMediaItemWithMediaURL:(id)url mediaID:(id)id mediaSpec:(struct MBUIMediaSpec { struct MediaSize { double x0; double x1; } x0; int x1; double x2; struct CornerRadii { double x0; double x1; double x2; double x3; } x3; int x4; })spec;
- (struct __MCIDiskCache *)diskCache;
- (void)_handleMemoryPressureFlags:(unsigned long long)flags;
- (void)_handleAppBackground;
- (void)_compactMemoryCacheWithFactor:(id)factor;
- (unsigned long long)_cfTypeID;
- (id)description;
- (id)debugDescription;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (void)dealloc;
@end

#endif /* MBUIMediaManager_h */
