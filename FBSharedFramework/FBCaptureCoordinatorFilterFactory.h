//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBCaptureCoordinatorFilterFactory_h
#define FBCaptureCoordinatorFilterFactory_h
@import Foundation;

#include "FBCaptureCoordinatorFilterFactoryProtocol-Protocol.h"
#include "FBCaptureCoordinatorFilterRegistering-Protocol.h"

@class NSString;
@protocol {unordered_map<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>, FB::ObjcHash, FB::ObjcEqual, std::allocator<std::pair<NSString *const, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcHash, FB::ObjcEqual>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcEqual, FB::ObjcHash>, std::allocator<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcHash, FB::ObjcEqual>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcEqual, FB::ObjcHash>>="__value_"f}}};

@interface FBCaptureCoordinatorFilterFactory : NSObject<FBCaptureCoordinatorFilterFactoryProtocol, FBCaptureCoordinatorFilterRegistering> {
  /* instance variables */
  struct unordered_map<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>, FB::ObjcHash, FB::ObjcEqual, std::allocator<std::pair<NSString *const, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>>> { struct __hash_table<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcHash, FB::ObjcEqual>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcEqual, FB::ObjcHash>, std::allocator<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcHash, FB::ObjcEqual>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, std::pair<id<FBMPFilter> (^)(NSDictionary<NSString *,id> *), id<FBCaptureCoordinatorFilterController> (^)(id<FBMPFilter>)>>, FB::ObjcEqual, FB::ObjcHash>> { float __value_; } __p3_; } __table_; } _nameToFilterMap;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _mutex;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)registerFilterNamed:(id)named filterBlock:(id /* block */)block controllerBlock:(id /* block */)block;
- (id)_filterForName:(id)name config:(id)config;
- (id)_filterControllerForName:(id)name filter:(id)filter;
- (id)filterForName:(id)name effectID:(id)id config:(id)config resources:(id)resources;
- (id)requiredFilterResourceTypesForFilterWithName:(id)name;
- (id)newFilterResourceOfType:(id)type withAnalyticsProductName:(unsigned long long)name supportedCameraCapabilities:(unsigned long long)capabilities;
- (id)copyServiceHost:(id)host;
@end

#endif /* FBCaptureCoordinatorFilterFactory_h */
