//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef METASwipableFilterMediaView_h
#define METASwipableFilterMediaView_h
@import Foundation;

#include "UIView.h"
#include "ARImageSourceFilter.h"
#include "FBAREngineFilter.h"
#include "FBTimer.h"
#include "IGConvexPolygonCropView.h"
#include "IGGLFFilterCarouselNode.h"
#include "IGGLFFilterNode.h"
#include "IGGLFFilterProtocol-Protocol.h"
#include "IGGLKCanvas.h"
#include "IGGLKGradientNode.h"
#include "IGGLKImageGenerator.h"
#include "IGGLKNode.h"
#include "IGGLKPixelBufferNode.h"
#include "IGGLKSession.h"
#include "IGGestureHandler-Protocol.h"
#include "IGInfiniteScrollView.h"
#include "IGLImageSourceContext.h"
#include "IGPlaybackTimeline.h"
#include "IGPlaybackTimelineDelegate-Protocol.h"
#include "IGTransformController.h"
#include "METAAnimationCurve.h"
#include "METABackgroundGradient.h"
#include "METADisplayTexture.h"
#include "METAMediaAsset-Protocol.h"
#include "METAMediaAssetRenderer-Protocol.h"
#include "METAMediaAssetRendererDelegate-Protocol.h"
#include "METAMediaEffect-Protocol.h"
#include "METAMediaPlayerLogger.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "_TtC11ImageSource11ImageSource.h"
#include "_TtC11ImageSource25ImageSourceCVTextureCache.h"
#include "_TtP11ImageSource29ImageSourceViewRenderDelegate_-Protocol.h"

@class CIContext, NSArray, NSMapTable, NSString, UIColor, UIImage, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer;
@protocol IGGLFIGLUFilterChainProtocol><IGGLFFilterProtocol, IGPixelBufferViewable, IGSwipableFilterMediaViewGestureRecognizerDelegate, METAMediaCompositionPerformanceLoggerProtocol, METAMediaEffectRenderer, METASwipableFilterMediaViewDelegate, METASwipableFilterMediaViewTimedFiltersDelegate, OS_dispatch_queue, UIView<_TtP11ImageSource19ImageSourceViewType_;

@interface METASwipableFilterMediaView : UIView<METAMediaAssetRendererDelegate, UIGestureRecognizerDelegate, IGPlaybackTimelineDelegate, _TtP11ImageSource29ImageSourceViewRenderDelegate_, IGGestureHandler> {
  /* instance variables */
  METADisplayTexture *_igglkTexture;
  METADisplayTexture *_postProcessingTexture;
  METADisplayTexture *_effectWorkingTexture;
  IGPlaybackTimeline *_playbackTimeline;
  NSObject<METAMediaAssetRenderer> *_mediaAssetRenderer;
  NSObject<METAMediaEffectRenderer> *_mediaEffectRenderer;
  NSArray *_postProcessingEffectRenderers;
  struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _cachedMediaTransform;
  struct __CVPixelBufferPool * _mediaEffectPixelBufferPool;
  IGGLKImageGenerator *_imageGenerator;
  IGGLKCanvas *_canvas;
  IGGLKGradientNode *_gradientNode;
  IGGLKNode *_mediaContainerNode;
  IGGLKPixelBufferNode *_mediaNode;
  IGGLKPixelBufferNode *_additionalTransformMediaNode;
  IGGLFFilterNode *_filterChainNode;
  NSObject<IGGLFIGLUFilterChainProtocol><IGGLFFilterProtocol> *_filterChain;
  IGGLFFilterNode *_timedFilterNode;
  NSObject<IGGLFIGLUFilterChainProtocol><IGGLFFilterProtocol> *_timedFilterChain;
  long long _textureOrientation;
  NSObject<IGPixelBufferViewable> *_pixelBufferView;
  struct CGSize { double width; double height; } _textureSize;
  BOOL _shouldWaitForNewPixelBuffer;
  IGGLFFilterCarouselNode *_filterCarouselNode;
  IGInfiniteScrollView *_colorFilterScrollView;
  UIPanGestureRecognizer *_panGesture;
  UIPinchGestureRecognizer *_pinchGesture;
  UITapGestureRecognizer *_tapGesture;
  UIRotationGestureRecognizer *_rotationGesture;
  BOOL _isCurrentlyRedrawingMedia;
  BOOL _isCurrentlyRedrawingScene;
  BOOL _hasPendingRedrawingRequest;
  NSObject<OS_dispatch_queue> *_effectRenderingQueue;
  NSObject<OS_dispatch_queue> *_postProcessingEffectRenderingQueue;
  NSObject<OS_dispatch_queue> *_pixelBufferViewCallbackQueue;
  double _lastMediaTime;
  double _requestedPlaybackRate;
  BOOL _supportHDR;
  BOOL _enableHDR;
  BOOL _hasSetHDR;
  struct CGPoint { double x; double y; } _startPanPoint;
  struct CGPoint { double x; double y; } _startPanOrigin;
  float _startRadius;
  float _startTheta;
  FBTimer *_flashMaskTimer;
  BOOL _effectPixelBufferPoolWasConstructedWithAssetSize;
  UIColor *_nonTransparentCanvasColor;
  BOOL _imageSourceEnabled;
  ARImageSourceFilter *_arEffectImageSourceFilter;
  NSString *_preparingFrameID;
  NSString *_readyToShowFrameID;
  NSString *_presentingFrameID;
  NSArray *_carouselFilters;
  double _defaultColorFiltersStrength;
  NSArray *_postProcessingFilters;
  double _carouselFilterHorizontalOffset;
  _TtC11ImageSource11ImageSource *_imageSourceFromRenderer;
  BOOL _imageSourceSkipped;
  BOOL _isChangingAsset;
  IGLImageSourceContext *_imageSourceContext;
  _TtC11ImageSource25ImageSourceCVTextureCache *_textureCache;
  UIView<_TtP11ImageSource19ImageSourceViewType_> *_imageSourceView;
  NSMapTable *_imageSourceFrameIds;
  BOOL _hasSetAsset;
  BOOL _didJustSetMediaEffect;
  BOOL _didJustUnsetMediaEffect;
  BOOL _reusePixelBuffers;
  BOOL _useWorkingTexture;
  IGTransformController *_transformController;
  NSObject<IGGLFFilterProtocol> *_currentColorFilter;
  long long _numberOfActiveGestures;
}

@property (nonatomic) BOOL isLoading;
@property (retain, nonatomic) NSObject<METAMediaCompositionPerformanceLoggerProtocol> *performanceLogger;
@property (weak, nonatomic) NSObject<METASwipableFilterMediaViewDelegate> *delegate;
@property (weak, nonatomic) NSObject<METASwipableFilterMediaViewTimedFiltersDelegate> *timedFiltersDelegate;
@property (retain, nonatomic) NSObject<METAMediaAsset> *asset;
@property (readonly, nonatomic) NSObject<METAMediaAssetRenderer> *currentRenderer;
@property (retain, nonatomic) METABackgroundGradient *backgroundGradient;
@property (copy, nonatomic) NSArray *colorFilters;
@property (readonly, nonatomic) double currentTime;
@property (nonatomic) BOOL waitForInitialHDRSetBeforeRendering;
@property (nonatomic) BOOL shouldUseOriginalAsDefaultFilterName;
@property (readonly, nonatomic) double currentMediaTime;
@property (retain, nonatomic) FBAREngineFilter *arEngineFilter;
@property (retain, nonatomic) NSObject<METAMediaEffect> *mediaEffect;
@property (readonly, nonatomic) struct __CVBuffer * unfilteredMediaDisplayTexture;
@property (readonly, nonatomic) _TtC11ImageSource11ImageSource *unfilteredImageSource;
@property (copy, nonatomic) NSArray *postProcessingEffects;
@property (readonly, nonatomic) struct __CVBuffer * displayTexture;
@property (nonatomic) struct METAMediaTransform { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; } delayedMediaTransform;
@property (nonatomic) struct CGPoint { double x0; double x1; } mediaOffsetFromCenter;
@property (nonatomic) double mediaRotation;
@property (nonatomic) double perspectiveXRotateAngle;
@property (nonatomic) double perspectiveYRotateAngle;
@property (nonatomic) double perspectiveZRotateAngle;
@property (retain, nonatomic) UIImage *contentImage;
@property (readonly, nonatomic) IGConvexPolygonCropView *cropView;
@property (nonatomic) struct _GLKMatrix4 { float x0[16] } contentTransform;
@property (nonatomic) double originalCropAspectRatio;
@property (nonatomic) double cropZoomScale;
@property (nonatomic) struct CGPoint { double x0; double x1; } cropCenter;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } originalImageSize;
@property (readonly, nonatomic) struct METARegion { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; double x2; } mediaRegion;
@property (nonatomic) double mediaScale;
@property (nonatomic) BOOL mediaSupportsUserInteraction;
@property (nonatomic) BOOL colorFiltersLimitedToMediaRegion;
@property (nonatomic) BOOL forceRefreshAt30Fps;
@property (readonly, nonatomic) BOOL localLaplacianEnabled;
@property (readonly, nonatomic) BOOL luxEnabled;
@property (retain, nonatomic) _TtC25METAMediaFilterParameters25METAMediaFilterParameters *mediaFilterParameters;
@property (nonatomic) unsigned long long tintShadowsColorIndex;
@property (nonatomic) unsigned long long tintHighlightsColorIndex;
@property (nonatomic) unsigned long long tiltShiftMode;
@property (nonatomic) struct CGPoint { double x0; double x1; } tiltShiftCenter;
@property (nonatomic) double tiltShiftAngle;
@property (nonatomic) double tiltShiftRadius;
@property (nonatomic) BOOL disableTiltShiftRendering;
@property (nonatomic) BOOL tiltShiftAdjustmentInProgress;
@property (nonatomic) double tiltShiftStrength;
@property (nonatomic) BOOL displayOriginal;
@property (readonly, nonatomic) BOOL isFilterChainAdjusted;
@property (nonatomic) BOOL transparent;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } mediaContainerAffineTransform;
@property (nonatomic) struct CGPoint { double x0; double x1; } contentOffset;
@property (nonatomic) BOOL muted;
@property (nonatomic) double volume;
@property (retain, nonatomic) METAAnimationCurve *volumeCurve;
@property (copy, nonatomic) NSArray *audioEffects;
@property (readonly, nonatomic) double playbackRate;
@property (readonly, nonatomic) double effectivePlaybackRate;
@property (nonatomic) double videoAssetTimeStartOffset;
@property (weak, nonatomic) NSObject<IGSwipableFilterMediaViewGestureRecognizerDelegate> *gestureRecognizerDelegate;
@property (readonly, nonatomic) CIContext *ciContext;
@property (readonly, nonatomic) IGGLKSession *igglkSession;
@property (retain, nonatomic) METAMediaPlayerLogger *metaMediaPlayerLogger;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)dealloc;
- (void)setUseWorkingTexture:(BOOL)texture;
- (void)setReusePixelBuffer:(BOOL)buffer;
- (void)layoutSubviews;
- (void)_setupDisplayTexture;
- (BOOL)canRespondToGesture:(id)gesture;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (BOOL)infiniteScrollView:(id)view gestureRecognizerShouldBegin:(id)begin;
- (void)_handlePan:(id)pan;
- (void)_handlePinch:(id)pinch;
- (void)_handleTap:(id)tap;
- (void)_handleRotation:(id)rotation;
- (void)_initializePerspectiveRotationHelpersIfNeeded;
- (void)_updatePerspectiveRotationX:(double)x perspectiveRotationY:(double)y perspectiveRotationZ:(double)z;
- (void)setPanGestureMinimumNumberOfTouches:(double)touches;
- (void)setDisablePhotoFilter:(BOOL)filter;
- (void)setTiltShiftOverlayFilterStrength:(double)strength;
- (BOOL)isTiltShiftEnabled;
- (void)flashTiltShiftHighlight;
- (void)fadeInTiltShiftHighlight;
- (void)fadeOutTiltShiftHighlight;
- (void)_invalidateFlashMaskTimer;
- (void)_updateCarouselFiltersWithColorFilters:(id)filters;
- (void)infiniteScrollViewDidScroll:(id)scroll;
- (void)infiniteScrollViewDidEndDecelerating:(id)decelerating;
- (void)infiniteScrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)setIsColorFilterPickerEnabled:(BOOL)enabled;
- (void)setPlaybackRate:(double)rate time:(double)time atHostTime:(double)time;
- (void)seekToTime:(double)time toleranceBefore:(double)before toleranceAfter:(double)after completionHandler:(id /* block */)handler;
- (void)playbackTimeline:(id)timeline didUpdateCurrentTime:(double)time;
- (BOOL)_shouldMinimizeImageSourceViewMemory;
- (void)_startTrackingNewFrameWithIsUnifiedRenderer:(BOOL)renderer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_mediaRect;
- (void)mediaAssetRendererWillUpdateDisplayTexture:(id)texture;
- (void)mediaAssetRenderer:(id)renderer didUpdateDisplayTexture:(struct __CVBuffer *)texture;
- (void)mediaAssetRendererWillUpdateImageSource:(id)source;
- (void)mediaAssetRenderer:(id)renderer didFailToUpdateImageSourceWithError:(id)error;
- (void)mediaAssetRenderer:(id)renderer didUpdateImageSource:(id)source;
- (void)mediaAssetRendererDidBecomeReadyForDisplay:(id)display;
- (void)mediaAssetRenderer:(id)renderer loadingDidEncounterError:(id)error willRetry:(BOOL)retry;
- (void)mediaAssetRendererLoadingDidFail:(id)fail withError:(id)error;
- (void)mediaAssetRenderer:(id)renderer didUpdateStallState:(BOOL)state;
- (void)mediaAssetRenderer:(id)renderer isStuck:(BOOL)stuck timeSinceLastRefresh:(double)refresh;
- (void)mediaAssetRenderer:(id)renderer effectivePlaybackRateDidChange:(double)change;
- (void)mediaAssetRendererDidStartCheckingNewImageSource:(id)source;
- (void)mediaAssetRenderer:(id)renderer didFinishCheckingNewImageSourceWithResult:(BOOL)result;
- (void)mediaAssetRendererDidFailToCheckNewImageSource:(id)source;
- (BOOL)isMuted;
- (void)restartAREffect;
- (void)canvasNeedsDisplay:(id)display;
- (void)displayLayer:(id)layer;
- (BOOL)_shouldUseAdditionalTransformMediaNode;
- (void)_registerNextFrameCallbackWithFrameID:(id)id;
- (BOOL)_shouldRenderPostProcessingEffects;
- (void)setHDR:(BOOL)hdr;
- (void)setDrawOnBackground:(BOOL)background;
- (void)imageSourceView:(id)view didRender:(id)render renderInfo:(id)info;
- (void)imageSourceView:(id)view didFailToRender:(id)render withError:(id)error;
- (void)imageSourceView:(id)view didSkipRendering:(id)rendering;
- (void)imageSourceViewDidFinishRendering:(id)rendering;
- (void)_logImageSourceRenderResult:(id)result didSucceed:(BOOL)succeed withError:(id)error;
- (void)_updateTransformControllerContentSizeIfNeeded:(struct CGSize { double x0; double x1; })needed;
- (void)updateCropView;
- (void)cropViewDidUpdateContentTransform:(id)transform;
- (void)cropViewDidBeginInteracting:(id)interacting;
- (void)cropViewDidEndInteracting:(id)interacting;
- (void)cropViewDidBeginLongPress:(id)press;
- (void)cropViewDidEndLongPress:(id)press;
- (BOOL)isLocalLaplacianEnabled;
- (BOOL)isLuxEnabled;
- (BOOL)isTransparent;
@end

#endif /* METASwipableFilterMediaView_h */
