//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGAudioPlayer_h
#define IGAudioPlayer_h
@import Foundation;

#include "IGAudioPlayerPlaybackStatus.h"
#include "IGFNFVideoPlayerDelegate-Protocol.h"

@class NSURL, UIView;

@interface IGAudioPlayer : NSObject<IGFNFVideoPlayerDelegate> { // (Swift)
  /* instance variables */
   configuration;
   state;
   audioPlayer;
   announcer;
   $__lazy_storage_$_preparationDelegate;
   fadeInTask;
   fadeOutTask;
   shouldResumePlaybackWhenAppForegrounds;
   strictLogger;
   instanceId;
}

@property (nonatomic, readonly) BOOL canPlayback;
@property (nonatomic, readonly) IGAudioPlayerPlaybackStatus *playbackStatus;
@property (nonatomic, readonly) long long playbackState;
@property (nonatomic, readonly) BOOL playbackFailedToStart;
@property (nonatomic, readonly) double audioAssetDuration;
@property (nonatomic, readonly) double currentPlaybackTime;
@property (nonatomic, readonly) BOOL isAudioEnabled;
@property (nonatomic, readonly) NSURL *audioURL;
@property (nonatomic, readonly) BOOL isAudioLoaded;
@property (nonatomic, readonly) UIView *mediaView;
@property (nonatomic, readonly) BOOL hasError;

/* instance methods */
- (void)configureWith:(id)with dashManifestData:(id)data userSession:(id)session playerConfig:(id)config analyticsModule:(id)module isAudioEnabled:(BOOL)enabled shouldFadeVolumeOnPlayPause:(BOOL)pause backgroundBehavior:(long long)behavior isAudioProcessingEnabled:(BOOL)enabled;
- (void)preparePlayback;
- (void)pausePlaybackWith:(long long)with;
- (void)startPlaybackWith:(long long)with;
- (void)seekTo:(double)to;
- (void)stopPlaybackWith:(long long)with;
- (void)setAudioEnabled:(BOOL)enabled with:(long long)with;
- (void)setOutputEffects:(id)effects;
- (void)setPlaybackSpeed:(float)speed;
- (void)setAudioTimeDomainPitchAlgorithmEnabled:(BOOL)enabled;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (void)dealloc;
- (void)appMovedToBackground;
- (void)appMovedToForeground;
- (void)videoPlayer:(id)player willLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayer:(id)player didLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayer:(id)player didFailToPlaybackWithError:(id)error;
- (void)videoPlayerDidFinishSeeking:(id)seeking;
- (void)videoPlayerDidPlay:(id)play;
- (void)videoPlayer:(id)player didUpdatePlaybackProgress:(double)progress;
- (void)videoPlayerDidPlayToEnd:(id)end;
- (void)videoPlayerItemTimeFullyLoaded:(id)loaded;
- (void)videoPlayerWillPrepareAssetForPlayback:(id)playback;
- (void)videoPlayerDidPause:(id)pause reason:(long long)reason;
- (void)videoPlayerBufferEmpty:(id)empty;
- (void)videoPlayerDidLoop:(id)loop;
- (void)videoPlayer:(id)player didUpdateLoadingProgress:(double)progress;
- (void)videoPlayer:(id)player didBeginSeekingToTime:(double)time;
- (void)videoPlayer:(id)player didGenerateWarningWithError:(id)error;
- (void)videoPlayerDidUpdateAvailableAudioAutoTranslateLanguages:(id)languages;
- (id)init;
@end

#endif /* IGAudioPlayer_h */
