//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFDecompressionSessionWithDav1d_h
#define FNFDecompressionSessionWithDav1d_h
@import Foundation;

#include "FNFDecompressionSession-Protocol.h"

@class NSString;
@protocol FNFDecompressionSessionDelegate, OS_dispatch_queue;

@interface FNFDecompressionSessionWithDav1d : NSObject<FNFDecompressionSession> {
  /* instance variables */
  NSObject<FNFDecompressionSessionDelegate> *_delegate;
  BOOL _async;
  NSObject<OS_dispatch_queue> *_queue;
  BOOL _decoderInitialized;
  struct CGSize { double width; double height; } _videoSize;
  struct __CVPixelBufferPool * _pixelBufferPool;
  struct __CVPixelBufferPool * _pixelBufferPoolHighBD;
  struct Dav1dContext * _dav1dContext;
  struct FNFDecompressionConfig { BOOL debuggingErrorEnabled; BOOL badFrameFix; unsigned int recoverDecodeFrameFailureTimes; unsigned int maxGopStoredFrameCount; unsigned int av1NumberOfDecoderThreads; unsigned int av1MaxFrameDelay; BOOL shouldReuseDav1dDecoder; unsigned int numOfPrewarmedDav1dDecoders; unsigned int decodingSlownessDetectionPeriod; unsigned int decodingSlownessDetectionThreshold; double decodingSlownessTimeLimit; BOOL enableAV1DecodingWithVT; BOOL enableDecompressionSessionTargetGlobalQueue; BOOL disableVTAsynchronousDecompression; BOOL disableVT1xRealTimePlayback; BOOL disableVTTemporalProcessing; BOOL enableAsyncVTDecompressionSessionCreation; BOOL disableAtomicThreadFence; } _config;
  unsigned int _decodedFramesCount;
  unsigned int _slowDecodedFramesCount;
}

@property (readonly, nonatomic) struct opaqueCMFormatDescription * format;
@property (readonly, nonatomic) NSString *decompressionSessionType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)errorDomain;

/* instance methods */
- (id)initWithDelegate:(id)delegate sampleBufferFormatDescription:(struct opaqueCMFormatDescription *)description videoSize:(struct CGSize { double x0; double x1; })size async:(BOOL)async config:(struct FNFDecompressionConfig { BOOL x0; BOOL x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; BOOL x6; unsigned int x7; unsigned int x8; unsigned int x9; double x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; })config;
- (void)closeSession;
- (void)enqueueSampleBuffer:(struct opaqueCMSampleBuffer *)buffer iFrame:(unsigned long long)frame enqueueInfo:(id)info rotation:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })rotation;
- (unsigned char)canAcceptFormatDescription:(struct opaqueCMFormatDescription *)description;
- (struct CGSize { double x0; double x1; })inputSize;
- (void)_decodeAV1SampleBuffer:(struct opaqueCMSampleBuffer *)buffer iFrame:(unsigned long long)frame enqueueInfo:(id)info rotation:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })rotation;
- (int)_initDav1dContext:(struct Dav1dContext * *)context;
- (void)_closeDav1dDecoder;
- (void)_delegateErrorOutWithErrorCode:(long long)code errorSource:(id)source errorString:(id)string enqueueInfo:(id)info extraUserInfo:(id)info iFrame:(unsigned long long)frame;
- (void)_dropFrameAsApplicable:(unsigned long long)applicable enqueueInfo:(id)info;
@end

#endif /* FNFDecompressionSessionWithDav1d_h */
