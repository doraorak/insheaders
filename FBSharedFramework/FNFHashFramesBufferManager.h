//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFHashFramesBufferManager_h
#define FNFHashFramesBufferManager_h
@import Foundation;

#include "FNFFramesBufferManaging-Protocol.h"
#include "FNFHashFramesBuffer.h"

@class NSString;

@interface FNFHashFramesBufferManager : NSObject<FNFFramesBufferManaging> {
  /* instance variables */
  unsigned long long _sampleBufferRequestThreshold;
  unsigned long long _dataRequestCounter;
  FNFHashFramesBuffer *_hashFramesBuffer;
  int _bufferSize;
  unsigned long long _framesEnqueued;
  unsigned long long _decompressionSessionIndexStart;
  unsigned long long _framesFlushed;
  unsigned long long _framesDisplayed;
  unsigned long long _frameToClose;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _framesBufferMutex;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastFrameTime;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithSampleBufferRequestThreshold:(unsigned long long)threshold;
- (void)dealloc;
- (struct FNFFrameBufferData { struct __CVBuffer * x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; struct { long long x0; int x1; unsigned int x2; long long x3; } x2; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x3; })findNextFrame:(struct { long long x0; int x1; unsigned int x2; long long x3; })frame withDrawingOn:(BOOL)on isFirstFrame:(BOOL)frame shouldDropStaleFrame:(BOOL)frame staleFrameThreshold:(int)threshold;
- (BOOL)shouldRequestData;
- (void)resetDecompressionSessionIndex;
- (BOOL)doesIFrameBelongsToDecompressionSession:(unsigned long long)session;
- (void)setSampleBufferRequestThreshold:(int)threshold;
- (BOOL)isFull;
- (BOOL)seekFrameUpdatesFinished;
- (void)setFrameOnClose;
- (BOOL)isFrameOnClose:(unsigned long long)close;
- (void)clear;
- (id /* block */)prepareFlush;
- (void)dropFrame:(unsigned long long)frame;
- (id /* block */)addBuffer:(struct __CVBuffer *)buffer presentationTimeStamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })stamp duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration rotation:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })rotation;
- (id /* block */)addBuffer:(struct __CVBuffer *)buffer presentationTimeStamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })stamp duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration iFrameEnqueued:(unsigned long long)enqueued rotation:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })rotation;
- (void)enqueueSampleBuffer:(struct opaqueCMSampleBuffer *)buffer decompressionSession:(id)session enqueueInfo:(id)info rotation:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })rotation;
- (void)_advanceDataRequestCounter;
@end

#endif /* FNFHashFramesBufferManager_h */
