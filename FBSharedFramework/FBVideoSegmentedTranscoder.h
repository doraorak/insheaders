//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBVideoSegmentedTranscoder_h
#define FBVideoSegmentedTranscoder_h
@import Foundation;

#include "FBVideoEdits.h"
#include "FBVideoSegmentedEncoder.h"
#include "FBVideoTranscoderConfig.h"
#include "METAMediaSource.h"
#include "NSObject-Protocol.h"

@class AVAsset, AVAudioMix, AVVideoComposition, NSDictionary, NSMutableArray, NSString, NSURL;
@protocol FBVideoProcessing, FBVideoTranscoderOutputAdapter, OS_dispatch_queue, {FBMediaTranscodingKitVideoAssetExportParams="assetReader"@"AVAssetReader""audioTrack"@"AVAssetTrack""videoTrack"@"AVAssetTrack""audioOutput"@"<FBAssetReaderOutputProtocol>""videoOutput"@"<FBAssetReaderOutputProtocol>""assetWriter"@"<FBAssetWritingProtocol>""audioInput"@"<FBAssetWriterInputProtocol>""videoInput"@"<FBAssetWriterInputProtocol>""outputURL"@"NSURL""sourcePixelBufferAttributes"@"NSDictionary"}, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}};

@interface FBVideoSegmentedTranscoder : NSObject<NSObject> {
  /* instance variables */
  AVAsset *_asset;
  NSURL *_assetURL;
  NSObject<FBVideoTranscoderOutputAdapter> *_outputAdapter;
  AVVideoComposition *_videoComposition;
  AVAudioMix *_audioMix;
  METAMediaSource *_mediaSource;
  FBVideoTranscoderConfig *_config;
  NSDictionary *_optionalConfig;
  NSObject<OS_dispatch_queue> *_audioExportQueue;
  NSObject<OS_dispatch_queue> *_videoExportQueue;
  NSObject<OS_dispatch_queue> *_assetWriterQueue;
  unsigned long long _currentSegment;
  struct FBMediaTranscodingKitVideoAssetExportParams { AVAssetReader *assetReader; AVAssetTrack *audioTrack; AVAssetTrack *videoTrack; <FBAssetReaderOutputProtocol> *audioOutput; <FBAssetReaderOutputProtocol> *videoOutput; <FBAssetWritingProtocol> *assetWriter; <FBAssetWriterInputProtocol> *audioInput; <FBAssetWriterInputProtocol> *videoInput; NSURL *outputURL; NSDictionary *sourcePixelBufferAttributes; } _segmentParams;
  struct FBMediaTranscodingKitVideoAssetExportParams { AVAssetReader *assetReader; AVAssetTrack *audioTrack; AVAssetTrack *videoTrack; <FBAssetReaderOutputProtocol> *audioOutput; <FBAssetReaderOutputProtocol> *videoOutput; <FBAssetWritingProtocol> *assetWriter; <FBAssetWriterInputProtocol> *audioInput; <FBAssetWriterInputProtocol> *videoInput; NSURL *outputURL; NSDictionary *sourcePixelBufferAttributes; } _currentVideoSegmentParams;
  struct FBMediaTranscodingKitVideoAssetExportParams { AVAssetReader *assetReader; AVAssetTrack *audioTrack; AVAssetTrack *videoTrack; <FBAssetReaderOutputProtocol> *audioOutput; <FBAssetReaderOutputProtocol> *videoOutput; <FBAssetWritingProtocol> *assetWriter; <FBAssetWriterInputProtocol> *audioInput; <FBAssetWriterInputProtocol> *videoInput; NSURL *outputURL; NSDictionary *sourcePixelBufferAttributes; } _currentAudioSegmentParams;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _nextSegmentPresentationTime;
  id /* block */ _segmentStartedBlock;
  id /* block */ _segmentFinishedBlock;
  id /* block */ _progressBlock;
  id /* block */ _completionBlock;
  id /* block */ _imageSampleBlock;
  NSObject<OS_dispatch_queue> *_progressQueue;
  double _totalProgress;
  NSObject<FBVideoProcessing> *_videoProcessor;
  FBVideoEdits *_videoEdits;
  FBVideoSegmentedEncoder *_audioEncoder;
  FBVideoSegmentedEncoder *_videoEncoder;
  id /* block */ _assetWriterProvider;
  id /* block */ _applicationStateProvider;
  BOOL _shouldSegmentOutput;
  BOOL _shouldSkipEncodeAudio;
  BOOL _enforceMaxSegmentDuration;
  BOOL _suspendTranscoderWhenStartingInBG;
  BOOL _shouldWriteMoovAtomAtBeginningOfFile;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _videoStartPresentationTime;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _videoFinishPresentationTime;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _audioStartPresentationTime;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _audioFinishPresentationTime;
  struct FBVideoSegmentedResult { BOOL copiedAllSampleBuffers; BOOL failed; BOOL canceled; struct { long long value; int timescale; unsigned int flags; long long epoch; } startPresentationTime; struct { long long value; int timescale; unsigned int flags; long long epoch; } finishPresentationTime; NSMutableArray *timeStamps; } _audioSegmentedResult;
  NSMutableArray *_timeStamps;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _audioWriterInProgress;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _videoWriterInProgress;
}

@property (readonly, nonatomic) struct CGSize { double x0; double x1; } outputSize;
@property (readonly, nonatomic) long long numberOfSegments;
@property (readonly, nonatomic) long long estimatedOutputFileSize;
@property (readonly, nonatomic) unsigned long long state;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithAsset:(id)asset outputAdapter:(id)adapter videoEdits:(id)edits config:(id)config videoProcessor:(id)processor assetWriterProvider:(id /* block */)provider applicationStateProvider:(id /* block */)provider optionalConfig:(id)config;
- (id)initWithAsset:(id)asset videoComposition:(id)composition audioMix:(id)mix outputAdapter:(id)adapter videoEdits:(id)edits config:(id)config videoProcessor:(id)processor assetWriterProvider:(id /* block */)provider applicationStateProvider:(id /* block */)provider optionalConfig:(id)config mediaSource:(id)source;
- (id)latestTranscodingSoftException;
- (void)prepareWithProcessor:(id /* block */)processor;
- (void)transcodeWithProgress:(id /* block */)progress onSegmentStarted:(id /* block */)started onSegmentFinished:(id /* block */)finished onImageSample:(id /* block */)sample completion:(id /* block */)completion;
- (void)transcodeWithStartPresentationTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time segmentIdx:(unsigned long long)idx shouldSkipEncodeAudio:(BOOL)audio progress:(id /* block */)progress onSegmentStarted:(id /* block */)started onSegmentFinished:(id /* block */)finished onImageSample:(id /* block */)sample completion:(id /* block */)completion progressQueue:(id)queue;
- (void)protocolForVideoSegmentedResumeTranscoding;
- (id)currentVideoProcessorFilterConfigs;
- (void)cancelExportWithCompletionBlock:(id /* block */)block;
- (struct OpaqueVTDecompressionSession *)_createMVHEVCDecompressionSession:(struct opaqueCMFormatDescription *)session;
- (void)_applicationDidEnterBackground:(id)background;
- (void)_applicationWillResignActive:(id)active;
@end

#endif /* FBVideoSegmentedTranscoder_h */
