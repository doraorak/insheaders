//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef SparkARFLMConsentManagerImpl_h
#define SparkARFLMConsentManagerImpl_h
@import Foundation;

#include "NSObject-Protocol.h"

@class NSMapTable, NSString;
@protocol OS_dispatch_queue, SparkARFLMConsentStateFetcher, {unique_ptr<arfx::delivery::ICancelableToken, std::default_delete<arfx::delivery::ICancelableToken>>="__ptr_"{__compressed_pair<arfx::delivery::ICancelableToken *, std::default_delete<arfx::delivery::ICancelableToken>>="__value_"^{ICancelableToken}}};

@interface SparkARFLMConsentManagerImpl : NSObject<NSObject> {
  /* instance variables */
  NSObject<SparkARFLMConsentStateFetcher> *_consentStateFetcher;
  struct unique_ptr<arfx::delivery::ICancelableToken, std::default_delete<arfx::delivery::ICancelableToken>> { struct __compressed_pair<arfx::delivery::ICancelableToken *, std::default_delete<arfx::delivery::ICancelableToken>> { struct ICancelableToken *__value_; } __ptr_; } _liveQueryToken;
  NSString *_currentState;
  BOOL _hasCurrentStateBeenSet;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _currentStateMutex;
  NSMapTable *_observers;
  NSObject<OS_dispatch_queue> *_serialQueue;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConsentStateFetcher:(id)fetcher;
- (id)getLastKnownLocalState;
- (void)setLocalState:(id)state;
- (void)subscribeStateChange:(id)change callbackQueue:(id)queue;
- (void)prefetchState;
- (void)fetchStateAsyncWithSuccessCallback:(id /* block */)callback failureCallback:(id /* block */)callback callbackQueue:(id)queue;
@end

#endif /* SparkARFLMConsentManagerImpl_h */
