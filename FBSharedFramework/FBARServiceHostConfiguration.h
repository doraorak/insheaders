//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBARServiceHostConfiguration_h
#define FBARServiceHostConfiguration_h
@import Foundation;

#include "FBARProductFeatureConfiguration.h"
#include "NSObject-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSString;
@protocol {unordered_map<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>, std::hash<arfx::services::ServiceType::Enum>, std::equal_to<arfx::services::ServiceType::Enum>, std::allocator<std::pair<const arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>>>="__table_"{__hash_table<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__unordered_map_hasher<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::hash<arfx::services::ServiceType::Enum>, std::equal_to<arfx::services::ServiceType::Enum>>, std::__unordered_map_equal<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::equal_to<arfx::services::ServiceType::Enum>, std::hash<arfx::services::ServiceType::Enum>>, std::allocator<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::hash<arfx::services::ServiceType::Enum>, std::equal_to<arfx::services::ServiceType::Enum>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::equal_to<arfx::services::ServiceType::Enum>, std::hash<arfx::services::ServiceType::Enum>>>="__value_"f}}};

@interface FBARServiceHostConfiguration : NSObject<NSSecureCoding, NSObject> {
  /* instance variables */
  struct unordered_map<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>, std::hash<arfx::services::ServiceType::Enum>, std::equal_to<arfx::services::ServiceType::Enum>, std::allocator<std::pair<const arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> { struct __hash_table<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__unordered_map_hasher<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::hash<arfx::services::ServiceType::Enum>, std::equal_to<arfx::services::ServiceType::Enum>>, std::__unordered_map_equal<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::equal_to<arfx::services::ServiceType::Enum>, std::hash<arfx::services::ServiceType::Enum>>, std::allocator<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::hash<arfx::services::ServiceType::Enum>, std::equal_to<arfx::services::ServiceType::Enum>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<arfx::services::ServiceType::Enum, std::__hash_value_type<arfx::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::equal_to<arfx::services::ServiceType::Enum>, std::hash<arfx::services::ServiceType::Enum>>> { float __value_; } __p3_; } __table_; } _cxxConfigurations;
  NSArray *_cxxServiceConfigurations;
}

@property (readonly, nonatomic) FBARProductFeatureConfiguration *productFeatureConfiguration;
@property (readonly, copy, nonatomic) NSArray *configurations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)newWithServiceConfigurations:(id)configurations productFeatureConfiguration:(id)configuration;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithServiceConfigurations:(id)configurations productFeatureConfiguration:(id)configuration;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)configurationForServiceType:(const struct ServiceType *)type;
@end

#endif /* FBARServiceHostConfiguration_h */
