//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGPhoto_h
#define IGPhoto_h
@import Foundation;

#include "IGImageURLProvider-Protocol.h"
#include "IGResource-Protocol.h"
#include "IGStoryImageProvider-Protocol.h"
#include "NSCoding-Protocol.h"
#include "NSCopying-Protocol.h"

@class NSArray, NSData, NSSet, NSString;

@interface IGPhoto : NSObject<NSCoding, NSCopying, IGImageURLProvider, IGResource, IGStoryImageProvider> {
  /* instance variables */
  NSArray *_originalImageVersions;
  NSArray *_processedImageVersions;
  NSSet *_knownImageURLIdentifiers;
  BOOL _isLightweightMedia;
}

@property (copy, nonatomic) NSString *mediaID;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (copy, nonatomic) NSData *previewImageData;
@property (readonly, nonatomic) BOOL isSponsored;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initAudioThumbnailFromDictionary:(id)dictionary;
- (id)initWithFeedItemDictionary:(id)dictionary;
- (id)initWithFeedItemDictionary:(id)dictionary extras:(id)extras;
- (id)initWithFeedItemDictionary:(id)dictionary isSponsoredAd:(BOOL)ad isLightweightMedia:(BOOL)media;
- (id)initMediaPreviewFromDictionary:(id)dictionary;
- (id)initIGTVFirstFramePreviewWithMediaID:(id)id firstFrameImageCandidate:(id)candidate igtvFirstFrameImageCandidate:(id)candidate isSponsored:(BOOL)sponsored;
- (id)initWithImageURL:(id)url mediaID:(id)id originalMediaSize:(struct CGSize { double x0; double x1; })size previewImageData:(id)data;
- (BOOL)isEqual:(id)equal;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)imageURLForWidth:(double)width;
- (id)imageTypedURLForWidth:(double)width;
- (id)imageTypedURLForWidth:(double)width launcherSetProvider:(id)provider;
- (id)imageURLForSize:(struct CGSize { double x0; double x1; })size;
- (id)imageTypedURLForSize:(struct CGSize { double x0; double x1; })size;
- (id)thumbnailURL;
- (id)thumbnailTypedURL;
- (id)preloadedImage;
- (id)storyImageSpecifier;
- (unsigned long long)key;
- (id)operationIdentifiers;
- (unsigned long long)requestType;
@end

#endif /* IGPhoto_h */
