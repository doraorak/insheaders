//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef CKComponentViewReusePoolMapWrapper_h
#define CKComponentViewReusePoolMapWrapper_h
@import Foundation;

@protocol {ViewReusePoolMap="dictionary"{Dictionary<RC::ViewKey, RC::ViewReusePool>="_elements"{vector<std::pair<RC::ViewKey, RC::ViewReusePool>, std::allocator<std::pair<RC::ViewKey, RC::ViewReusePool>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<RC::ViewKey, RC::ViewReusePool> *, std::allocator<std::pair<RC::ViewKey, RC::ViewReusePool>>>="__value_"^v}}}"vendedViews"{vector<UIView *, std::allocator<UIView *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<UIView *__strong *, std::allocator<UIView *>>="__value_"^@}}};

@interface CKComponentViewReusePoolMapWrapper : NSObject {
  /* instance variables */
  struct ViewReusePoolMap { struct Dictionary<RC::ViewKey, RC::ViewReusePool> { struct vector<std::pair<RC::ViewKey, RC::ViewReusePool>, std::allocator<std::pair<RC::ViewKey, RC::ViewReusePool>>> { void *__begin_; void *__end_; struct __compressed_pair<std::pair<RC::ViewKey, RC::ViewReusePool> *, std::allocator<std::pair<RC::ViewKey, RC::ViewReusePool>>> { void *__value_; } __end_cap_; } _elements; } dictionary; struct vector<UIView *, std::allocator<UIView *>> { __end_ * *__begin_; __end_cap_ * * x0; struct __compressed_pair<UIView *__strong *, std::allocator<UIView *>> { id *__value_; } x1; } vendedViews; } _viewReusePoolMap;
}

/* instance methods */
@end

#endif /* CKComponentViewReusePoolMapWrapper_h */
