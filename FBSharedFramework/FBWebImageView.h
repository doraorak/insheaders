//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBWebImageView_h
#define FBWebImageView_h
@import Foundation;

#include "UIView.h"
#include "FBImageRenderState.h"
#include "FBWebImageActiveImageViewProviderProtocol-Protocol.h"
#include "FBWebImageDownloaderFactoryProtocol-Protocol.h"
#include "FBWebImageLoadingIndicatorView.h"
#include "FBWebImageRetryPlaceholderView.h"
#include "FBWebImageSpecifier-Protocol.h"
#include "FBWebImageTransitionAsyncCalculator-Protocol.h"
#include "FBWebImageTransitionProtocol-Protocol.h"
#include "FBWebImageViewLayoutDelegate-Protocol.h"
#include "FBWebImageViewListenerAnnouncer.h"

@class NSSet, NSString, UIColor, UIImage, UIView;
@protocol FBFeatureAttributionContextProtocol, FBWebImageDownloader, FBWebImageLogger, UIView<FBWebImageEnhancedImageViewProtocol;

@interface FBWebImageView : UIView<FBWebImageActiveImageViewProviderProtocol> {
  /* instance variables */
  UIView<FBWebImageEnhancedImageViewProtocol> *_imageView;
  FBWebImageRetryPlaceholderView *_retryControl;
  FBWebImageLoadingIndicatorView *_loadingIndicator;
  NSObject<FBWebImageDownloader> *_downloader;
  NSObject<FBWebImageViewLayoutDelegate> *_defaultLayoutDelegate;
  FBWebImageViewListenerAnnouncer *_announcer;
  NSObject<FBWebImageTransitionProtocol> *_placeholderTransition;
  long long _downloadStatus;
  NSObject<FBWebImageTransitionAsyncCalculator> *_transitionAsyncCalculator;
  BOOL _userSetUserInteractionEnabled;
  id _cachedImageHolder;
  NSString *_focalPointInfo;
}

@property (retain, nonatomic) NSObject<FBWebImageSpecifier> *imageSpecifier;
@property (retain, nonatomic) UIView *placeholderView;
@property (readonly, nonatomic) BOOL isPlaceholderTransitionAnimationInProgress;
@property (nonatomic) BOOL enableRetries;
@property (nonatomic) long long preferredImageDynamicRange;
@property (retain, nonatomic) UIView *overlayView;
@property (nonatomic) unsigned long long transitionType;
@property (weak, nonatomic) NSObject<FBWebImageViewLayoutDelegate> *layoutDelegate;
@property (readonly, nonatomic) UIImage *displayedImage;
@property (readonly, nonatomic) unsigned long long displayedImageFlag;
@property (readonly, nonatomic) BOOL wasDisplayedImageFromCache;
@property (readonly, nonatomic) unsigned long long imageCacheSource;
@property (readonly, nonatomic) id logicalIdentifier;
@property (copy, nonatomic) NSString *analyticsModule;
@property (retain, nonatomic) NSObject<FBFeatureAttributionContextProtocol> *attributionContext;
@property (retain, nonatomic) FBImageRenderState *imageRenderState;
@property (copy, nonatomic) NSSet *analyticsTags;
@property (readonly, nonatomic) NSObject<FBWebImageLogger> *logger;
@property (nonatomic) long long imageContentMode;
@property (nonatomic) BOOL imageClipsToBounds;
@property (copy, nonatomic) UIColor *tintColor;
@property (readonly, nonatomic) BOOL displayedImageIsFinal;
@property (readonly, nonatomic) NSObject<FBWebImageDownloaderFactoryProtocol> *downloaderFactory;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame downloaderFactory:(id)factory logger:(id)logger;
- (id)initWithDownloaderFactory:(id)factory logger:(id)logger;
- (void)dealloc;
- (void)layoutSubviews;
- (void)enableLoadingIndicator;
- (void)announceImageRenderEventIfRequiredWithURL:(id)url atTime:(double)time;
- (void)cancel;
- (void)setUserInteractionEnabled:(BOOL)enabled;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (id)_retrieveUpdatedDownloaderFactory:(id)factory;
- (void)_updateImage:(id)image cachedImageHolder:(id)holder;
- (void)_resetImage;
- (void)setDefaultImage:(id)image;
- (void)_resetDownload;
- (void)_showBlurredPreviewImage:(id)image;
- (void)_showPlaceholder;
- (void)_hidePlaceholder;
- (void)_parseImageDownloadResponseForBetterImage:(id)image;
- (void)_longPressListener:(id)listener;
- (BOOL)_imageIsBetterInResponse:(id)response;
- (BOOL)_shouldShowBlurredPreviewImage:(id)image;
- (void)_parseImageDownloadResponse:(id)response;
- (void)updateImageDownloaderFactory:(id)factory logger:(id)logger;
- (id)activeImageView;
- (struct CGPoint { double x0; double x1; })calculateFocusPoint;
- (id)getFocalPointInfo;
@end

#endif /* FBWebImageView_h */
