//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBARModelPaths_h
#define FBARModelPaths_h
@import Foundation;

#include "NSCopying-Protocol.h"

@protocol {F14ValueMap<folly::Range<const char *>, std::string, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, std::allocator<std::pair<const folly::Range<const char *>, std::string>>>="__table_"{__hash_table<std::__hash_value_type<folly::Range<const char *>, std::string>, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>, std::allocator<std::__hash_value_type<folly::Range<const char *>, std::string>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>>="__value_"f}}}, {F14ValueMap<std::string, std::string, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>, std::allocator<std::pair<const std::string, std::string>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::string>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>, std::allocator<std::__hash_value_type<std::string, std::string>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>>="__value_"f}}}, {shared_ptr<arfx::delivery::ModelPaths>="__ptr_"^{ModelPaths}"__cntrl_"^{__shared_weak_count}};

@interface FBARModelPaths : NSObject<NSCopying> {
  /* instance variables */
  struct shared_ptr<arfx::delivery::ModelPaths> { struct ModelPaths *__ptr_; struct __shared_weak_count *__cntrl_; } _modelPaths;
  struct F14ValueMap<folly::Range<const char *>, std::string, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, std::allocator<std::pair<const folly::Range<const char *>, std::string>>> { struct __hash_table<std::__hash_value_type<folly::Range<const char *>, std::string>, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>, std::allocator<std::__hash_value_type<folly::Range<const char *>, std::string>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>> { float __value_; } __p3_; } __table_; } _scriptingModuleNameToFilePathMap;
  struct F14ValueMap<std::string, std::string, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>, std::allocator<std::pair<const std::string, std::string>>> { struct __hash_table<std::__hash_value_type<std::string, std::string>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>, std::allocator<std::__hash_value_type<std::string, std::string>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>> { float __value_; } __p3_; } __table_; } _sparkVisionModelPaths;
}

/* instance methods */
- (id)initWithCxxModelPaths:(struct shared_ptr<arfx::delivery::ModelPaths> { struct ModelPaths * x0; struct __shared_weak_count * x1; })paths cxxScriptingModuleNameToFilePathMap:(struct F14ValueMap<folly::Range<const char *>, std::string, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, std::allocator<std::pair<const folly::Range<const char *>, std::string>>> { struct __hash_table<std::__hash_value_type<folly::Range<const char *>, std::string>, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>, std::allocator<std::__hash_value_type<folly::Range<const char *>, std::string>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>> { float x0; } x3; } x0; })map cxxSparkVisionModelPaths:(struct F14ValueMap<std::string, std::string, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>, std::allocator<std::pair<const std::string, std::string>>> { struct __hash_table<std::__hash_value_type<std::string, std::string>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>, std::allocator<std::__hash_value_type<std::string, std::string>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>> { float x0; } x3; } x0; })paths;
- (id)copyWithZone:(struct _NSZone *)zone;
- (struct shared_ptr<arfx::delivery::ModelPaths> { struct ModelPaths * x0; struct __shared_weak_count * x1; })modelPaths;
- (struct F14ValueMap<folly::Range<const char *>, std::string, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, std::allocator<std::pair<const folly::Range<const char *>, std::string>>> { struct __hash_table<std::__hash_value_type<folly::Range<const char *>, std::string>, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>, std::allocator<std::__hash_value_type<folly::Range<const char *>, std::string>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<folly::Range<const char *>, std::string>, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessHash<folly::Range<const char *>>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::__unordered_map_equal<folly::Range<const char *>, std::__hash_value_type<folly::Range<const char *>, std::string>, folly::HeterogeneousAccessEqualTo<folly::Range<const char *>>, folly::HeterogeneousAccessHash<folly::Range<const char *>>>> { float x0; } x3; } x0; })scriptingModuleNameToFilePathMap;
- (struct F14ValueMap<std::string, std::string, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>, std::allocator<std::pair<const std::string, std::string>>> { struct __hash_table<std::__hash_value_type<std::string, std::string>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>, std::allocator<std::__hash_value_type<std::string, std::string>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessHash<std::string>, folly::HeterogeneousAccessEqualTo<std::string>>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, folly::HeterogeneousAccessEqualTo<std::string>, folly::HeterogeneousAccessHash<std::string>>> { float x0; } x3; } x0; })sparkVisionModelPaths;
@end

#endif /* FBARModelPaths_h */
