//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MSGModel_h
#define MSGModel_h
@import Foundation;

#include "MSGModel-Protocol.h"
#include "MSGModelADTValue-Protocol.h"
#include "NSCoding-Protocol.h"

@class NSString;
@protocol {vector<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *>, std::allocator<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *> *, std::allocator<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *>>>="__value_"^v}};

@interface MSGModel : NSObject<NSCoding, MSGModel, MSGModelADTValue> {
  /* instance variables */
  const struct MSGModelInfo * _modelInfo;
  struct vector<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *>, std::allocator<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *>>> { void *__begin_; void *__end_; struct __compressed_pair<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *> *, std::allocator<std::variant<bool, int, long long, double, float, id, MSGModelWeakObjectContainer *, void *>>> { void *__value_; } __end_cap_; } _fieldValues;
  struct __MCICQLResultSet * _cqlResultSet;
  unsigned long long _cqlResultSetRow;
  unsigned long long _cachedHashValue;
  BOOL _needsUpdateHash;
}

@property (readonly, nonatomic) NSString *remodelTypeName;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long adtValueSubtype;

/* class methods */
+ (id)newADTModelWithInfo:(const struct MSGModelInfo *)info adtValueSubtype:(long long)subtype;
+ (id)newWithModelInfo:(const struct MSGModelInfo *)info;
+ (BOOL)resolveInstanceMethod:(SEL)method;

/* instance methods */
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copy;
- (void)dealloc;
- (id)fieldDiffWithModel:(id)model;
- (BOOL)isEqualToMSGModel:(id)msgmodel;
- (BOOL)isEqualToMSGModel:(id)msgmodel fieldDiff:(id)diff;
- (BOOL)isEqual:(id)equal;
- (BOOL)conformsToProtocol:(id)protocol;
- (void)setBoolValue:(BOOL)value forFieldIndex:(unsigned long long)index;
- (void)setInt32Value:(int)value forFieldIndex:(unsigned long long)index;
- (void)setInt64Value:(long long)value forFieldIndex:(unsigned long long)index;
- (void)setDoubleValue:(double)value forFieldIndex:(unsigned long long)index;
- (void)setFloatValue:(float)value forFieldIndex:(unsigned long long)index;
- (void)setObjectValue:(id)value forFieldIndex:(unsigned long long)index;
- (void)setWeakObjectValue:(id)value forFieldIndex:(unsigned long long)index;
- (void)setStructValue:(void *)value forFieldIndex:(unsigned long long)index;
- (void)setMCFTypeRefValue:(void *)value forFieldIndex:(unsigned long long)index;
- (BOOL)boolValueAtFieldIndex:(unsigned long long)index;
- (int)int32ValueAtFieldIndex:(unsigned long long)index;
- (long long)int64ValueAtFieldIndex:(unsigned long long)index;
- (float)floatValueAtFieldIndex:(unsigned long long)index;
- (double)doubleValueAtFieldIndex:(unsigned long long)index;
- (id)objectValueAtFieldIndex:(unsigned long long)index;
- (id)weakObjectValueAtFieldIndex:(unsigned long long)index;
- (void *)structValueAtFieldIndex:(unsigned long long)index;
- (void *)mcfTypeRefValueAtFieldIndex:(unsigned long long)index;
- (void)setResultSet:(void *)set row:(unsigned long long)row;
- (void *)msg_underlyingResultSet;
- (unsigned long long)msg_underlyingResultSetRow;
- (void)setCGRectValue:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })value forFieldIndex:(unsigned long long)index;
- (void)setCGSizeValue:(struct CGSize { double x0; double x1; })value forFieldIndex:(unsigned long long)index;
- (void)setCGPointValue:(struct CGPoint { double x0; double x1; })value forFieldIndex:(unsigned long long)index;
- (void)setNSRangeValue:(struct _NSRange { unsigned long long x0; unsigned long long x1; })value forFieldIndex:(unsigned long long)index;
- (void)setUIEdgeInsetsValue:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })value forFieldIndex:(unsigned long long)index;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })CGRectValueAtFieldIndex:(unsigned long long)index;
- (struct CGSize { double x0; double x1; })CGSizeValueAtFieldIndex:(unsigned long long)index;
- (struct CGPoint { double x0; double x1; })CGPointValueAtFieldIndex:(unsigned long long)index;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })NSRangeValueAtFieldIndex:(unsigned long long)index;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })UIEdgeInsetsValueAtFieldIndex:(unsigned long long)index;
@end

#endif /* MSGModel_h */
