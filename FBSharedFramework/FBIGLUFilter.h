//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBIGLUFilter_h
#define FBIGLUFilter_h
@import Foundation;

#include "FBFilter.h"
#include "NSCopying-Protocol.h"

@protocol struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue * x0; struct __shared_weak_count * x1; }, struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; }, struct shared_ptr<iglu::resourceloader::IResourceLoader> { struct IResourceLoader * x0; struct __shared_weak_count * x1; }, struct shared_ptr<iglu::resourceloader::ResourcePool> { struct ResourcePool * x0; struct __shared_weak_count * x1; }, {shared_ptr<igl::ICommandQueue>="__ptr_"^{ICommandQueue}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::IDevice>="__ptr_"^{IDevice}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<iglu::filterkit::IFilter>="__ptr_"^{IFilter}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<iglu::resourceloader::IResourceLoader>="__ptr_"^{IResourceLoader}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<iglu::resourceloader::ResourcePool>="__ptr_"^{ResourcePool}"__cntrl_"^{__shared_weak_count}};

@interface FBIGLUFilter : FBFilter<NSCopying> {
  /* instance variables */
  BOOL _useFilterContext;
  struct CGColorSpace * _outputLayerColorspace;
}

@property (readonly, nonatomic) void * igluFilter;
@property (readonly, nonatomic) struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue * x0; struct __shared_weak_count * x1; } commandQueue;
@property (readonly, nonatomic) struct shared_ptr<iglu::resourceloader::IResourceLoader> { struct IResourceLoader * x0; struct __shared_weak_count * x1; } resourceLoader;
@property (readonly, nonatomic) struct shared_ptr<iglu::resourceloader::ResourcePool> { struct ResourcePool * x0; struct __shared_weak_count * x1; } resourcePool;
@property (readonly, nonatomic) struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; } device;
@property (nonatomic) BOOL supportsYUV;
@property (nonatomic) BOOL isOutputColorSpaceHDR;
@property (nonatomic) BOOL errorOnStickerRenderingFailure;
@property (nonatomic) BOOL enableRetryFrames;

/* instance methods */
- (id)init;
- (id)initWithIgluFilter:(struct shared_ptr<iglu::filterkit::IFilter> { struct IFilter * x0; struct __shared_weak_count * x1; })filter device:(struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; })device resourceLoader:(struct shared_ptr<iglu::resourceloader::IResourceLoader> { struct IResourceLoader * x0; struct __shared_weak_count * x1; })loader resourcePool:(struct shared_ptr<iglu::resourceloader::ResourcePool> { struct ResourcePool * x0; struct __shared_weak_count * x1; })pool commandQueue:(struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue * x0; struct __shared_weak_count * x1; })queue;
- (id)initWithIgluFilter:(struct shared_ptr<iglu::filterkit::IFilter> { struct IFilter * x0; struct __shared_weak_count * x1; })filter;
- (id)_initWithIgluFilter:(struct shared_ptr<iglu::filterkit::IFilter> { struct IFilter * x0; struct __shared_weak_count * x1; })filter device:(struct shared_ptr<igl::IDevice> { struct IDevice * x0; struct __shared_weak_count * x1; })device resourceLoader:(struct shared_ptr<iglu::resourceloader::IResourceLoader> { struct IResourceLoader * x0; struct __shared_weak_count * x1; })loader resourcePool:(struct shared_ptr<iglu::resourceloader::ResourcePool> { struct ResourcePool * x0; struct __shared_weak_count * x1; })pool commandQueue:(struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue * x0; struct __shared_weak_count * x1; })queue useFilterContext:(BOOL)context;
- (void)setParameters:(id)parameters;
- (void)setFilterContext:(id)context;
- (BOOL)render:(id)render to:(id)to time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (id)filterName;
- (BOOL)iglRender:(id)render to:(id)to time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (BOOL)iglRender:(id)render to:(id)to time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time waitForGPUIdle:(BOOL)gpuidle;
- (unsigned long long)inputPixelFormat;
- (unsigned long long)outputPixelFormat;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* FBIGLUFilter_h */
