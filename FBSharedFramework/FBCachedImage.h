//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBCachedImage_h
#define FBCachedImage_h
@import Foundation;

#include "NSObject-Protocol.h"

@class NSString, NSURL, UIImage;

@interface FBCachedImage : NSObject<NSObject> {
  /* instance variables */
  NSString *_mediaType;
}

@property (nonatomic) struct { unsigned long long x0; unsigned long long x1; } imageSize;
@property unsigned long long state;
@property (retain) NSURL *localFileURL;
@property (retain) struct CGImage * image;
@property (retain) UIImage *uiImage;
@property (readonly, retain) id extraData;
@property (readonly, nonatomic) unsigned long long fileSize;
@property (readonly, nonatomic) long long renderingMode;
@property (readonly, nonatomic) double scale;
@property (readonly, nonatomic) long long orientation;
@property (readonly, nonatomic) struct { unsigned long long x0; unsigned long long x1; } originalImageSize;
@property (readonly, nonatomic) BOOL isFinal;
@property (readonly, nonatomic) unsigned long long scan;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithImageSize:(struct { unsigned long long x0; unsigned long long x1; })size fileSize:(unsigned long long)size scale:(double)scale orientation:(long long)orientation renderingMode:(long long)mode;
- (id)initWithImage:(struct CGImage *)image fileSize:(unsigned long long)size originalImageSize:(struct { unsigned long long x0; unsigned long long x1; })size scale:(double)scale orientation:(long long)orientation renderingMode:(long long)mode;
- (id)initWithImage:(struct CGImage *)image fileSize:(unsigned long long)size;
- (void)dealloc;
- (BOOL)decodeIfNeeded;
- (BOOL)decodeIfNeededForViewPortSizeInPixels:(struct CGSize { double x0; double x1; })pixels;
- (unsigned long long)cost;
- (unsigned long long)encodedCost;
- (id)mediaType;
@end

#endif /* FBCachedImage_h */
