//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGProfilePictureImageView_h
#define IGProfilePictureImageView_h
@import Foundation;

#include "UIView.h"
#include "IGAnimatedImageView.h"
#include "IGAssetPlayerView.h"
#include "IGFNFVideoPlayable-Protocol.h"
#include "IGFNFVideoPlayerDelegate-Protocol.h"
#include "IGImageView.h"
#include "IGImageViewDelegate-Protocol.h"
#include "IGProfileImage.h"
#include "IGProfilePictureImageViewLoadDelegate-Protocol.h"
#include "IGProfilePictureImageViewPlaceholderProvider.h"
#include "IGProfilePictureImageViewTapDelegate-Protocol.h"
#include "IGShimmeringView.h"
#include "IGSimpleButton.h"
#include "IGUser.h"
#include "IGUserUpdatedListener-Protocol.h"
#include "IGVideoPlayerManaging-Protocol.h"
#include "KeyframesView.h"
#include "MOSImageRequestInterfacing-Protocol.h"

@class NSString, NSURL, UIColor, UIView;

@interface IGProfilePictureImageView : UIView<IGFNFVideoPlayerDelegate, IGImageViewDelegate, IGUserUpdatedListener> {
  /* instance variables */
  IGImageView *_imageView;
  IGSimpleButton *_profilePicButton;
  NSObject<MOSImageRequestInterfacing> *_imageRequest;
  long long _imageFetchPriority;
  IGProfilePictureImageViewPlaceholderProvider *_imagePlaceholderProvider;
  UIView *_badgeView;
  BOOL _shouldProcessImage;
  IGAnimatedImageView *_animatedImageView;
  KeyframesView *_birthdayConfettiKeyframesView;
  BOOL _birthdayConfettiEligible;
  BOOL _shouldBypassVisibilityCheck;
  BOOL _loggingEnabled;
  BOOL _isPrismAvatarRingEnabled;
  NSURL *_overrideProfilePicURL;
  IGAssetPlayerView *_profileAVAssetView;
  UIView *_profileFNFVideoView;
  UIView *_profileFNFContainerView;
  NSObject<IGFNFVideoPlayable> *_profileVideoPlayer;
  NSObject<IGVideoPlayerManaging> *_profileVideoPlayerManager;
  IGShimmeringView *_shimmeringView;
}

@property (retain, nonatomic) IGProfileImage *image;
@property (retain, nonatomic) NSURL *animatedImageURL;
@property (readonly, nonatomic) IGUser *user;
@property (nonatomic) long long borderStyle;
@property (retain, nonatomic) UIColor *customBorderColor;
@property (nonatomic) BOOL buttonDisabled;
@property (readonly, nonatomic) BOOL highlighted;
@property (nonatomic) BOOL hasHighlightedState;
@property (nonatomic) BOOL preferHDProfilePicture;
@property (nonatomic) BOOL enableAutomatedLogging;
@property (retain, nonatomic) NSString *finalDestinationModuleForAutomatedLogging;
@property (nonatomic) BOOL clearImageForReuseIfNecessary;
@property (retain, nonatomic) NSString *additionalAccessibilityHint;
@property (retain, nonatomic) NSString *customAccessibilityLabel;
@property (retain, nonatomic) NSString *customAccessibilityHint;
@property (nonatomic) unsigned long long badgeType;
@property (weak, nonatomic) NSObject<IGProfilePictureImageViewTapDelegate> *profileTapDelegate;
@property (weak, nonatomic) NSObject<IGProfilePictureImageViewLoadDelegate> *profileLoadDelegate;
@property (nonatomic) BOOL useShimmerViewWhenLoading;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame imagePriority:(long long)priority;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame imagePriority:(long long)priority placeholderImage:(id)image;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame imagePriority:(long long)priority placeholderImage:(id)image buttonDisabled:(BOOL)disabled;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame imagePriority:(long long)priority placeholderImage:(id)image buttonDisabled:(BOOL)disabled loggingEnabled:(BOOL)enabled;
- (void)dealloc;
- (void)layoutSubviews;
- (void)_setUpShimmerView;
- (void)_showShimmerView;
- (void)_hideShimmerView;
- (void)setBackgroundColor:(id)color;
- (void)setImageBackgroundColor:(id)color;
- (void)setTintColor:(id)color;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setContentMode:(long long)mode;
- (void)traitCollectionDidChange:(id)change;
- (BOOL)_shouldSkipSettingImage:(id)image;
- (void)setOverrideProfilePicURL:(id)url;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (void)_tapped:(id)_tapped;
- (void)userWasUpdated:(id)updated;
- (void)setIsAccessibilityElement:(BOOL)element;
- (void)imageView:(id)view didLoadImageFromSource:(unsigned long long)source networkRequestSummary:(id)summary;
- (void)imageView:(id)view didFailToLoadImageWithError:(id)error networkRequestSummary:(id)summary;
- (void)imageView:(id)view didUpdateLoadingState:(id)state;
- (void)imageView:(id)view didUpdateDownloadProgress:(double)progress;
- (void)imageView:(id)view willRequestImageWithURL:(id)url;
- (void)videoPlayer:(id)player willLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayer:(id)player didLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayerDidPlay:(id)play;
- (void)videoPlayer:(id)player didUpdateLoadingProgress:(double)progress;
- (void)videoPlayerDidPlayToEnd:(id)end;
- (void)videoPlayerItemTimeFullyLoaded:(id)loaded;
- (void)videoPlayerDidLoop:(id)loop;
- (void)videoPlayerWillPrepareAssetForPlayback:(id)playback;
- (void)videoPlayerBufferEmpty:(id)empty;
- (void)videoPlayer:(id)player didFailToPlaybackWithError:(id)error;
- (void)videoPlayer:(id)player didGenerateWarningWithError:(id)error;
- (void)videoPlayerDidPause:(id)pause reason:(long long)reason;
- (void)videoPlayer:(id)player didUpdatePlaybackProgress:(double)progress;
- (void)videoPlayer:(id)player didBeginSeekingToTime:(double)time;
- (void)videoPlayerDidFinishSeeking:(id)seeking;
- (void)videoPlayerDidUpdateAvailableAudioAutoTranslateLanguages:(id)languages;
@end

#endif /* IGProfilePictureImageView_h */
