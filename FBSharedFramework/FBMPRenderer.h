//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBMPRenderer_h
#define FBMPRenderer_h
@import Foundation;

#include "FBMPCompositeFilter.h"
#include "FBMPFilter-Protocol.h"
#include "FBMPPermissiveOutput-Protocol.h"
#include "FBVideoProcessor.h"

@class NSArray, NSMutableDictionary, NSString;
@protocol FBMPRendererDelegate, FBMPRendererOutputSizeProvider, FBMPRendererRotationProcessing, FBMultiCameraVideoCompositeStrategy, OS_dispatch_queue;

@interface FBMPRenderer : FBMPCompositeFilter<FBMPFilter, FBMPPermissiveOutput> {
  /* instance variables */
  unsigned long long _processingOptions;
  BOOL _processorPrepared;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _videoQueueLock;
  NSObject<OS_dispatch_queue> *_videoQueue;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _inputCropRect;
  BOOL _cropAspectFitUsingPreviewAspectRatio;
  BOOL _alwaysCropAspectFitUsingPreviewAspectRatio;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _multiCameraVideoLock;
  NSMutableDictionary *_multiCameraRenderResultByDevicePosition;
  BOOL _isCompositingMultiCameraVideoFrames;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _pendingCropRect;
  id /* block */ _pendingCropRectCompletion;
  NSObject<FBMPRendererRotationProcessing> *_rotationProcessor;
  NSObject<FBMPRendererRotationProcessing> *_rotationProcessorInverted;
}

@property (readonly, nonatomic) FBVideoProcessor *processor;
@property (readonly) BOOL multipleOutputsEnabled;
@property (readonly) BOOL overlayOutputEnabled;
@property (weak) NSObject<FBMPRendererOutputSizeProvider> *outputSizeProvider;
@property (weak, nonatomic) NSObject<FBMPRendererDelegate> *delegate;
@property (retain) NSObject<FBMultiCameraVideoCompositeStrategy> *multiCameraVideoCompositeStrategy;
@property (readonly, copy, nonatomic) NSArray *producerPorts;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)new;
+ (id)newWithConfiguration:(struct FBRendererConfiguration { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; int x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; })configuration;

/* instance methods */
- (void)updateInputCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect completion:(id /* block */)completion;
- (void)exportFilterConfigsWithCompletion:(id /* block */)completion;
- (void)clearCachedFilterResourcesWithCompletion:(id /* block */)completion;
- (void)performWithIGLDeviceOnVideoQueue:(id /* block */)queue;
- (void)sessionConnectedPort:(id)port context:(id)context;
- (void)sessionDisconnectedPort:(id)port context:(id)context;
- (void)sessionWillStart:(id)start;
- (void)sessionWillStop:(id)stop;
- (void)sessionWillStop:(id)stop stopAudio:(BOOL)audio;
- (void)invalidate;
- (BOOL)isCompositingMultiCameraFrames;
- (void)_setVideoQueue:(id)queue;
@end

#endif /* FBMPRenderer_h */
