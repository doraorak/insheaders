//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MBIHTTPExtensionContext_h
#define MBIHTTPExtensionContext_h
@import Foundation;

#include "MBICertPinning.h"
#include "NSURLSessionDataDelegate-Protocol.h"
#include "NSURLSessionDelegate-Protocol.h"
#include "NSURLSessionDownloadDelegate-Protocol.h"
#include "NSURLSessionTaskDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, NSURLSession;

@interface MBIHTTPExtensionContext : NSObject<NSURLSessionDataDelegate, NSURLSessionDelegate, NSURLSessionDownloadDelegate, NSURLSessionTaskDelegate> {
  /* instance variables */
  id /* block */ _backgroundTaskBeginHandler;
  id /* block */ _backgroundTaskEndHandler;
  NSMutableDictionary *_backgroundURLSessions;
  NSMutableDictionary *_backgroundURLSessionCompletionHandlers;
  MBICertPinning *_certPinning;
  NSURLSession *_dataURLSession;
  NSURLSession *_downloadURLSession;
  NSURLSession *_fireAndForgetURLSession;
  NSOperationQueue *_networkOperationQueue;
  NSURLSession *_uploadBackgroundURLSession;
  NSURLSession *_uploadForegroundURLSession;
  NSURLSession *_uploadURLStreamingSession;
  BOOL _allowBuildBackgroundSessions;
  NSMutableSet *_pendingBackgroundURLSessionIdentifiers;
  NSMutableDictionary *_taskIdentifierToAppBackgroundTaskMap_MAIN;
  NSMutableDictionary *_taskIdentifierToDataMap_NETWORK;
  NSMutableDictionary *_taskIdentifierToRequestContextMap_NETWORK;
  NSMutableDictionary *_taskIdentifierToTaskMap_NETWORK;
  NSMutableDictionary *_taskIdentifierToUploadProgressContextMap_NETWORK;
}

@property (readonly, weak, nonatomic) struct __MCINetworkSession * networkSession;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)handleEventsForBackgroundURLSession:(id)urlsession completionHandler:(id /* block */)handler;
- (void)reset;
- (void)URLSession:(id)urlsession didBecomeInvalidWithError:(id)error;
- (void)URLSession:(id)urlsession didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)urlsession;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession downloadTask:(id)task didFinishDownloadingToURL:(id)url;
- (void)URLSession:(id)urlsession downloadTask:(id)task didWriteData:(long long)data totalBytesWritten:(long long)written totalBytesExpectedToWrite:(long long)write;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
- (void)URLSession:(id)urlsession task:(id)task needNewBodyStream:(id /* block */)stream;
- (void)URLSession:(id)urlsession task:(id)task didFinishCollectingMetrics:(id)metrics;
- (void)URLSession:(id)urlsession task:(id)task didSendBodyData:(long long)data totalBytesSent:(long long)sent totalBytesExpectedToSend:(long long)send;
@end

#endif /* MBIHTTPExtensionContext_h */
