//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef METAHeadroomService_h
#define METAHeadroomService_h
@import Foundation;

#include "FBTimer.h"
#include "METAHeadroomListenerAnnouncer.h"

@protocol {deque<double, std::allocator<double>>="__map_"{__split_buffer<double *, std::allocator<double *>>="__first_"^^d"__begin_"^^d"__end_"^^d"__end_cap_"{__compressed_pair<double **, std::allocator<double *>>="__value_"^^d}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<double>>="__value_"Q}};

@interface METAHeadroomService : NSObject {
  /* instance variables */
  long long _windowSize;
  double _minHeadroomForHDR;
  METAHeadroomListenerAnnouncer *_announcer;
  FBTimer *_timer;
  struct deque<double, std::allocator<double>> { struct __split_buffer<double *, std::allocator<double *>> { double * *__first_; double * *__begin_; double * *__end_; struct __compressed_pair<double **, std::allocator<double *>> { double * *__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<double>> { unsigned long long __value_; } __size_; } _values;
  double _sum;
}

/* instance methods */
- (id)initWithPollingInterval:(double)interval windowSize:(long long)size minHeadroomForHDR:(double)hdr;
- (double)currentHeadroom;
- (double)averageHeadroom;
- (BOOL)shouldShowHDR;
- (id)announcer;
- (void)_sample;
@end

#endif /* METAHeadroomService_h */
