//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGSliderStickerCreationViewController_h
#define IGSliderStickerCreationViewController_h
@import Foundation;

#include "UIViewController.h"
#include "IGEmojiPickerTrayViewControllerDelegate-Protocol.h"
#include "IGKeyboardObserver.h"
#include "IGKeyboardObserverHideDelegate-Protocol.h"
#include "IGKeyboardObserverShowDelegate-Protocol.h"
#include "IGPassthroughView.h"
#include "IGSliderStickerView.h"
#include "IGStoryColorPaletteWheel.h"
#include "IGStoryStickerEditingViewControllerProtocol-Protocol.h"
#include "IGStoryTextEntryInputAccessoryView.h"
#include "IGTapButton.h"
#include "IGUserSession.h"

@class NSArray, NSString, UITapGestureRecognizer, UIView;
@protocol IGSliderStickerCreationViewControllerDataSource, IGSliderStickerCreationViewControllerDelegate;

@interface IGSliderStickerCreationViewController : UIViewController<IGKeyboardObserverHideDelegate, IGKeyboardObserverShowDelegate, IGEmojiPickerTrayViewControllerDelegate, IGStoryStickerEditingViewControllerProtocol> {
  /* instance variables */
  IGSliderStickerView *_sliderStickerView;
  IGUserSession *_userSession;
  NSString *_module;
  IGPassthroughView *_contentWrapperView;
  UIView *_dimmingView;
  IGTapButton *_doneButton;
  UITapGestureRecognizer *_tapGesture;
  IGStoryTextEntryInputAccessoryView *_textInputAccessoryView;
  IGStoryColorPaletteWheel *_colorWheel;
  IGKeyboardObserver *_keyboardObserver;
  BOOL _stickerWasNewlyCreated;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _contentRegion;
  double _contentRegionCornerRadius;
  BOOL _sliderStickerDimmed;
}

@property (weak, nonatomic) NSObject<IGSliderStickerCreationViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<IGSliderStickerCreationViewControllerDataSource> *dataSource;
@property (nonatomic) BOOL isFromSundial;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *backgroundViews;
@property (readonly, nonatomic) UIView *editableStickerView;
@property (readonly, nonatomic) double editableStickerScaleWhileEditing;
@property (readonly, nonatomic) BOOL editableStickerViewIsNewlyCreated;
@property (readonly, nonatomic) BOOL shouldDisableZoomTransitionOnEditStart;
@property (readonly, nonatomic) BOOL shouldDiscardStickerOnDismissal;
@property (readonly, nonatomic) NSString *stickerEditSessionLoggingId;
@optional
@property (readonly, nonatomic) NSArray *secondaryEditableStickerViews;

/* instance methods */
- (id)initWithSliderStickerView:(id)view userSession:(id)session module:(id)module contentRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })region contentRegionCornerRadius:(double)radius;
- (void)dealloc;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidLayoutSubviews;
- (void)_colorWheelChanged:(id)changed;
- (void)_didTapBackground:(id)background;
- (void)_didTapDoneButton:(id)button;
- (void)sliderStickerViewDidChangeText:(id)text;
- (void)sliderStickerViewDidBeginSlidingEmoji:(id)emoji;
- (void)sliderStickerView:(id)view didEndSlidingEmojiWithValue:(double)value inStickerViewMode:(long long)mode;
- (void)sliderStickerViewDidReceiveTapOnEmoji:(id)emoji;
- (void)keyboardObserver:(id)observer keyboardWillShowWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidShow:(id)show;
- (void)keyboardObserver:(id)observer keyboardWillHideWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidHide:(id)hide;
- (void)emojiSuggestionsView:(id)view didSelectEmoji:(id)emoji;
- (void)emojiSuggestionsViewDidSelectAllEmojisButton:(id)button;
- (void)emojiPickerTrayViewController:(id)controller didSelectEmoji:(id)emoji fromEmojiView:(id)view fromSearch:(BOOL)search;
- (void)emojiPickerTrayViewControllerDidTapSearchCancel:(id)cancel;
- (void)emojiPickerTrayViewController:(id)controller didTapDoneForEmotionModerationWithSelectedEmojis:(id)emojis;
- (BOOL)emojiPickerTrayViewController:(id)controller shouldFilterOutEmoji:(id)emoji;
- (void)emojiPickerTrayViewController:(id)controller didTapActionButtonForType:(unsigned long long)type actionButton:(id)button;
- (BOOL)canRespondToGesture:(id)gesture;
@end

#endif /* IGSliderStickerCreationViewController_h */
