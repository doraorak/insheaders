//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFCAMetalLayer_h
#define FNFCAMetalLayer_h
@import Foundation;

#include "CAMetalLayer.h"
#include "FNFPlayerDisplayLayer-Protocol.h"
#include "MTLCommandQueue-Protocol.h"

@class CIContext, NSString;
@protocol FNFPlayerDisplayLayerDelegate;

@interface FNFCAMetalLayer : CAMetalLayer<FNFPlayerDisplayLayer> {
  /* instance variables */
  BOOL _isReadyForDisplay;
  NSObject<MTLCommandQueue> *_commandQueue;
  CIContext *_ciContext;
  double _scale;
  struct { BOOL allowPlaybackWhenInactive; BOOL allowInactivePlaybackWithoutDrawing; BOOL avsbdplFlushOnMainThread; int decompressedBufferSize; int sampleBufferRequestThresholdVP9; int sampleBufferRequestThresholdAV1; BOOL displayFirstFrame; struct FNFDecompressionConfig { BOOL debuggingErrorEnabled; BOOL badFrameFix; unsigned int recoverDecodeFrameFailureTimes; unsigned int maxGopStoredFrameCount; unsigned int av1NumberOfDecoderThreads; unsigned int av1MaxFrameDelay; BOOL shouldReuseDav1dDecoder; unsigned int numOfPrewarmedDav1dDecoders; unsigned int decodingSlownessDetectionPeriod; unsigned int decodingSlownessDetectionThreshold; double decodingSlownessTimeLimit; BOOL enableAV1DecodingWithVT; BOOL enableDecompressionSessionTargetGlobalQueue; BOOL disableVTAsynchronousDecompression; BOOL disableVT1xRealTimePlayback; BOOL disableVTTemporalProcessing; BOOL enableAsyncVTDecompressionSessionCreation; BOOL disableAtomicThreadFence; } decompressionConfig; BOOL shouldDropStaleFrame; BOOL shouldUseFirstFrameCheck; int staleFrameThreshold; BOOL enableOffMainThreadRendering; int playThroughErrorRetrialTimes; BOOL useYUVCoreImageOnMetal; BOOL disableRenderingThreadBackgroundSuspension; BOOL enableInactivePlaybackWithoutDrawingBackgroundDisplayLinkPauseFix; BOOL enableSampleBufferRenderer; BOOL enableControlTimebaseUpdatesInAVSBDL; BOOL enableGetCurrentTimeOffMainThread; BOOL hdrColorConvertInRenderingThread; } _config;
  BOOL _enableHDR;
}

@property (weak, nonatomic) NSObject<FNFPlayerDisplayLayerDelegate> *displayLayerDelegate;
@property (nonatomic) BOOL layoutChanged;
@property (readonly, nonatomic) BOOL readyForDisplay;
@property (copy, nonatomic) NSString *videoGravity;
@property (nonatomic) BOOL lanczosUpscalingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConfig:(struct { BOOL x0; BOOL x1; BOOL x2; int x3; int x4; int x5; BOOL x6; struct FNFDecompressionConfig { BOOL x0; BOOL x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; BOOL x6; unsigned int x7; unsigned int x8; unsigned int x9; double x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; } x7; BOOL x8; BOOL x9; int x10; BOOL x11; int x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; })config device:(id)device;
- (void)layoutSublayers;
- (id)_resizeImage:(id)image withFrameWidth:(double)width withFrameHeight:(double)height;
- (void)_enableHDR:(BOOL)hdr;
- (BOOL)displayPixelBuffer:(struct __CVBuffer *)buffer framePts:(struct { long long x0; int x1; unsigned int x2; long long x3; })pts duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (void)reset;
- (void)flush;
- (BOOL)isReadyForDisplay;
- (BOOL)supportsHDR;
- (void)_updateReadyForDisplay:(BOOL)display;
@end

#endif /* FNFCAMetalLayer_h */
