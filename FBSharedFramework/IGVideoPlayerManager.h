//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGVideoPlayerManager_h
#define IGVideoPlayerManager_h
@import Foundation;

#include "AVPictureInPictureControllerDelegate-Protocol.h"
#include "IGFNFVideoPlayable-Protocol.h"
#include "IGFNFVideoPlayerListener-Protocol.h"
#include "IGFNFVideoView.h"
#include "IGUserSession.h"
#include "IGVideoPlayerIndexProvider-Protocol.h"
#include "IGVideoPlayerManaging-Protocol.h"
#include "IGVideoPlayerPictureInPictureCoordinator-Protocol.h"
#include "IGVideoPlayerPreloadPool.h"
#include "_TtC19IGVideoPlayerWarmup26IGVideoPlayerWarmupManager.h"

@class AVPictureInPictureController, NSHashTable, NSMutableSet, NSString;

@interface IGVideoPlayerManager : NSObject<IGFNFVideoPlayerListener, IGVideoPlayerManaging, IGVideoPlayerIndexProvider, IGVideoPlayerPictureInPictureCoordinator, AVPictureInPictureControllerDelegate> {
  /* instance variables */
  IGUserSession *_userSession;
  long long _inUsePlayerCount;
  IGVideoPlayerPreloadPool *_storyPlayerPreloadPool;
  unsigned long long _currentPlayerIndex;
  AVPictureInPictureController *_pipController;
  NSObject<IGFNFVideoPlayable> *_pipCandidatePlayer;
  NSObject<IGFNFVideoPlayable> *_pipPlayer;
  IGFNFVideoView *_pipCandidateVideoView;
  _TtC19IGVideoPlayerWarmup26IGVideoPlayerWarmupManager *_warmupsManager;
  BOOL _isWarmupSuspensionOnLoadEnabled;
  NSHashTable *_playersWaitingForInitialLoad;
  BOOL _isModernPreloadEnabled;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long playerInUseCount;
@property (retain, nonatomic) NSMutableSet *trackedModernPreloadStoryVideoPlayerPools;

/* instance methods */
- (id)initWithUserSession:(id)session;
- (id)dequeueReusablePlayer:(id)player config:(id)config;
- (id)dequeueReusablePlayerForPlayerMode:(long long)mode video:(id)video config:(id)config;
- (id)createAudioPlayer:(long long)player config:(id)config;
- (id)_createIGFNFVideoPlayer:(long long)player video:(id)video config:(id)config;
- (void)updateWarmupManagerSuspensionState;
- (BOOL)canPreloadStoryVideo:(id)video;
- (void)preloadForStoryVideoConfig:(id)config video:(id)video;
- (void)discardPreloadedStoryVideoPlayerExcludingVideos:(id)videos;
- (void)discardAllPreloadedStoryPlayers;
- (BOOL)hasStartedPreloadingStoryPlayerForVideo:(id)video;
- (id)preloadedStoryPlayerForVideo:(id)video;
- (unsigned long long)currentPlayerIndexOfPlayersThatHaveRequestedPlaying;
- (void)notifyPlayerDeallocation;
- (void)updatePictureInPictureControllerWithContentSource:(id)source videoPlayer:(id)player videoSize:(struct CGSize { double x0; double x1; })size videoView:(id)view;
- (BOOL)isPlayerInPictureInPictureMode:(id)mode;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)picture;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)picture;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)picture;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)picture;
- (void)pictureInPictureController:(id)controller failedToStartPictureInPictureWithError:(id)error;
- (void)videoPlayer:(id)player willLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayer:(id)player didLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayerDidPlay:(id)play;
- (void)videoPlayer:(id)player didFailToPlaybackWithError:(id)error;
- (void)_didReceiveMemoryWarning:(id)warning;
@end

#endif /* IGVideoPlayerManager_h */
