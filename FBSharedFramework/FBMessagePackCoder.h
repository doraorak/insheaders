//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBMessagePackCoder_h
#define FBMessagePackCoder_h
@import Foundation;

#include "NSCoder.h"

@class NSData;
@protocol {FBMPCEncodingObjectContext="_encodedObjects"{vector<FBMPCEncodingObjectContext::EncodedObjectRecord, std::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>>="__begin_"^{EncodedObjectRecord}"__end_"^{EncodedObjectRecord}"__end_cap_"{__compressed_pair<FBMPCEncodingObjectContext::EncodedObjectRecord *, std::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>>="__value_"^{EncodedObjectRecord}}}}, {vector<FBMPCDecodingObjectContext, std::allocator<FBMPCDecodingObjectContext>>="__begin_"^{FBMPCDecodingObjectContext}"__end_"^{FBMPCDecodingObjectContext}"__end_cap_"{__compressed_pair<FBMPCDecodingObjectContext *, std::allocator<FBMPCDecodingObjectContext>>="__value_"^{FBMPCDecodingObjectContext}}}, {vector<FBMPCEncodingObjectContext *, std::allocator<FBMPCEncodingObjectContext *>>="__begin_"^^{FBMPCEncodingObjectContext}"__end_"^^{FBMPCEncodingObjectContext}"__end_cap_"{__compressed_pair<FBMPCEncodingObjectContext **, std::allocator<FBMPCEncodingObjectContext *>>="__value_"^^{FBMPCEncodingObjectContext}}};

@interface FBMessagePackCoder : NSCoder {
  /* instance variables */
  struct vector<FBMPCEncodingObjectContext *, std::allocator<FBMPCEncodingObjectContext *>> { struct FBMPCEncodingObjectContext * *__begin_; struct FBMPCEncodingObjectContext * *__end_; struct __compressed_pair<FBMPCEncodingObjectContext **, std::allocator<FBMPCEncodingObjectContext *>> { struct FBMPCEncodingObjectContext * *__value_; } __end_cap_; } _encodingContextStack;
  struct vector<FBMPCDecodingObjectContext, std::allocator<FBMPCDecodingObjectContext>> { struct FBMPCDecodingObjectContext *__begin_; struct FBMPCDecodingObjectContext *__end_; struct __compressed_pair<FBMPCDecodingObjectContext *, std::allocator<FBMPCDecodingObjectContext>> { struct FBMPCDecodingObjectContext *__value_; } __end_cap_; } _decodingObjectStack;
  struct MessagePackParseState { struct FBNSStringCache { struct FBNSStringCacheItem *items; unsigned int prng_lfsr; unsigned char x[1024] age; } cache; } _decodingParseState;
  id _rootObject;
  struct FBMPCEncodingObjectContext { struct vector<FBMPCEncodingObjectContext::EncodedObjectRecord, std::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> { struct EncodedObjectRecord *__begin_; struct EncodedObjectRecord *__end_; struct __compressed_pair<FBMPCEncodingObjectContext::EncodedObjectRecord *, std::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> { struct EncodedObjectRecord *__value_; } __end_cap_; } _encodedObjects; } _encodingRootContext;
  unsigned int _systemVersion;
  BOOL _useParseState;
}

@property (copy, nonatomic) NSData *data;

/* class methods */
+ (id)packedDataWithRootObject:(id)object;
+ (id)unpackObjectWithData:(id)data;
+ (id)unpackObjectWithData:(id)data error:(id *)error;

/* instance methods */
- (BOOL)allowsKeyedCoding;
- (id)initWithUseParseState:(BOOL)state;
- (id)init;
- (void)dealloc;
- (void)encodeValueOfObjCType:(const char *)ctype at:(const void *)at;
- (void)encodeBytes:(const void *)bytes length:(unsigned long long)length;
- (void)encodeBytes:(const char *)bytes length:(unsigned long long)length forKey:(id)key;
- (void)encodeBytesPtr:(struct unique_ptr<unsigned char[], std::default_delete<unsigned char[]>> { struct __compressed_pair<unsigned char *, std::default_delete<unsigned char[]>> { char * x0; } x0; })ptr length:(unsigned long long)length forKey:(id)key;
- (void)encodeDataObject:(id)object;
- (BOOL)containsValueForKey:(id)key;
- (id)decodeDataObject;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)length;
- (const char *)decodeBytesForKey:(id)key returnedLength:(unsigned long long *)length;
- (void)decodeValueOfObjCType:(const char *)ctype at:(void *)at;
- (void)encodeBool:(BOOL)bool forKey:(id)key;
- (void)encodeDouble:(double)double forKey:(id)key;
- (void)encodeFloat:(float)float forKey:(id)key;
- (void)encodeInt:(int)int forKey:(id)key;
- (void)encodeInteger:(long long)integer forKey:(id)key;
- (void)encodeInt32:(int)int32 forKey:(id)key;
- (void)encodeInt64:(long long)int64 forKey:(id)key;
- (void)encodeRootObject:(id)object;
- (void)encodeObject:(id)object forKey:(id)key;
- (id)decodeObjectForKey:(id)key;
- (BOOL)decodeBoolForKey:(id)key;
- (double)decodeDoubleForKey:(id)key;
- (float)decodeFloatForKey:(id)key;
- (int)decodeInt32ForKey:(id)key;
- (long long)decodeInt64ForKey:(id)key;
- (long long)decodeIntegerForKey:(id)key;
- (int)decodeIntForKey:(id)key;
- (void)finishEncoding;
- (unsigned int)systemVersion;
- (long long)versionForClassName:(id)name;
- (id)packedDataWithRootObject:(id)object;
- (id)unpackObjectWithData:(id)data;
- (id)unpackObjectWithData:(id)data error:(id *)error;
- (Class)classOfRootObjectInData:(id)data;
@end

#endif /* FBMessagePackCoder_h */
