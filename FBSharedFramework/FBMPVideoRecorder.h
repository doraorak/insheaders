//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBMPVideoRecorder_h
#define FBMPVideoRecorder_h
@import Foundation;

#include "FBMPBaseConsumerPort.h"
#include "FBMPPermissiveOutput-Protocol.h"
#include "FBMPVideoClipRecorder.h"

@class NSArray, NSMutableArray, NSString, NSURL;
@protocol FBMPConsumerPort, FBMPVideoRecorderDelegate;

@interface FBMPVideoRecorder : NSObject<FBMPPermissiveOutput> {
  /* instance variables */
  NSURL *_directoryPathForVideoStorage;
  struct CGSize { double width; double height; } _bufferSize;
  unsigned int _pixelFormatType;
  FBMPBaseConsumerPort *_videoConsumerPort;
}

@property long long state;
@property struct FBMPVideoRecorderConfiguration { id x0; double x1; double x2; long long x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; id /* block */ x9; id /* block */ x10; struct CGSize { double x0; double x1; } x11; struct { long long x0; int x1; unsigned int x2; long long x3; } x12; } recorderConfig;
@property (retain) FBMPVideoClipRecorder *clipRecorder;
@property (retain) NSMutableArray *multiVideoClipRecorders;
@property (copy) id /* block */ startRecordingCompletion;
@property (weak, nonatomic) NSObject<FBMPVideoRecorderDelegate> *delegate;
@property (readonly, nonatomic) NSObject<FBMPConsumerPort> *audioConsumerPort;
@property (retain, nonatomic) NSArray *captureDevices;
@property (nonatomic) BOOL multiVideoRecordingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } recordingDuration;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } firstRecordedVideoFrameSourceTime;

/* instance methods */
- (id)initWithDirectoryPathForVideoStorage:(id)storage renderMode:(unsigned long long)mode;
- (id)initWithDirectoryPathForVideoStorage:(id)storage;
- (id)initWithDirectoryPathForVideoStorage:(id)storage uniqueId:(unsigned long long)id;
- (id)initWithDirectoryPathForVideoStorage:(id)storage renderMode:(unsigned long long)mode uniqueId:(unsigned long long)id;
- (id)consumerPorts;
- (BOOL)allowsConnectionsWithConsumerPortMapping:(id)mapping;
- (BOOL)handleVideoSampleBuffer:(struct opaqueCMSampleBuffer *)buffer deviceSource:(long long)source;
- (BOOL)_recordVideoSampleBuffer:(struct opaqueCMSampleBuffer *)buffer deviceSource:(long long)source;
- (void)handleAudioSampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (double)videoBitratePerPixel;
- (BOOL)prepareRecordingWithConfiguration:(struct FBMPVideoRecorderConfiguration { id x0; double x1; double x2; long long x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; id /* block */ x9; id /* block */ x10; struct CGSize { double x0; double x1; } x11; struct { long long x0; int x1; unsigned int x2; long long x3; } x12; })configuration;
- (BOOL)startRecordingWithAudioTimeConverter:(id /* block */)converter startCompletion:(id /* block */)completion;
- (BOOL)startRecordingWithCompletion:(id /* block */)completion;
- (id)_createClipVideoRecorder;
- (void)_prepareClipRecordersVideoInput:(id)input videoSize:(struct CGSize { double x0; double x1; })size transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (void)stopRecordingWithCompletionHandler:(id /* block */)handler callbackQueue:(id)queue;
- (void)stopMultiVideoRecordingWithCompletionHandler:(id /* block */)handler callbackQueue:(id)queue;
- (void)cancelRecording;
- (void)clipRecorderDidStartRecordingWithTimeStamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })stamp;
- (void)clipRecorderDidFinishRecordingWithMaximumDurationWithAsset:(id)asset;
@end

#endif /* FBMPVideoRecorder_h */
