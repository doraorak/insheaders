//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBOpenGLFilter_h
#define FBOpenGLFilter_h
@import Foundation;

#include "FBFilter.h"
#include "FBGLContext.h"
#include "NSObject-Protocol.h"

@class NSBundle, NSString;
@protocol {VertexInputStateDesc="numAttributes"Q"attributes"[24{VertexAttribute="bufferIndex"Q"format"i"offset"Q"name"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"location"i}]"numInputBindings"Q"inputBindings"[128{VertexInputBinding="stride"Q"sampleFunction"i"sampleRate"Q}]}, {shared_ptr<igl::IBuffer>="__ptr_"^{IBuffer}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::ICommandQueue>="__ptr_"^{ICommandQueue}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::IDevice>="__ptr_"^{IDevice}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::ISamplerState>="__ptr_"^{ISamplerState}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<iglu::ManagedUniformBuffer>="__ptr_"^{ManagedUniformBuffer}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<iglu::filtergraph::MeshNode, std::default_delete<iglu::filtergraph::MeshNode>>="__ptr_"{__compressed_pair<iglu::filtergraph::MeshNode *, std::default_delete<iglu::filtergraph::MeshNode>>="__value_"^{MeshNode}}};

@interface FBOpenGLFilter : FBFilter<NSObject> {
  /* instance variables */
  FBGLContext *_context;
  struct shared_ptr<igl::IBuffer> { struct IBuffer *__ptr_; struct __shared_weak_count *__cntrl_; } _vb0;
  struct shared_ptr<igl::IBuffer> { struct IBuffer *__ptr_; struct __shared_weak_count *__cntrl_; } _ib0;
  struct VertexInputStateDesc { unsigned long long numAttributes; Q]})}}}"location"i} x[24{VertexAttribute="bufferIndex"Q"format"i"offset"Q"name"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3] attributes; unsigned long long numInputBindings; struct VertexInputBinding { unsigned long long stride; int sampleFunction; unsigned long long sampleRate; } x[128] inputBindings; } _vertexInputStateDesc0;
  struct shared_ptr<igl::ISamplerState> { struct ISamplerState *__ptr_; struct __shared_weak_count *__cntrl_; } _samplerState;
  unsigned char _textureFormatCapabilities;
  struct shared_ptr<iglu::ManagedUniformBuffer> { struct ManagedUniformBuffer *__ptr_; struct __shared_weak_count *__cntrl_; } _uniformBuffer;
  struct FilterUniformUpdate { void *data; unsigned long long size; unsigned long long offset; } _filterUniformUpdate;
  struct BlendFunc { BOOL blendEnabled; unsigned char rgbBlendOp; unsigned char alphaBlendOp; unsigned char srcRGBBlendFactor; unsigned char srcAlphaBlendFactor; unsigned char dstRGBBlendFactor; unsigned char dstAlphaBlendFactor; } _blendFunc;
  BOOL _shouldUpdateBlendFunc;
  struct unique_ptr<iglu::filtergraph::MeshNode, std::default_delete<iglu::filtergraph::MeshNode>> { struct __compressed_pair<iglu::filtergraph::MeshNode *, std::default_delete<iglu::filtergraph::MeshNode>> { struct MeshNode *__value_; } __ptr_; } _filter;
  struct unique_ptr<iglu::filtergraph::MeshNode, std::default_delete<iglu::filtergraph::MeshNode>> { struct __compressed_pair<iglu::filtergraph::MeshNode *, std::default_delete<iglu::filtergraph::MeshNode>> { struct MeshNode *__value_; } __ptr_; } _filterUV;
  BOOL _preparedRenderPipeline;
  BOOL _lazyCreateOpenGLProgram;
  struct shared_ptr<igl::IDevice> { struct IDevice *__ptr_; struct __shared_weak_count *__cntrl_; } _device;
  struct shared_ptr<igl::ICommandQueue> { struct ICommandQueue *__ptr_; struct __shared_weak_count *__cntrl_; } _commandQueue;
}

@property (nonatomic) unsigned int blendAlphaInfo;
@property (retain, nonatomic) NSBundle *assetBundle;
@property (nonatomic) BOOL shouldUpdateUniforms;
@property (nonatomic) BOOL shouldLoadColorAttachment;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scissorRect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)setExperimentManager:(id)manager;
- (void)setFilterContext:(id)context;
- (id)fullVertexShader;
- (id)fullFragmentShader;
- (id)fullVertexShaderUV;
- (id)fullFragmentShaderUV;
- (void)finalizeRendering;
- (id)textureNamed:(id)named;
- (id)samplers;
- (BOOL)render:(id)render to:(id)to time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (BOOL)iglRender:(id)render to:(id)to time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (BOOL)render:(id)render to:(id)to program:(id)program time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (BOOL)render:(id)render to:(id)to program:(id)program time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time iglActivations:(struct FBIGLActivations { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; })activations;
- (BOOL)render:(id)render to:(id)to time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time iglActivations:(struct FBIGLActivations { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; })activations;
- (const char *)metalVertexShader;
- (const char *)metalFragShader;
- (const char *)metalVertexShaderUV;
- (const char *)metalFragShaderUV;
- (struct shared_ptr<igl::IBuffer> { struct IBuffer * x0; struct __shared_weak_count * x1; })getVertexBufferObject;
- (struct VertexInputStateDesc { unsigned long long x0; Q]})}}}i} x1[24{VertexAttribute=QiQ{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3] unsigned long long x2; struct Vertex3InputBinding { unsigned long long x0; int x1; unsigned long long x2; } x[128] })getVertexInputStateDesc;
- (struct shared_ptr<iglu::ManagedUniformBuffer> { struct ManagedUniformBuffer * x0; struct __shared_weak_count * x1; })getUniformBuffer;
- (struct FilterUniformUpdate { void * x0; unsigned long long x1; unsigned long long x2; })prepareFilterUniformUpdate;
- (BOOL)iglRender:(id)render to:(id)to;
@end

#endif /* FBOpenGLFilter_h */
