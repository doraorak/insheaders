//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryMediaCompositionEditingViewController_h
#define IGStoryMediaCompositionEditingViewController_h
@import Foundation;

#include "IGViewController.h"
#include "IGAPIBrandedContentGatingInfo.h"
#include "IGAPIGenAIToolInfoDict.h"
#include "IGAPIProductDetailsProductItemDict.h"
#include "IGAsyncTask.h"
#include "IGAudioStatusChangeListener-Protocol.h"
#include "IGAvatarStoryReshareStickerHelper.h"
#include "IGBrandedContentMedia.h"
#include "IGGLKSession.h"
#include "IGIOSLink.h"
#include "IGImageView.h"
#include "IGImageViewDelegate-Protocol.h"
#include "IGInstaPalMotionManager.h"
#include "IGMediaTextButton.h"
#include "IGPartialModalSheetListener-Protocol.h"
#include "IGPartialModalSheetViewController.h"
#include "IGPasteAlertController.h"
#include "IGPostCaptureARController.h"
#include "IGPostCaptureARControllerDelegate-Protocol.h"
#include "IGSecretStickerOverlayBottomDisclaimerView.h"
#include "IGSecretStickerOverlayView.h"
#include "IGSecretStickerView.h"
#include "IGStickerGalleryViewControllerDelegate-Protocol.h"
#include "IGStickerLayeringViewControllerDelegate-Protocol.h"
#include "IGStoryColorPickingControlsViewController.h"
#include "IGStoryColorProvider-Protocol.h"
#include "IGStoryCreationDrawingViewController.h"
#include "IGStoryEdgeTapNavigationView.h"
#include "IGStoryGroupThreadMentionsLogger.h"
#include "IGStoryMediaAsset-Protocol.h"
#include "IGStoryMediaCompositionAssetFetcher.h"
#include "IGStoryMediaCompositionEditingViewControlling-Protocol.h"
#include "IGStoryMediaCompositionState.h"
#include "IGStoryMediaCompositionStickerCreationController.h"
#include "IGStoryMediaCompositionStickerCreationControllerDelegate-Protocol.h"
#include "IGStoryMediaCompositionView.h"
#include "IGStoryMediaCompositionViewDelegate-Protocol.h"
#include "IGStoryMusicBrowserViewControllerDelegate-Protocol.h"
#include "IGStoryPostCaptureAvatarStickersMemojiHandler.h"
#include "IGStoryQuickCaptionsModel.h"
#include "IGStoryStickerDataSource.h"
#include "IGStoryStickerGestureController.h"
#include "IGStoryStickerGestureControllerDataSource-Protocol.h"
#include "IGStoryStickerGestureControllerDelegate-Protocol.h"
#include "IGStoryStickerTrayStateModel.h"
#include "IGStoryStickerTrayViewControllerDelegate-Protocol.h"
#include "IGStoryStickerUserFlowLogger.h"
#include "IGStoryTextEntryViewControllerDelegate-Protocol.h"
#include "IGStoryTrimmingViewController.h"
#include "IGStrictUserFlowLogger.h"
#include "IGSundialCreationPromptPageViewController.h"
#include "IGTextEditorTextToSpeechConfiguration.h"
#include "IGTooltipView.h"
#include "IGUserSession.h"
#include "METAAnimationCurve.h"
#include "METAAudioTrack.h"
#include "METAMediaEffect-Protocol.h"
#include "_TtC17IGAvatarStoriesUI31IGAvatarStoryReshareTooltipView.h"
#include "_TtC17IGAvatarStoriesUI39IGAvatarStoryReshareBubbleTooltipHelper.h"
#include "_TtC27IGStoryPostCaptureTemplates36IGStoryTemplateEditingViewController.h"
#include "_TtP19IGMagicModProtocols32IGMagicModViewControllerDelegate_-Protocol.h"
#include "_TtP27IGStoryPostCaptureTemplates44IGStoryTemplateEditingViewControllerDelegate_-Protocol.h"
#include "_TtP31IGCutoutStickerCreationDelegate31IGCutoutStickerCreationDelegate_-Protocol.h"

@class AVAsset, NSArray, NSHashTable, NSMutableArray, NSMutableDictionary, NSString, NSTimer, UIColor, UIImage, UIImpactFeedbackGenerator, UILabel, UISwipeGestureRecognizer, UIViewController;
@protocol IGKaraokeCaptionStickerCombinationDataSourceAndDelegate, IGStoryMediaCompositionEditingViewControllerDelegate, IGStoryMediaCompositionEditingViewControllerEditingEventsDelegate, IGStoryMediaCompositionStickerTrayDelegate, IGViewerOverlayPreviewProvider, UIView<IGStoryMediaCompositionEditingControlsOverlayViewProtocol, UIView<IGViewerOverlayPreviewView, UIViewController<IGGestureHandler, UIViewController<IGStoryStickerEditingViewControllerProtocol;

@interface IGStoryMediaCompositionEditingViewController : IGViewController<IGAudioStatusChangeListener, IGPartialModalSheetListener, IGStoryMusicBrowserViewControllerDelegate, IGStoryStickerTrayViewControllerDelegate, IGStoryStickerGestureControllerDelegate, IGStoryStickerGestureControllerDataSource, IGStoryTextEntryViewControllerDelegate, IGStoryMediaCompositionViewDelegate, IGPostCaptureARControllerDelegate, IGImageViewDelegate, IGStoryMediaCompositionStickerCreationControllerDelegate, IGStickerGalleryViewControllerDelegate, _TtP27IGStoryPostCaptureTemplates44IGStoryTemplateEditingViewControllerDelegate_, _TtP19IGMagicModProtocols32IGMagicModViewControllerDelegate_, IGStickerLayeringViewControllerDelegate, _TtP31IGCutoutStickerCreationDelegate31IGCutoutStickerCreationDelegate_, IGStoryMediaCompositionEditingViewControlling, IGStoryColorProvider> {
  /* instance variables */
  BOOL _supportHDR;
  BOOL _enableNewColorFilters;
  double _defaultColorFiltersStrength;
  double _edrMultiplier;
  IGUserSession *_userSession;
  BOOL _shouldUpdateThumbnailOnAssetChange;
  NSMutableArray *_cachedMediaCompositions;
  NSMutableArray *_mediaCompositionThumbnailViews;
  IGStoryEdgeTapNavigationView *_edgeTapNavigationView;
  IGStoryMediaCompositionAssetFetcher *_assetFetcher;
  BOOL _isFetchingAsset;
  IGStoryMediaCompositionState *_compositionRequiringFetch;
  IGStoryStickerDataSource *_stickerTrayDataSource;
  IGStoryStickerTrayStateModel *_previousStickerTrayState;
  UIImpactFeedbackGenerator *_stickerPinningFeedbackGenerator;
  IGPasteAlertController *_pasteAlertController;
  IGStoryCreationDrawingViewController *_drawingViewController;
  UIImage *_mediaCompositionSnapshotForEyedropperColorPicker;
  IGStoryTrimmingViewController *_videoTrimmingViewController;
  UIViewController<IGStoryStickerEditingViewControllerProtocol> *_presentedStickerEditingViewController;
  UIViewController<IGGestureHandler> *_musicStickerEditor;
  NSArray *_originalCompositions;
  IGAsyncTask *_delayedThumbnailUpdateTaskForCurrentComposition;
  UIColor *_selectedTextColor;
  double _selectedTextFontSize;
  NSMutableDictionary *_fontSelectorViewItemDrawnImages;
  IGImageView *_suggestedStickerImageLoadingImageView;
  IGStoryStickerUserFlowLogger *_storyStickerUserFlowLogger;
  IGAvatarStoryReshareStickerHelper *_avatarReshareStickerHelper;
  _TtC17IGAvatarStoriesUI31IGAvatarStoryReshareTooltipView *_avatarReshareTooltip;
  IGTooltipView *_avatarReshareBubbleTooltip;
  _TtC17IGAvatarStoriesUI39IGAvatarStoryReshareBubbleTooltipHelper *_avatarReshareBubbleTooltipHelper;
  NSTimer *_textEditNUXTimer;
  BOOL _textEditNUXShown;
  BOOL _wasMusicAvatarDeattachedInCurrentEditingSession;
  unsigned long long _postCaptureLoadInstanceId;
  IGSundialCreationPromptPageViewController *_promptPage;
  IGPartialModalSheetViewController *_promptPageHalfSheet;
  IGTooltipView *_immersiveReshareAttributionTooltip;
  IGStrictUserFlowLogger *_strictUserFlowLogger;
  BOOL _shouldNotifyDelegateOfAddedTimedObject;
  IGStoryPostCaptureAvatarStickersMemojiHandler *_avatarMemojiHandler;
  unsigned long long _editBoomerangUserFlowInstanceId;
  IGStoryColorPickingControlsViewController *_colorPickingControlsViewController;
  IGStoryQuickCaptionsModel *_storyQuickCaption;
  BOOL _isTemplateEditingViewControllerShown;
  _TtC27IGStoryPostCaptureTemplates36IGStoryTemplateEditingViewController *_templateEditingViewController;
  NSHashTable *_lockedStickers;
  IGTooltipView *_stickerLayeringTooltip;
  BOOL _stickerLayeringNuxShown;
  UIViewController *_sharedListCreationViewController;
  UIViewController *_currentMagicModViewController;
  IGMediaTextButton *_imagineTemplatesAddTextButton;
  int _previousStickerCount;
  BOOL _didTryShowAdSettingsTooltip;
  NSString *_cutoutStickerLoadingToastId;
  UIImage *_cutoutStickerToastImage;
  UILabel *_immersiveReshareEducationLabel;
  IGSecretStickerOverlayView *_secretStoryOverlayView;
  IGSecretStickerView *_secretStickerView;
  IGSecretStickerOverlayBottomDisclaimerView *_secretStickerOverlayBottomDisclaimerView;
  BOOL _mediaCompositionRegionOverwritten;
  BOOL _didPeekAYTemplatesStickerTray;
  BOOL _AYTemplatesStickerTrayShouldScrollToTop;
  BOOL _shouldAutoToggleGroupMentionThreadSwitch;
  IGStoryGroupThreadMentionsLogger *_groupThreadMentionsLogger;
  IGInstaPalMotionManager *_instaPalMotionManager;
  BOOL _didShowCannotCustomizePinnedStickerToast;
}

@property (nonatomic) long long currentMediaCompositionIndex;
@property (nonatomic) BOOL viewerHeaderPreviewVisible;
@property (nonatomic) BOOL viewerFooterPreviewVisible;
@property (retain, nonatomic) UIView<IGViewerOverlayPreviewView> *viewerOverlayPreviewView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<IGStoryMediaCompositionEditingViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<IGStoryMediaCompositionEditingViewControllerEditingEventsDelegate> *editingEventsDelegate;
@property (retain, nonatomic) UIView<IGStoryMediaCompositionEditingControlsOverlayViewProtocol> *editingControlsOverlayView;
@property (weak, nonatomic) NSObject<IGStoryMediaCompositionStickerTrayDelegate> *stickerTrayDelegate;
@property (readonly, nonatomic) IGGLKSession *igglkSession;
@property (retain, nonatomic) NSObject<IGStoryMediaAsset> *asset;
@property (nonatomic) double mediaScale;
@property (nonatomic) struct METAMediaTransform { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; } mediaTransform;
@property (nonatomic) struct METAMediaTransform { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; } delayedMediaTransform;
@property (retain, nonatomic) NSObject<METAMediaEffect> *mediaEffect;
@property (retain, nonatomic) NSArray *mediaCompositions;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } mediaCompositionRegion;
@property (nonatomic) double mediaCompositionCornerRadius;
@property (readonly, nonatomic) BOOL userHasMeaningfullyModifiedCompositions;
@property (nonatomic) BOOL muted;
@property (nonatomic) BOOL disableMentionsAndHashtags;
@property (nonatomic) double overallVolume;
@property (nonatomic) double videoVolume;
@property (retain, nonatomic) METAAnimationCurve *assetVolumeCurve;
@property (readonly, nonatomic) NSArray *musicTrackClips;
@property (readonly, nonatomic) NSArray *originalSoundTracks;
@property (retain, nonatomic) NSArray *audioTrackClips;
@property (nonatomic) double selectedAudioVolume;
@property (retain, nonatomic) AVAsset *voiceoverAudio;
@property (nonatomic) double voiceoverVolume;
@property (retain, nonatomic) METAAnimationCurve *voiceoverVolumeCurve;
@property (copy, nonatomic) NSArray *voiceoverAudioEffects;
@property (copy, nonatomic) NSArray *assetAudioEffects;
@property (retain, nonatomic) METAAudioTrack *bleepAudioTrack;
@property (retain, nonatomic) AVAsset *textToSpeechAudio;
@property (retain, nonatomic) METAAudioTrack *soundboardAudioTrack;
@property (nonatomic) double soundboardVolume;
@property (retain, nonatomic) AVAsset *remixReactionOriginalAudio;
@property (nonatomic) BOOL remixReactionOriginalAudioMuted;
@property (weak, nonatomic) NSObject<IGKaraokeCaptionStickerCombinationDataSourceAndDelegate> *karaokeCaptionsStickerCombinationDataSourceAndDelegate;
@property (weak, nonatomic) NSObject<IGViewerOverlayPreviewProvider> *viewerOverlayPreviewProvider;
@property (readonly, nonatomic) UIImage *currentSnapshot;
@property (retain, nonatomic) NSString *suggestedStickerId;
@property (nonatomic) BOOL stickerMediaSynchronizationDisabled;
@property (nonatomic) double stickerPlaybackTime;
@property (nonatomic) BOOL disableMentionLocationPicker;
@property (nonatomic) double videoAssetTimeStartOffset;
@property (readonly, nonatomic) double playbackRate;
@property (nonatomic) struct { double x0; double x1; } playableRange;
@property (retain, nonatomic) NSArray *postProcessFilters;
@property (retain, nonatomic) NSArray *captureToolsForLogging;
@property (nonatomic) BOOL useTapForPlaybackControls;
@property (nonatomic) BOOL shouldPlayMediaOnAppear;
@property (nonatomic) BOOL enforceMinimumStickerSize;
@property (retain, nonatomic) IGTextEditorTextToSpeechConfiguration *textToSpeechConfig;
@property (readonly, nonatomic) IGStoryMediaCompositionView *mediaCompositionView;
@property (nonatomic) BOOL isMediaCompositionViewBeingLaidOutExternally;
@property (readonly, nonatomic) IGStoryMediaCompositionStickerCreationController *stickerController;
@property (retain, nonatomic) IGPostCaptureARController *postcaptureAREffectController;
@property (retain, nonatomic) IGIOSLink *storyLink;
@property (retain, nonatomic) IGBrandedContentMedia *brandedContentMedia;
@property (retain, nonatomic) IGAPIBrandedContentGatingInfo *audienceRestrictions;
@property (readonly, nonatomic) IGStoryStickerGestureController *stickerGestureController;
@property (readonly, nonatomic) UISwipeGestureRecognizer *stickerTraySwipeGestureRecognizer;
@property (retain, nonatomic) IGAPIProductDetailsProductItemDict *suggestedProduct;
@property (retain, nonatomic) IGAPIGenAIToolInfoDict *genAiToolInfo;
@property (nonatomic) BOOL shouldOpenMagicModOnLoad;
@property (nonatomic) BOOL isBoostStoryModeEnabled;
@property (nonatomic) double volume;
@property (nonatomic) double currentPlaybackTime;

/* instance methods */
- (id)initWithCompositions:(id)compositions editingControlsOverlayView:(id)view storyStickerDataSource:(id)source supportHDR:(BOOL)hdr enableNewColorFilters:(BOOL)filters defaultColorFiltersStrength:(double)strength analyticsModule:(id)module userSession:(id)session igglkSession:(id)session;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewDidLayoutSubviews;
- (void)prepareForMediaRendering;
- (void)didShareStory;
- (void)_didTapBackground:(id)background;
- (void)_didLongPressOnBackground:(id)background;
- (void)quickCaptionsViewDidTapCaptionToEditView:(id)view;
- (void)quickCaptionsViewDidTapCaptionToExpandView:(BOOL)view;
- (void)storyStickerDataSource:(id)source didLoadItems:(id)items versionID:(id)id;
- (void)storyStickerDataSource:(id)source didUpdateTimeSticker:(id)sticker;
- (void)storyStickerDataSource:(id)source didFailWithError:(id)error;
- (void)quickCaptionsViewController:(id)controller didFinishEditingCaption:(id)caption;
- (void)presentCaptionsEditingViewController;
- (void)_navigateToMediaCompositionAtIndex:(long long)index animated:(BOOL)animated;
- (void)navigateToMediaCompositionAtIndex:(long long)index animated:(BOOL)animated;
- (void)animateMessageOnScreen:(id)screen;
- (void)setLoadingIndicatorViewVisible:(BOOL)visible;
- (void)_trimInitialReshareReelVideoIfNeeded;
- (void)_didTapTrimButton:(id)button;
- (void)storyTrimmingViewControllerDidDismiss:(id)dismiss withTrimState:(id)state;
- (void)storyTrimmingViewControllerDidCancel:(id)cancel withOriginalTrimState:(id)state;
- (void)storyTrimmingViewControllerDidTapBack:(id)back withOriginalTrimState:(id)state;
- (void)storyTrimmingViewControllerDidUpdateTrimState:(id)state trimmingViewController:(id)controller;
- (long long)numberOfItemsInMultiEditCompositionThumbnailTray:(id)tray;
- (id)multiEditCompositionThumbnailTray:(id)tray thumbnailViewForItemAtIndex:(long long)index;
- (void)multiEditCompositionThumbnailTray:(id)tray moveThumbnailFromIndex:(long long)index toIndex:(long long)index;
- (void)multiEditCompositionThumbnailTray:(id)tray didTapThumbnailAtIndex:(long long)index;
- (void)multiEditCompositionThumbnailTray:(id)tray didTapDuplicateButtonForThumbnailAtIndex:(long long)index;
- (void)multiEditCompositionThumbnailTray:(id)tray didTapDeleteButtonForThumbnailAtIndex:(long long)index;
- (void)setIsColorFilterPickerEnabled:(BOOL)enabled;
- (void)setIsSwipableFilterViewEnabled:(BOOL)enabled;
- (void)playThirdPartyAudioWave:(BOOL)wave;
- (BOOL)mediaCompositionViewIsForSundial:(id)sundial;
- (BOOL)mediaCompositionViewIsForStories:(id)stories;
- (void)mediaCompositionView:(id)view didSettleOnColorFilter:(id)filter;
- (void)mediaCompositionViewColorFilterDidFinishLoading:(id)loading;
- (BOOL)mediaCompositionView:(id)view shouldBeginPositioningAndResizingMediaWithGesture:(id)gesture;
- (BOOL)mediaCompositionViewShouldDecoupleBurnedInStickersFromBackgroundTransform:(id)transform;
- (void)mediaCompositionViewDidBeginResizingAndPositioningMedia:(id)media;
- (void)mediaCompositionViewDidFinishPositioningAndResizingMedia:(id)media;
- (BOOL)mediaCompositionViewIsInClipTransformMode:(id)mode;
- (struct METAMediaTransform { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; })mediaCompositionView:(id)view additionalMediaTransformAtMediaTime:(double)time;
- (void)mediaCompositionView:(id)view stickerWasAddedToComposition:(id)composition;
- (void)mediaCompositionView:(id)view stickerWillBeRemovedFromComposition:(id)composition;
- (void)mediaCompositionView:(id)view didPlayVideoToTime:(double)time;
- (void)mediaCompositionViewPlaybackDidFail:(id)fail withError:(id)error isFatalError:(BOOL)error;
- (void)mediaCompositionView:(id)view effectivePlaybackRateDidChange:(double)change;
- (void)mediaCompositionViewDidPlayToEnd:(id)end;
- (void)mediaCompositionViewDidUpdateContentTransform:(id)transform;
- (void)mediaCompositionViewDidDraw:(id)draw atPlayBackTime:(double)time;
- (void)mediaCompositionView:(id)view loadingIndicatorVisibilityChanged:(BOOL)changed;
- (void)videoTimelineDidBeginScrubbing:(id)scrubbing;
- (void)videoTimeline:(id)timeline didScrubPlayheadToProgress:(double)progress;
- (void)videoTimeline:(id)timeline didChangeSelectedRange:(id)range;
- (void)videoTimelineDidEndScrubbing:(id)scrubbing;
- (void)videoTimelineDidGenerateThumbnails:(id)thumbnails;
- (void)videoLayerList:(id)list didTapLayerForTimedObject:(id)object;
- (void)videoLayerList:(id)list didChangeSelectedStateForTimedObject:(id)object;
- (void)videoLayerList:(id)list didSelectMoreForTimedObject:(id)object;
- (id)videoLayerList:(id)list sectionControllerConfigForTimedObject:(id)object;
- (void)selectStickerInLayerListAndTimeline:(id)timeline;
- (void)_didTapGradientButton;
- (BOOL)edgeTapNavigationView:(id)view tapNavigationGestureCanBegin:(id)begin;
- (void)edgeTapNavigationView:(id)view didTapEdge:(unsigned long long)edge;
- (void)deleteMediaCompositionAtIndex:(long long)index;
- (id)originalCompositionAssetAtIndex:(long long)index;
- (void)insertMediaComposition:(id)composition atIndex:(long long)index;
- (void)setMusicVolumeCurve:(id)curve forClipIdentifier:(id)identifier;
- (void)audioStatusDidChangeIsAudioEnabled:(BOOL)enabled forReason:(long long)reason;
- (void)setPlaybackRate:(double)rate time:(double)time atHostTime:(double)time;
- (void)setCurrentPlaybackTime:(double)time withCompletion:(id /* block */)completion;
- (void)pause;
- (void)play;
- (void)setPlaybackTime:(double)time;
- (void)setEditingControlsOverlayViewHidden:(BOOL)hidden animated:(BOOL)animated completion:(id /* block */)completion;
- (void)setEditingControlsOverlayViewHidden:(BOOL)hidden animated:(BOOL)animated;
- (void)_didTapStickersButton;
- (void)presentStickerTrayFromButton;
- (void)_presentStickerFromSwipe;
- (void)presentStickerTrayWithTrigger:(long long)trigger;
- (void)willDismissStickerTrayViewController:(id)controller trayStateModel:(id)model;
- (void)stickerTrayViewController:(id)controller didChangeContentState:(unsigned long long)state;
- (void)prepareToLaunchMusicStickerEditor;
- (void)_presentMusicViewController;
- (void)storyAudioVoiceoverViewController:(id)controller didRecordVoiceoverAudio:(id)audio;
- (void)storyAudioVoiceoverViewControllerWillBeginRecording:(id)recording;
- (void)storyAudioVoiceoverViewControllerDidTapToDeleteVoiceover:(id)voiceover;
- (void)storyAudioVoiceoverViewController:(id)controller didTapToSelectVoiceoverEffect:(id)effect;
- (void)_presentVoiceoverBottomSheet;
- (void)_presentGalleryController;
- (void)_didTapPhotoDumpPilesButton;
- (void)partialModalSheetDidDismiss:(id)dismiss;
- (void)partialModalSheet:(id)sheet didUpdateOffset:(double)offset presentationProgress:(double)progress;
- (void)partialModalSheet:(id)sheet willChangeState:(unsigned long long)state;
- (void)partialModalSheet:(id)sheet didChangeState:(unsigned long long)state;
- (void)musicBrowserViewControllerDidCancel:(id)cancel;
- (void)musicBrowserViewController:(id)controller didTapAudioTrack:(id)track;
- (void)audioBrowserViewController:(id)controller didTapAudioTrack:(id)track context:(struct { id x0; id x1; id x2; id x3; id x4; id x5; id x6; long long x7; long long x8; unsigned long long x9; BOOL x10; })context;
- (void)audioBrowserViewController:(id)controller didSelectAudioTrack:(id)track;
- (void)musicStickerEditorDidSelectCancel:(id)cancel musicStickerView:(id)view;
- (void)_replaceMusicFirstAlbumArtWithNewAlbumArt:(id)art;
- (void)_replaceCurrentMediaCompositionWithNewCompositionState:(id)state;
- (void)musicStickerEditor:(id)editor didFinishEditingMusicSticker:(id)sticker musicTrackClip:(id)clip musicTrackDidChange:(BOOL)change;
- (void)beginSelectingColorFromScreenWithViewController:(id)controller;
- (void)finishedSelectingColorFromScreenWithViewController:(id)controller;
- (id)colorAtWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates withViewController:(id)controller;
- (id)stickersInComposition;
- (id)stickerTrayDataSource;
- (id)colorProvider;
- (BOOL)compositionHasReshare;
- (void)setStickersUserInteractionEnabled:(BOOL)enabled;
- (BOOL)compositionHasMultipleSegments;
- (id)currentMediaAsset;
- (void)stickerCreationController:(id)controller presentStickerCreationViewController:(id)controller;
- (void)stickerCreationControllerPresentTemplatesEditingViewController:(id)controller;
- (void)stickerCreationController:(id)controller presentMusicStickerEditingViewControllerWithMusicTrackClip:(id)clip musicSticker:(id)sticker;
- (void)stickerCreationController:(id)controller willDismissStickerCreationViewController:(id)controller withSticker:(id)sticker;
- (void)stickerCreationController:(id)controller didDismissStickerCreationViewController:(id)controller withSticker:(id)sticker;
- (void)memeHubDidAddSticker:(id)sticker;
- (void)stickerCreationController:(id)controller didSelectSticker:(id)sticker;
- (void)stickerCreationController:(id)controller didSelectGalleryStickers:(id)stickers;
- (void)stickerCreationController:(id)controller presentAlertWithMessage:(id)message;
- (void)stickerCreationControllerPresentPromptPage:(id)page withSticker:(id)sticker;
- (void)stickerCreationController:(id)controller selectedTrendingPrompt:(BOOL)prompt;
- (void)stickerCreationController:(id)controller presentFundraiserDetailsPage:(id)page;
- (void)stickerCreationController:(id)controller selectedMusicPickMusicTrack:(id)track;
- (void)stickerCreationController:(id)controller presentMagicModWithCameraToolType:(long long)type;
- (void)stickerCreationController:(id)controller presentMagicModTopicStickerWithCameraToolType:(long long)type;
- (void)stickerCreationController:(id)controller cutoutSticker:(id)sticker isLoaded:(BOOL)loaded;
- (void)stickerCreationController:(id)controller cutoutSticker:(id)sticker endedWithError:(id)error;
- (void)stickerCreationControllerPresentPolaroidGalleryPickerViewController:(id)controller;
- (void)stickerCreationControllerPresentTextStickerCreation:(id)creation;
- (void)stickerCreationControllerPresentCutoutStickerCreation:(id)creation;
- (void)stickerCreationControllerShowNoCaptionsActionableToast:(id)toast;
- (void)didSelectCutoutSticker:(id)sticker cutoutCreationVC:(id)vc stickerIdTask:(id)task videoSegmentationTask:(id)task;
- (void)cutoutStickerControllerDidCancel:(id)cancel;
- (void)addExistingStandaloneFundraiserStickerToStory:(id)story;
- (void)sundialCreationPromptPageViewController:(id)controller didSelectPromptStickerModel:(id)model;
- (void)sundialCreationPromptPageViewControllerDidSelectNewStickerCreation:(id)creation;
- (void)presentSharedListCreationViewController:(id)controller;
- (void)dismissSharedListCreationViewController;
- (BOOL)shouldKeepEditingControlsHidden;
- (BOOL)prefersStatusBarHidden;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (BOOL)prefersNavigationBarHidden;
- (long long)preferredTabBarBehavior;
- (BOOL)canRespondToGesture:(id)gesture;
- (BOOL)stickerGestureController:(id)controller shouldBringStickerToFront:(id)front withGesture:(id)gesture;
- (void)stickerGestureController:(id)controller didTapSticker:(id)sticker atPoint:(struct CGPoint { double x0; double x1; })point;
- (id)stickerViewEnumeratorForStickerGestureController:(id)controller;
- (BOOL)stickerGestureController:(id)controller shouldBeginPositioningSticker:(id)sticker withGesture:(id)gesture;
- (void)stickerGestureController:(id)controller willBeginPositioningSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didFinishPositioningSticker:(id)sticker deleted:(BOOL)deleted;
- (BOOL)stickerGestureController:(id)controller stickerCanBePlacedOffscreen:(id)offscreen;
- (BOOL)stickerGestureController:(id)controller stickerCanBePlacedOffGuidelines:(id)guidelines;
- (BOOL)stickerGestureController:(id)controller stickerCanBeDeleted:(id)deleted;
- (id)stickerGestureController:(id)controller additionalStickersForDeletionWithSticker:(id)sticker;
- (void)stickerGestureController:(id)controller willDeleteSticker:(id)sticker;
- (BOOL)_shouldShowDeletionAlertForTemplateSticker:(id)sticker templatizedStickers:(id)stickers;
- (void)stickerGestureController:(id)controller didDeleteSticker:(id)sticker deleteVariant:(long long)variant;
- (void)deleteSticker:(id)sticker deleteVariant:(long long)variant;
- (void)stickerGestureController:(id)controller didUpdateAlignmentGuideState:(unsigned long long)state;
- (void)stickerGestureController:(id)controller didUpdateStickerPosition:(id)position;
- (double)stickerGestureController:(id)controller maximumScaleForSticker:(id)sticker;
- (double)stickerGestureController:(id)controller minimumScaleForSticker:(id)sticker;
- (BOOL)stickerGestureControllerMightShowSafeAreaWarnings;
- (BOOL)stickerGestureControllerShouldAllowHorizontalSafeAreaWarnings;
- (void)stickerGestureController:(id)controller willDragActiveSticker:(id *)sticker atPoint:(struct CGPoint { double x0; double x1; })point;
- (long long)stickerGestureController:(id)controller minimumIndexForSticker:(id)sticker;
- (long long)stickerGestureController:(id)controller maximumIndexForSticker:(id)sticker;
- (void)cleanUpAnimatedTextViews;
- (void)stickerGestureController:(id)controller didBringStickerToFront:(id)front;
- (BOOL)stickerGestureController:(id)controller rotationPermittedForSticker:(id)sticker;
- (void)storyPostCaptureAvatarStickersMemojiHandlerDidSelectGoToStickerTrayAction:(id)action;
- (void)storyPostCaptureAvatarStickersMemojiHandlerDidSelectGoToAvatarGridAction:(id)action;
- (id)newViewerOverlayPreviewView;
- (double)overlayPreviewViewXInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })marginPadding;
- (void)_didTapTextButton;
- (void)beginEditingTextStickerFromTap:(id)tap;
- (void)setEDRMultiplier:(double)edrmultiplier;
- (void)textEntryViewController:(id)controller didBeginEditingTextWrapperView:(id)view;
- (void)textEntryViewController:(id)controller didFinishEditingTextWrapperView:(id)view withDismissalSource:(long long)source;
- (void)textEntryViewController:(id)controller willFinishEditingTextWrapperView:(id)view withDismissalSource:(long long)source;
- (void)textEntryViewController:(id)controller didFinishSelectingColorFromSource:(long long)source;
- (void)textEntryViewController:(id)controller didUpdateFontSize:(double)size;
- (void)textEntryViewController:(id)controller didUpdateTextColor:(id)color;
- (void)textEntryViewControllerDidChangeTextEffect:(id)effect emphasisType:(long long)type isAppliedOnFullCaption:(BOOL)caption;
- (void)textEntryViewControllerDidAddAnimationSticker:(id)sticker animatedStickerView:(id)view isInEditingMode:(BOOL)mode creationEntryPoint:(long long)point;
- (void)textEntryViewControllerDidChangeTextAnimation:(id)animation textFormatName:(id)name;
- (void)textEntryViewControllerColorPickerFormatPickerButtonDidToggle:(id)toggle formatPickerSelected:(BOOL)selected;
- (void)textEntryViewControllerDidSelectTextAlignment:(id)alignment alignmentString:(id)string;
- (void)textEntryViewControllerDidSelectTextFormat:(id)format formatString:(id)string;
- (void)textEntryViewControllerDidUpdateLinkedMentions:(id)mentions mentionedUsers:(id)users;
- (void)textEntryControlsDidToggleToTextFormat:(id)format;
- (void)textEntryControlsDidSelectNewGroupMentionEntrypoint:(id)entrypoint preselectedUsers:(id)users;
- (void)textEntryControlsDidSelectGroupMention:(id)mention selectedGroupMentionSticker:(id)sticker;
- (BOOL)textEntryControlsShouldShowGroupMentionStickerSuggestions:(id)suggestions;
- (void)textEntryControlsDidTapTextToSpeechButtonWith:(id)with;
- (void)storyToggleAcessoryView:(id)view didSwitchOn:(BOOL)on;
- (void)_updateShouldCreateGroupMentionThreadInCompositionState:(BOOL)state;
- (void)prepareToLaunchDrawingEditor;
- (void)_didTapAddDrawingButton;
- (void)drawingViewControllerDidAppear:(id)appear;
- (void)drawingViewControllerDidDismiss:(id)dismiss;
- (void)_didTapEditBoomerangButton;
- (void)prepareToLaunchBoomerangEditor;
- (void)boomerangEditorViewControllerDidDismiss:(id)dismiss;
- (void)boomerangEditorViewController:(id)controller didChooseNonBoomerangAsset:(id)asset;
- (void)boomerangEditorViewController:(id)controller changeToBoomerangAsset:(id)asset;
- (void)boomerangEditorViewController:(id)controller didChangeBoomerangSelectedFormatVariant:(id)variant;
- (void)storyGIFStickerViewControllerDidCancel:(id)cancel;
- (void)storyGIFStickerViewController:(id)controller didSelectAnimatedSticker:(id)sticker;
- (void)stickerGestureController:(id)controller didLongPressOnSticker:(id)sticker longPressGesture:(id)gesture;
- (void)stickerLayeringViewController:(id)controller beginSelectingColorForSticker:(id)sticker;
- (void)stickerLayeringViewController:(id)controller toggleLockForSticker:(id)sticker;
- (void)postCaptureController:(id)controller didSetCurrentAREffect:(id)areffect;
- (void)postCaptureController:(id)controller didSetAREffectOnApplicator:(id)applicator;
- (void)postCaptureController:(id)controller didRenderAREffect:(id)areffect;
- (void)postCaptureControllerWillUnapplyAREffect:(id)areffect;
- (void)postCaptureController:(id)controller willApplyAREffect:(id)areffect;
- (void)postCaptureControllerFailedToLoadCameraEffect:(id)effect;
- (void)postCaptureController:(id)controller didCreateMediaEffect:(id)effect;
- (BOOL)postCaptureControllerCanUseAREngineFlow:(id)flow;
- (void)postCaptureController:(id)controller didCreateAREngineFilter:(id)filter;
- (void)_didTapAudioToggleButton;
- (void)setCapturedAudioMuted:(BOOL)muted;
- (id)mentionedUsers;
- (id)cameraEffectCreator;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (void)paste:(id)paste;
- (void)pasteAlertControllerShouldPasteImage:(id)image;
- (void)effectSliderDidBeginSliding:(id)sliding;
- (void)effectSliderDidFinishSliding:(id)sliding;
- (void)effectSlider:(id)slider didSlide:(double)slide;
- (void)imageView:(id)view didFailToLoadImageWithError:(id)error networkRequestSummary:(id)summary;
- (void)imageView:(id)view didLoadImageFromSource:(unsigned long long)source networkRequestSummary:(id)summary;
- (void)imageView:(id)view didUpdateLoadingState:(id)state;
- (void)imageView:(id)view didUpdateDownloadProgress:(double)progress;
- (void)imageView:(id)view willRequestImageWithURL:(id)url;
- (void)gradientTextStickerViewColorPickerViewControllerWillBeginSelectingColor:(id)color;
- (void)gradientTextStickerViewColorPickerViewControllerDidFinishSelectingColor:(id)color;
- (void)_didTapAREffectsButton;
- (void)_didTapRestyleButton;
- (void)_didTapBackdropButton;
- (void)_didTapMagicModButton;
- (void)_didTapExpanderButton;
- (void)_presentMagicModWithEdits:(id)edits entrypoint:(long long)entrypoint previewOverlayViews:(id)views animated:(BOOL)animated;
- (void)magicModTopicStickerEditingViewController:(id)controller didFinishEditingView:(id)view magicModEdits:(id)edits shouldLaunchMagicModAfterEditing:(BOOL)editing;
- (void)magicModTopicStickerEditingViewController:(id)controller didCancelEditingView:(id)view;
- (void)magicModTemplateStickerEditingViewController:(id)controller magicModEdits:(id)edits;
- (void)magicModTemplateStickerEditingViewControllerDidCancelEditing:(id)editing;
- (void)magicModViewControllerDidCommit:(id)commit withEdits:(id)edits previewOverlayViews:(id)views;
- (void)magicModViewControllerDidCancel:(id)cancel withEdits:(id)edits previewOverlayViews:(id)views;
- (void)_didTapImagineTemplatesAddTextButton;
- (void)_addBackMagicModPreviewOverlayStickers:(id)stickers;
- (void)stickerGalleryViewControllerDidTapCancel:(id)cancel;
- (void)_didTapColorPickerButton;
- (void)colorPickingControlsViewController:(id)controller didSelectColor:(id)color;
- (void)colorPickingControlsViewController:(id)controller didDismissWithColor:(id)color;
- (void)colorPickingControlsViewController:(id)controller didUndoToColor:(id)color;
- (void)colorPickingControlsViewControllerDidCancel:(id)cancel;
- (void)_presentTemplateEditingViewControllerFromPinningTool;
- (void)_presentTemplateEditingViewController;
- (void)_updateGroupCreationToggleViewIfNeeded:(id)needed;
- (void)_templatesStickerWasAddedToComposition:(id)composition;
- (void)storyGroupThreadMentionsNUXViewControllerDidTapContinue:(id)continue;
- (void)storyGroupThreadMentionsNUXViewControllerDidTapNotNow:(id)now;
- (void)templateEditingViewController:(id)controller willDismissWithStickers:(id)stickers templateSticker:(id)sticker originalStickersContainedMusicSticker:(BOOL)sticker;
- (id)promptTextForPromptStickerView:(id)view;
- (id)storyTemplateCreationModelForPromptStickerView:(id)view;
- (id)_storyPinnedElementsLoggingDict:(id)dict hasPinnedBackground:(BOOL)background;
- (id)_storyPinnedGenAIPrompts;
- (void)storyMediaCompositionAssetFetcherDidGeneratePhotoModel:(id)model;
- (void)storyMediaCompositionAssetFetcherDidGenerateVideoModel:(id)model;
- (void)storyMediaCompositionAssetFetcherDidFail;
- (void)_animateInstaPalStickerToBottom:(id)bottom bottomY:(double)y;
- (void)secretStickerOverlayViewDidTapMessageButton;
- (void)didTogglePreviewBlurEnabled:(BOOL)enabled;
- (void)_didTapContextualBackgroundButton;
- (void)_handleContextualBackgroundGenerated:(id)generated;
- (void)_didTapLabelAIButton;
- (void)_updateGenAIAttributionIsMadeWithAI:(BOOL)ai;
@end

#endif /* IGStoryMediaCompositionEditingViewController_h */
