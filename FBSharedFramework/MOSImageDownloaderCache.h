//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MOSImageDownloaderCache_h
#define MOSImageDownloaderCache_h
@import Foundation;

#include "MOSDiskCacheProvider-Protocol.h"
#include "MOSDiskCaching-Protocol.h"
#include "MOSImageDownloaderCaching-Protocol.h"
#include "MOSImageMemoryCache.h"

@class NSString;
@protocol MOSImageMetadataCaching;

@interface MOSImageDownloaderCache : NSObject<MOSImageDownloaderCaching> {
  /* instance variables */
  NSObject<MOSDiskCacheProvider> *_diskCacheProvider;
  undefined * _memoryCacheKeyBuilder;
  undefined * _processedMemoryCacheKeyBuilder;
  undefined * _diskCacheKeyBuilder;
  struct MOSImageDownloaderCacheConfig { BOOL fastPathCacheKeyedOnURL; BOOL isInstagramIntegrationEnabled; } _config;
}

@property (readonly, nonatomic) NSObject<MOSDiskCaching> *diskCache;
@property (readonly, nonatomic) MOSImageMemoryCache *memoryCache;
@property (readonly, nonatomic) NSObject<MOSImageMetadataCaching> *metadataCache;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDiskCacheProvider:(id)provider diskCacheKeyBuilder:(undefined *)builder memoryCache:(id)cache memoryCacheKeyBuilder:(undefined *)builder processedMemoryCacheKeyBuilder:(undefined *)builder;
- (id)initWithDiskCacheProvider:(id)provider diskCacheKeyBuilder:(undefined *)builder memoryCache:(id)cache memoryCacheKeyBuilder:(undefined *)builder processedMemoryCacheKeyBuilder:(undefined *)builder config:(struct MOSImageDownloaderCacheConfig { BOOL x0; BOOL x1; })config;
- (void)_logEvent:(unsigned long long)event loggingContext:(struct { id x0; int x1; id x2; id x3; })context;
- (id)fetchCachedImageFromFastPathCacheForURL:(id)url loggingContext:(struct { id x0; int x1; id x2; id x3; })context;
- (id)fetchCachedImageFromInnerMemoryCacheForURL:(id)url;
- (id)memoryCacheKeyFromURL:(id)url;
- (id)diskCacheKeyFromURL:(id)url;
- (id)processedMemoryCacheKeyFromURL:(id)url cacheKey:(id)key processor:(id)processor;
- (void)saveImageToCache:(id)cache data:(id)data url:(id)url module:(id)module;
- (void)setImageToMemoryCache:(id)cache withURL:(id)url memoryKey:(id)key module:(id)module decodedOnRequest:(BOOL)request imageLoadSource:(unsigned long long)source;
- (id)imageFromFastPathCacheWithURL:(id)url memoryKey:(id)key loggingContext:(struct { id x0; int x1; id x2; id x3; })context;
- (id)imageFromInnerMemoryCacheWithMemoryKey:(id)key loggingContext:(struct { id x0; int x1; id x2; id x3; })context;
- (id)imageDataFromDiskCacheWithURL:(id)url memoryKey:(id)key loggingContext:(struct { id x0; int x1; id x2; id x3; })context;
- (id)diskCachePathFromImageURL:(id)url;
- (void)setImageDataToDiskCache:(id)cache withURL:(id)url memoryKey:(id)key;
- (BOOL)containsImageDataForKey:(id)key;
- (void)removeImageFromCache:(id)cache cacheRemovalSource:(unsigned long long)source;
- (void)clear:(id /* block */)clear;
- (void)clearMemoryCache:(id /* block */)cache;
- (void)clearDiskCache:(id /* block */)cache;
- (void)updateAccessTimeForImageDataWithMemoryCacheKey:(id)key;
@end

#endif /* MOSImageDownloaderCache_h */
