//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryTextWrapperView_h
#define IGStoryTextWrapperView_h
@import Foundation;

#include "UIView.h"
#include "IGAnimatedStickerViewType-Protocol.h"
#include "IGConstrainedSizeStickerViewType-Protocol.h"
#include "IGDynamicSurfaceStickerViewType-Protocol.h"
#include "IGHDRViewType-Protocol.h"
#include "IGMediaSourceStickerViewType-Protocol.h"
#include "IGSerializableV2-Protocol.h"
#include "IGStackableStickerViewType-Protocol.h"
#include "IGStickerBundleView.h"
#include "IGStickerViewType-Protocol.h"
#include "IGStickerWithOriginalModelViewType-Protocol.h"
#include "IGStoryRichTextEntryTextView.h"
#include "IGStoryStickerExportModel.h"
#include "IGStoryTemplatizable-Protocol.h"
#include "IGStoryTextAnimatedStickerView.h"
#include "IGSundialPostcapturePreviewSelectionBorderProtocol-Protocol.h"
#include "IGTextToSpeechStickerViewType-Protocol.h"
#include "IGTimedObject-Protocol.h"
#include "IGUserSession.h"

@class CAShapeLayer, NSDictionary, NSNumber, NSString;
@protocol IGSundialReusableText;

@interface IGStoryTextWrapperView : UIView<IGAnimatedStickerViewType, IGDynamicSurfaceStickerViewType, IGStickerViewType, IGStickerWithOriginalModelViewType, IGSerializableV2, IGTextToSpeechStickerViewType, IGTimedObject, IGStackableStickerViewType, IGHDRViewType, IGConstrainedSizeStickerViewType, IGStoryTemplatizable, IGSundialPostcapturePreviewSelectionBorderProtocol, IGMediaSourceStickerViewType> {
  /* instance variables */
  IGUserSession *_userSession;
  BOOL _positionedOutsideMargins;
  BOOL _enforceMinimumSize;
  BOOL _isTappableOverlayText;
  IGStoryRichTextEntryTextView *_richTextView;
  IGStoryTextAnimatedStickerView *_animatedTextView;
  IGStickerBundleView *_locationBundle;
  NSObject<IGSundialReusableText> *_reuseTextInfo;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _textBounds;
}

@property (retain, nonatomic) NSString *uuidString;
@property (retain, nonatomic) NSNumber *editBeginCount;
@property (readonly, nonatomic) BOOL hasText;
@property (copy, nonatomic) id /* block */ onCachedOutlinePathSetBlock;
@property (nonatomic) BOOL isRiffSelected;
@property (nonatomic) double playbackTime;
@property (readonly, nonatomic) IGStoryStickerExportModel *exportModel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL isDynamic;
@property (retain, nonatomic) id originalModel;
@property (copy, nonatomic) NSString *textToSpeechIdentifier;
@property (readonly, copy, nonatomic) NSString *textToSpeak;
@property (nonatomic) long long textToSpeechState;
@property (nonatomic) unsigned long long textToSpeechVoice;
@property (copy, nonatomic) NSDictionary *textToSpeechLoggingMetadata;
@property (nonatomic) double startTime;
@property (nonatomic) double endTime;
@property (retain, nonatomic) NSNumber *stackedLayerIndex;
@property (readonly, nonatomic) BOOL containsAudio;
@property (readonly, nonatomic) BOOL supportsHDR;
@property (readonly, nonatomic) BOOL isHDR;
@property (nonatomic) long long templatizableStickerState;
@property (readonly, nonatomic) long long templatizableStickerType;
@property (nonatomic) BOOL isFromSuggestedTemplate;
@property (retain, nonatomic) CAShapeLayer *previewSelectionBorder;
@property (readonly, nonatomic) BOOL requiresMediaSource;

/* class methods */
+ (id)newWithMetadata:(id)metadata resourceDirectory:(id)directory userSession:(id)session error:(id *)error;
+ (id)newWithTextStickerTapModel:(id)model creationEntryPoint:(long long)point userSession:(id)session;
+ (double)IGStoryPlaybackDurationOrDefault:(id)default;

/* instance methods */
- (id)initWithRichTextView:(id)view userSession:(id)session;
- (void)layoutSubviews;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (id)stickerView;
- (id)tapModelsForCompositionSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)stickerPinningDisabled;
- (id)asyncDynamicOverlayImageProvider;
- (id)mediaSourceWithCompositionSize:(struct CGSize { double x0; double x1; })size outputSize:(struct CGSize { double x0; double x1; })size maxDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration featureSets:(id)sets;
- (void)setPlaybackRate:(double)rate time:(double)time atHostTime:(double)time;
- (void)setTimedStickerTracker:(id)tracker;
- (id)outlinePath;
- (id)outlinePathForGestureRecognition;
- (id)copyWithUserSession:(id)session;
- (BOOL)deepEqualityCheck:(id)check;
- (void)updateWithMetadata:(id)metadata;
- (id)metadataForResourceDirectory:(id)directory userSession:(id)session error:(id *)error;
- (void)showPreviewSelectionBorder;
- (void)hidePreviewSelectionBorder;
- (id)thumbnail;
- (void)setEDRMultiplier:(double)edrmultiplier;
- (id)templateModelForCompositionSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)constrainStickerWithBoundingBox;
- (double)minimumScale;
- (double)maximumScale;
@end

#endif /* IGStoryTextWrapperView_h */
