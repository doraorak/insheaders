//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MOSImageDownloader_h
#define MOSImageDownloader_h
@import Foundation;

#include "MOSCachedImageFactory.h"
#include "MOSImageDownloaderCaching-Protocol.h"
#include "MOSImageDownloading-Protocol.h"
#include "MOSImageTaskDelegate-Protocol.h"
#include "MOSQPLLogging-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol MOSAdaptiveImageDownloadStrategyProtocol, MOSImageDownloaderWeakImageStorageProtocol, MOSImageEfficiencyLogging, MOSNetworkDownloading, OS_dispatch_queue;

@interface MOSImageDownloader : NSObject<MOSImageTaskDelegate, MOSImageDownloading> {
  /* instance variables */
  NSObject<MOSImageDownloaderWeakImageStorageProtocol> *_weakImageStorage;
  id /* block */ _isTransientAnalysisEnabled;
  NSMutableArray *_stagingRequests;
  NSMutableDictionary *_cacheKeyToRunningTasks;
  NSMutableDictionary *_mediaVariationCacheKeyToRunningTasks;
  NSObject<MOSNetworkDownloading> *_networker;
  NSObject<MOSAdaptiveImageDownloadStrategyProtocol> *_adaptiveImageDownloadStrategy;
  NSObject<OS_dispatch_queue> *_queue;
  NSMutableSet *_selfProfileCacheKeys;
  NSObject<OS_dispatch_queue> *_sharedTaskQueue;
  NSObject<OS_dispatch_queue> *_sharedHighPriorityTaskQueue;
  NSObject<OS_dispatch_queue> *_sharedLowPriorityTaskQueue;
  id /* block */ _dispatcher;
}

@property (nonatomic) unsigned long long inMemoryCacheLimit;
@property (readonly, nonatomic) NSObject<MOSImageDownloaderCaching> *imageCache;
@property (readonly, nonatomic) NSObject<MOSImageEfficiencyLogging> *efficiencyLogger;
@property (readonly, nonatomic) NSObject<MOSQPLLogging> *logger;
@property (readonly, nonatomic) BOOL invalidated;
@property (readonly, nonatomic) MOSCachedImageFactory *cachedImageFactory;
@property (readonly, nonatomic) struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; unsigned long long x11; BOOL x12; BOOL x13; BOOL x14; struct FBImageCreateWithDataExperimentsConfig { BOOL x0; } x15; struct MOSProgressiveLoadingConfig { unsigned long long x0; BOOL x1; BOOL x2; BOOL x3; unsigned long long x4; double x5; unsigned long long x6; } x16; struct { id x0; double x1; BOOL x2; BOOL x3; id x4; double x5; id x6; } x17; struct { long long x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; double x7; double x8; } x18; BOOL x19; BOOL x20; double x21; BOOL x22; } experimentsConfig;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithNetworkDownloader:(id)downloader imageCache:(id)cache cachedImageFactory:(id)factory configuration:(id)configuration weakImageStorage:(id)storage isTransientAnalysisEnabled:(id /* block */)enabled logger:(id)logger efficiencyLogger:(id)logger adaptiveImageDownloadStrategy:(id)strategy experimentsConfig:(struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; unsigned long long x11; BOOL x12; BOOL x13; BOOL x14; struct FBImageCreateWithDataExperimentsConfig { BOOL x0; } x15; struct MOSProgressiveLoadingConfig { unsigned long long x0; BOOL x1; BOOL x2; BOOL x3; unsigned long long x4; double x5; unsigned long long x6; } x16; struct { id x0; double x1; BOOL x2; BOOL x3; id x4; double x5; id x6; } x17; struct { long long x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; double x7; double x8; } x18; BOOL x19; BOOL x20; double x21; BOOL x22; })config;
- (id)_downloadImageWithURL:(id)url desiredFlag_deprecated:(unsigned long long)flag_deprecated priority:(long long)priority attributionContext:(id)context analyticsTags:(id)tags imageProcessor:(id)processor options:(unsigned long long)options requiresPrefetchingCompletion:(BOOL)completion cacheBehavior:(unsigned long long)behavior fetchBehavior:(unsigned long long)behavior retrieveDiskCachePath:(BOOL)path previewPayload:(id)payload previewSize:(struct CGSize { double x0; double x1; })size viewPortSizeInPixels:(struct CGSize { double x0; double x1; })pixels adaptiveQueryComponents:(id)components progressiveConfig:(unsigned long long)config enableSmartFetchFramework:(BOOL)framework productMediaFormat:(unsigned long long)format encryptedRequestPayload:(id)payload isSponsored:(BOOL)sponsored queue:(id)queue progressBlock:(id /* block */)block previewCompletionBlock:(id /* block */)block responseBlock:(id /* block */)block;
- (void)cancelImageDownload:(id)download;
- (void)changeImageDownload:(id)download metadataTo:(struct { long long x0; })to;
- (void)clearAllImageCache:(id /* block */)cache;
- (void)removeImageFromCache:(id)cache cacheRemovalSource:(unsigned long long)source;
- (id)retrieveImageFromMemoryCache:(id)cache;
- (BOOL)isValid;
- (void)invalidate;
- (void)invalidateActiveTasks;
- (void)_invalidateActiveTasksSynchronously;
- (id)downloadImageWithURL:(id)url downloadingOptions:(struct { id x0; id x1; id x2; long long x3; unsigned long long x4; BOOL x5; BOOL x6; unsigned long long x7; unsigned long long x8; BOOL x9; unsigned long long x10; id x11; struct CGSize { double x0; double x1; } x12; struct CGSize { double x0; double x1; } x13; unsigned long long x14; id x15; id x16; BOOL x17; })options queue:(id)queue downloadProgressBlock:(id /* block */)block previewCompletionBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (id)downloadImageWithURL:(id)url analyticsTags:(id)tags queue:(id)queue completionBlock:(id /* block */)block;
- (id)downloadImageWithURL:(id)url downloadingOptions:(struct { id x0; id x1; id x2; long long x3; unsigned long long x4; BOOL x5; BOOL x6; unsigned long long x7; unsigned long long x8; BOOL x9; unsigned long long x10; id x11; struct CGSize { double x0; double x1; } x12; struct CGSize { double x0; double x1; } x13; unsigned long long x14; id x15; id x16; BOOL x17; })options queue:(id)queue downloadProgressBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (id)memoryCacheKeyFromURL:(id)url;
- (void)loadImage:(id)image;
- (void)saveImageToCache:(id)cache data:(id)data url:(id)url cacheBehavior:(unsigned long long)behavior analyticsContext:(id)context callbackQueue:(id)queue completionBlock:(id /* block */)block;
- (id)diskCachePathFromURL:(id)url;
- (id)_loadImageWithUrl:(id)url smartFetchUrl:(id)url isASmartFetchUrl:(BOOL)url imageFetchPriority:(long long)priority cacheBehavior:(unsigned long long)behavior fetchBehavior:(unsigned long long)behavior retrieveDiskCachePath:(BOOL)path shouldBackgroundDecodeImage:(BOOL)image isPrefetchRequest:(BOOL)request requiresPrefetchingCompletion:(BOOL)completion progressiveConfig:(unsigned long long)config desiredImageFlag_deprecated:(unsigned long long)flag_deprecated loggingRequestId:(int)id analyticsContext:(id)context attributionContext:(id)context previewPayload:(id)payload previewSize:(struct CGSize { double x0; double x1; })size viewPortSizeInPixels:(struct CGSize { double x0; double x1; })pixels requestedImageMaxPixelSize:(long long)size productImageMaxPixelSize:(long long)size adaptiveQueryComponents:(id)components imageProcessor:(id)processor productMediaFormat:(unsigned long long)format encryptedRequestPayload:(id)payload isSponsored:(BOOL)sponsored callbackQueue:(id)queue imageCompletionBlock:(id /* block */)block previewCompletionBlock:(id /* block */)block imageProgressBlock:(id /* block */)block;
- (BOOL)_tryToDispatchOnMainThreadWithImage:(id)image withUrl:(id)url isASmartFetchUrl:(BOOL)url error:(id *)error imageCompletionBlock:(id /* block */)block callbackQueue:(id)queue imageProcessor:(id)processor fetchBehavior:(unsigned long long)behavior shouldBackgroundDecodeImage:(BOOL)image desiredImageFlag_deprecated:(unsigned long long)flag_deprecated isPrefetchRequest:(BOOL)request analyticsContext:(id)context attributionContext:(id)context requestStartTime:(double)time loggingRequestId:(int)id logger:(id)logger;
- (void)_dispatchCallbackWithImage:(id)image orStartRequest:(id)request imageNeedsDecoding:(BOOL)decoding loggingRequestId:(int)id logger:(id)logger;
- (void)updateAccessTimeForSelfProfileImages;
- (void)_dispatchRequest:(id)request furyKey:(const char *)key;
- (void)_startTask;
- (BOOL)_tryLoadingFromFastPathCache:(id)cache withCacheKey:(id)key;
- (void)_dispatchCancellationForRequest:(id)request;
- (void)_dispatchCallbackWithImage:(id)image error:(id)error request:(id)request;
- (BOOL)_shouldDownsample:(id)downsample;
- (id)_mediaVariationMultiplexingCacheKey:(id)key;
- (void)_logEfficiencyEventWithRequest:(id)request status:(unsigned long long)status type:(unsigned long long)type fileSize:(unsigned long long)size;
- (id)mosQPLLogger;
@end

#endif /* MOSImageDownloader_h */
