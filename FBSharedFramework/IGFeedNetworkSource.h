//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGFeedNetworkSource_h
#define IGFeedNetworkSource_h
@import Foundation;

#include "IGEmptyFeedModel.h"
#include "IGFeedItemPostedListener-Protocol.h"
#include "IGFeedItemPrefetchManager.h"
#include "IGFeedNetworkDispatchRequestSessionDeps.h"
#include "IGFeedNetworkRequestDelegate-Protocol.h"
#include "IGFeedNetworkRequestRetrier.h"
#include "IGFeedNetworkSourceCommonParser.h"
#include "IGFeedNetworkSourceCoreSessionDeps.h"
#include "IGFeedNetworkSourceDelegate-Protocol.h"
#include "IGFeedRequestConfig-Protocol.h"
#include "IGFeedStatusViewDataSource-Protocol.h"
#include "IGFetchedResultsController.h"
#include "IGMediaCoordinatorModuleGraphSessionDeps.h"
#include "IGMediaDeletedListener-Protocol.h"
#include "IGMediaItemsDeferredFieldsFetcher.h"
#include "IGPrefetchPostsConfiguration.h"
#include "IGSundialVideoUploadListener-Protocol.h"
#include "IGUserSessionProvider.h"

@class NSArray, NSDictionary, NSError, NSObject, NSString;
@protocol FBWebViewDataStoreContaining><IGWebViewDataStoreManaging, IGFeedNetworkFetching, IGFeedNetworkSourceDelegateAnnouncer;

@interface IGFeedNetworkSource : NSObject<IGFeedItemPostedListener, IGMediaDeletedListener, IGFeedStatusViewDataSource, IGSundialVideoUploadListener> {
  /* instance variables */
  NSObject *_lock;
  NSObject<FBWebViewDataStoreContaining><IGWebViewDataStoreManaging> *_webviewDataStoreContainer;
  IGUserSessionProvider *_userSessionProvider;
  BOOL _shouldPrefetchMediaAtParser;
  IGFeedNetworkSourceCommonParser *_responseParser;
  NSObject<IGFeedNetworkFetching> *_fetcher;
  IGFeedNetworkSourceCoreSessionDeps *_coreSessionDeps;
  IGFeedNetworkDispatchRequestSessionDeps *_dispatchRequestSessionDeps;
  IGFeedNetworkRequestRetrier *_requestRetrier;
  BOOL _shouldUseDefaultPrefetchConfiguration;
  IGPrefetchPostsConfiguration *_defaultPrefetchConfiguration;
  IGMediaCoordinatorModuleGraphSessionDeps *_moduleGraphSessionDeps;
  IGMediaItemsDeferredFieldsFetcher *_mediaItemsDeferredFieldsFetcher;
  long long _visibilityPolicy;
  IGPrefetchPostsConfiguration *_prefetchConfiguration;
  long long _profileFeedType;
  NSObject<IGFeedNetworkRequestDelegate> *_requestDelegate;
  unsigned long long _joinURLType;
  IGFetchedResultsController *_fetchedResultsController;
  long long _truncationPolicy;
}

@property BOOL isUpdatingPosts;
@property (retain, nonatomic) IGFeedItemPrefetchManager *prefetchManager;
@property (retain) NSArray *posts;
@property (copy, nonatomic) NSString *module;
@property (weak, nonatomic) NSObject<IGFeedNetworkSourceDelegate> *delegate;
@property (readonly, nonatomic) NSObject<IGFeedNetworkSourceDelegateAnnouncer> *announcer;
@property (nonatomic) long long initialFetchAction;
@property BOOL loadedOnce;
@property (readonly) BOOL isFullyLoaded;
@property (copy, nonatomic) IGEmptyFeedModel *emptyFeedModel;
@property (readonly, nonatomic) BOOL isLoading;
@property (readonly, nonatomic) long long status;
@property (readonly, nonatomic) NSString *fetchPath;
@property (readonly, copy) NSString *nextMaxID;
@property (readonly, nonatomic) NSObject<IGFeedRequestConfig> *currentRequestConfig;
@property (readonly) BOOL hasFetchedWithGraphQL;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) long long HTTPFailureStatusCode;
@property (readonly, nonatomic) NSString *errorTitle;
@property (copy, nonatomic) NSString *errorMessage;
@property (nonatomic) long long authorizationError;
@property (readonly, nonatomic) NSDictionary *defaultParameters;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithPosts:(id)posts endpoints:(id)endpoints parameters:(id)parameters nextMaxID:(id)id feedNetworkSourceSessionDeps:(id)deps module:(id)module truncationPolicy:(long long)policy isImmersiveMainFeedEnabled:(BOOL)enabled responseParser:(id)parser;
- (id)initWithPosts:(id)posts endpoints:(id)endpoints parameters:(id)parameters nextMaxID:(id)id feedNetworkSourceSessionDeps:(id)deps module:(id)module truncationPolicy:(long long)policy isImmersiveMainFeedEnabled:(BOOL)enabled responseParser:(id)parser timeSinceLastHeadLoadFetchKeySuffix:(id)suffix;
- (id)initWithPosts:(id)posts endpoints:(id)endpoints parameters:(id)parameters nextMaxID:(id)id feedNetworkSourceSessionDeps:(id)deps module:(id)module truncationPolicy:(long long)policy isImmersiveMainFeedEnabled:(BOOL)enabled responseParser:(id)parser UserReference:(id)reference mediaStore:(id)store graphQLSurface:(long long)qlsurface graphQLDataDelegate:(id)delegate;
- (id)initWithPosts:(id)posts fetcher:(id)fetcher parameters:(id)parameters nextMaxID:(id)id feedNetworkSourceSessionDeps:(id)deps module:(id)module truncationPolicy:(long long)policy isImmersiveMainFeedEnabled:(BOOL)enabled responseParser:(id)parser;
- (void)updateStreamingQueuePriority_experimental;
- (BOOL)moreAvailable;
- (double)timeSinceLastFetch;
- (void)_fetchDeferredFieldsForPosts:(id)posts;
- (void)insertPostToFront:(id)front;
- (BOOL)insertPost:(id)post atIndex:(long long)index shouldNotifyUpdate:(BOOL)update;
- (BOOL)insertPosts:(id)posts atIndex:(long long)index shouldNotifyUpdate:(BOOL)update;
- (void)deletePost:(id)post;
- (void)deletePosts:(id)posts;
- (void)hideFeedItem:(id)item;
- (void)clearAllPosts;
- (void)appendPosts:(id)posts withEagerMediaLoad:(BOOL)load;
- (void)notifyDataSetUpdated;
- (BOOL)fetchData;
- (BOOL)fetchMoreItems;
- (BOOL)fetchDataWithConfig:(id)config;
- (void)eagerLoadMediaForPost:(id)post;
- (void)eagerLoadMediaForPosts:(id)posts trackingWith:(id)with;
- (void)_eagerLoadMediaForPosts:(id)posts withContext:(id)context appStartCritical:(BOOL)critical trackingWith:(id)with;
- (BOOL)shouldProceedLoadMoreActionWithConfig:(id)config;
- (void)updateModelsFromParsedResponse:(id)response requestConfig:(id)config;
- (id /* block */)cacheHandlerWithConfig:(id)config;
- (void)didReceiveFeedResponse:(id)response requestConfig:(id)config;
- (void)didFinishLoadingWithHTTPResponse:(id)httpresponse success:(BOOL)success error:(id)error requestConfig:(id)config;
- (void)didReceiveShellResponse:(id)response forRequestWithConfig:(id)config;
- (void)handleAuthorizationError;
- (void)feedNetworkFetcher:(id)fetcher didReceiveCachedFeedResponse:(id)response withInvalidationDate:(id)date forRequestConfig:(id)config;
- (void)feedNetworkFetcher:(id)fetcher didParseResponse:(id)response forRequestConfig:(id)config;
- (void)feedNetworkFetcher:(id)fetcher didReceiveFeedResponse:(id)response forRequestConfig:(id)config;
- (void)feedNetworkFetcher:(id)fetcher didFailWithResponse:(id)response data:(id)data error:(id)error forRequestConfig:(id)config;
- (void)feedNetworkFetcher:(id)fetcher didSucceedWithHTTPResponse:(id)httpresponse forRequestConfig:(id)config;
- (BOOL)feedNetworkFetcherShouldAllowLoadMoreWithRequestConfig:(id)config;
- (void)feedNetworkFetcher:(id)fetcher didStartLoadingWithRequestConfig:(id)config;
- (void)feedNetworkFetcher:(id)fetcher didReceiveShellResponse:(id)response forRequestWithConfig:(id)config;
- (void)feedNetworkFetcher:(id)fetcher didCancelRequestForRequestConfig:(id)config;
- (void)mediaItemDeleted:(id)deleted storyReelPK:(id)pk;
- (void)didDeleteStoryReelWithPK:(id)pk;
- (void)feedItemPosted:(id)posted postId:(id)id;
- (void)feedItemPostFailed;
- (void)feedItemWillPost:(id)post taggedProducts:(id)products;
- (void)igtvUploadStatusDidSucceedWithMedia:(id)media sharedPreviewToFeed:(BOOL)feed;
- (void)igtvUploadStatusDidChange:(long long)change postShare:(id)share;
- (void)igtvUploadStatusDidChangePendingUploadItems:(id)items;
- (void)profileGridControlDidUpdate:(id)update;
- (void)sundialVideoDidSuccessfullyUpload:(id)upload media:(id)media sharedToFeed:(BOOL)feed sharedToReels:(BOOL)reels sharedToProfileGrid:(BOOL)grid fanClubVideoType:(long long)type;
- (void)sundialVideoDidBeginUpload:(id)upload sharedToFeed:(BOOL)feed sharedToReels:(BOOL)reels fanClubVideoType:(long long)type;
- (void)sundialVideo:(id)video didUpdateUploadProgress:(double)progress;
- (void)sundialVideoDidFailToUpload:(id)upload;
- (void)sundialVideoDidCancelUpload:(id)upload;
- (void)mediaWasUpdated:(id)updated withChange:(long long)change isFromPreview:(BOOL)preview;
- (long long)feedStatusViewFeedStatus;
- (BOOL)feedStatusViewIsFeedLoadedOnce;
- (unsigned long long)feedStatusViewFeedItemsCount;
- (id)feedStatusViewEmptyFeedModel;
- (id)feedStatusViewErrorMessage;
- (long long)feedStatusViewAuthorizationError;
- (id)feedStatusViewAuthorizationErrorMessage;
- (id)feedStatusViewAuthorizationErrorMessageDetail;
- (id)feedStatusViewErrorSubtitle;
- (void)fetchedResultsController:(id)controller didUpdatePost:(id)post withChange:(long long)change;
- (id)_moduleForEagerMediaLoadForHints:(BOOL)hints;
- (id /* block */)_parser;
@end

#endif /* IGFeedNetworkSource_h */
