//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef KFLayerComponent_h
#define KFLayerComponent_h
@import Foundation;

#include "KFComponent.h"

@class NSMutableOrderedSet, NSNumber;
@protocol {KFValue<CGPoint>="_value"{variant<bool, CGPoint, KFAnimation<CGPoint> *>="__impl_"{__impl<bool, CGPoint, KFAnimation<CGPoint> *>="__data"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, CGPoint, KFAnimation<CGPoint> *>="__dummy"c"__head"{__alt<0UL, bool>="__value"B}"__tail"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, CGPoint, KFAnimation<CGPoint> *>="__dummy"c"__head"{__alt<1UL, CGPoint>="__value"{CGPoint="x"d"y"d}}"__tail"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<CGPoint> *>="__dummy"c"__head"{__alt<2UL, KFAnimation<CGPoint> *>="__value"^v}"__tail"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL>=))))"__index"I}}}, {KFValue<double>="_value"{variant<bool, double, KFAnimation<double> *>="__impl_"{__impl<bool, double, KFAnimation<double> *>="__data"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, double, KFAnimation<double> *>="__dummy"c"__head"{__alt<0UL, bool>="__value"B}"__tail"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, double, KFAnimation<double> *>="__dummy"c"__head"{__alt<1UL, double>="__value"d}"__tail"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<double> *>="__dummy"c"__head"{__alt<2UL, KFAnimation<double> *>="__value"^v}"__tail"(__union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL>=))))"__index"I}}}, {KFValue<std::vector<KFPathCommand>>="_value"{variant<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__impl_"{__impl<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__data"(__union<std::__variant_detail::_Trait::_Available, 0UL, bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__dummy"c"__head"{__alt<0UL, bool>="__value"B}"__tail"(__union<std::__variant_detail::_Trait::_Available, 1UL, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *>="__dummy"c"__head"{__alt<1UL, std::vector<KFPathCommand>>="__value"{vector<KFPathCommand, std::allocator<KFPathCommand>>="__begin_"^{KFPathCommand}"__end_"^{KFPathCommand}"__end_cap_"{__compressed_pair<KFPathCommand *, std::allocator<KFPathCommand>>="__value_"^{KFPathCommand}}}}"__tail"(__union<std::__variant_detail::_Trait::_Available, 2UL, KFAnimation<std::vector<KFPathCommand>> *>="__dummy"c"__head"{__alt<2UL, KFAnimation<std::vector<KFPathCommand>> *>="__value"^v}"__tail"(__union<std::__variant_detail::_Trait::_Available, 3UL>=))))"__index"I}}};

@interface KFLayerComponent : KFComponent {
  /* instance variables */
  struct KFValue<std::vector<KFPathCommand>> { struct variant<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { struct __impl<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { union __union<std::__variant_detail::_Trait::_Available, 0UL, bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_Available, 1UL, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<1UL, std::vector<KFPathCommand>> { struct vector<KFPathCommand, std::allocator<KFPathCommand>> { struct KFPathCommand *__begin_; struct KFPathCommand *__end_; struct __compressed_pair<KFPathCommand *, std::allocator<KFPathCommand>> { struct KFPathCommand *__value_; } __end_cap_; } __value; } __head; union __union<std::__variant_detail::_Trait::_Available, 2UL, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<2UL, KFAnimation<std::vector<KFPathCommand>> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_Available, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } path;
  struct KFValue<double> { struct variant<bool, double, KFAnimation<double> *> { struct __impl<bool, double, KFAnimation<double> *> { union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, double, KFAnimation<double> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, double, KFAnimation<double> *> { char __dummy; struct __alt<1UL, double> { double __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<double> *> { char __dummy; struct __alt<2UL, KFAnimation<double> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } opacity;
  struct CGSize { double width; double height; } size;
  long long vectorCompositeOrder;
  double progressOffset;
  double cumulativeProgressOffset;
  double fromProgress;
  double toProgress;
  struct KFValue<CGPoint> { struct variant<bool, CGPoint, KFAnimation<CGPoint> *> { struct __impl<bool, CGPoint, KFAnimation<CGPoint> *> { union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, CGPoint, KFAnimation<CGPoint> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, CGPoint, KFAnimation<CGPoint> *> { char __dummy; struct __alt<1UL, CGPoint> { struct CGPoint { double x; double y; } __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<CGPoint> *> { char __dummy; struct __alt<2UL, KFAnimation<CGPoint> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } anchorPoint;
  struct KFValue<std::vector<KFPathCommand>> { struct variant<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { struct __impl<bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { union __union<std::__variant_detail::_Trait::_Available, 0UL, bool, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_Available, 1UL, std::vector<KFPathCommand>, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<1UL, std::vector<KFPathCommand>> { struct vector<KFPathCommand, std::allocator<KFPathCommand>> { struct KFPathCommand *__begin_; struct KFPathCommand *__end_; struct __compressed_pair<KFPathCommand *, std::allocator<KFPathCommand>> { struct KFPathCommand *__value_; } __end_cap_; } __value; } __head; union __union<std::__variant_detail::_Trait::_Available, 2UL, KFAnimation<std::vector<KFPathCommand>> *> { char __dummy; struct __alt<2UL, KFAnimation<std::vector<KFPathCommand>> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_Available, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } position;
  struct KFValue<double> { struct variant<bool, double, KFAnimation<double> *> { struct __impl<bool, double, KFAnimation<double> *> { union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, double, KFAnimation<double> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, double, KFAnimation<double> *> { char __dummy; struct __alt<1UL, double> { double __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<double> *> { char __dummy; struct __alt<2UL, KFAnimation<double> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } xPosition;
  struct KFValue<double> { struct variant<bool, double, KFAnimation<double> *> { struct __impl<bool, double, KFAnimation<double> *> { union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, double, KFAnimation<double> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, double, KFAnimation<double> *> { char __dummy; struct __alt<1UL, double> { double __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<double> *> { char __dummy; struct __alt<2UL, KFAnimation<double> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } yPosition;
  struct KFValue<double> { struct variant<bool, double, KFAnimation<double> *> { struct __impl<bool, double, KFAnimation<double> *> { union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, double, KFAnimation<double> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, double, KFAnimation<double> *> { char __dummy; struct __alt<1UL, double> { double __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<double> *> { char __dummy; struct __alt<2UL, KFAnimation<double> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } rotation;
  struct KFValue<CGPoint> { struct variant<bool, CGPoint, KFAnimation<CGPoint> *> { struct __impl<bool, CGPoint, KFAnimation<CGPoint> *> { union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, bool, CGPoint, KFAnimation<CGPoint> *> { char __dummy; struct __alt<0UL, bool> { BOOL __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, CGPoint, KFAnimation<CGPoint> *> { char __dummy; struct __alt<1UL, CGPoint> { struct CGPoint { double x; double y; } __value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, KFAnimation<CGPoint> *> { char __dummy; struct __alt<2UL, KFAnimation<CGPoint> *> { void *__value; } __head; union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL> __tail; } __tail; } __tail; } __data; unsigned int __index; } __impl_; } _value; } scale;
  long long zIndex;
  BOOL inShapeGroup;
  unsigned short sceneEntityID;
  NSMutableOrderedSet *childLayerEntityIDs;
  NSMutableOrderedSet *childSceneInstanceEntityIDs;
  BOOL excludeFromHierarchy;
  NSNumber *parentLayerEntityID;
}

/* class methods */
+ (unsigned short)componentClassIdentifier;

/* instance methods */
- (id)init;
- (void)addChildLayerEntityID:(id)id;
- (void)addChildSceneInstanceEntityID:(id)id;
- (void)clearChildSceneInstanceEntityIDs;
@end

#endif /* KFLayerComponent_h */
