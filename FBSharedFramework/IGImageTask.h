//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGImageTask_h
#define IGImageTask_h
@import Foundation;

#include "IGImageCacheKeyGenerating-Protocol.h"
#include "IGImageDataCaching-Protocol.h"
#include "IGImageDownloadQPLLogger.h"
#include "IGImageImageCaching-Protocol.h"
#include "IGImageNetworking-Protocol.h"
#include "IGImageProcessor-Protocol.h"
#include "IGImageRequestSummary.h"
#include "METAHeadroomService.h"
#include "MOSAdaptiveImageQueryStringComponents.h"

@class NSData, NSMutableArray, NSString, NSURL, UIImage;
@protocol IGImageRequestInterfacing, OS_dispatch_queue;

@interface IGImageTask : NSObject {
  /* instance variables */
  NSMutableArray *_requests;
  NSURL *_url;
  unsigned long long _cacheBehavior;
  BOOL _shouldBackgroundDecodeImage;
  BOOL _didDecodeImage;
  NSData *_previewData;
  struct CGSize { double width; double height; } _previewSize;
  NSObject<IGImageProcessor> *_imageProcessor;
  NSObject<IGImageNetworking> *_networker;
  NSObject<IGImageImageCaching> *_memoryCache;
  NSObject<IGImageDataCaching> *_diskCache;
  NSObject<IGImageCacheKeyGenerating> *_cacheKeyGenerator;
  IGImageDownloadQPLLogger *_imageDownloadQPLLogger;
  METAHeadroomService *_headroomService;
  id /* block */ _taskCompletionBlock;
  struct IGTaskExperimentConfig { BOOL skipUserInitiatedRequestDiskCacheWrite; long long simulatedJPEGRRenderingOption; BOOL ignoreHDRForLazyDecoding; BOOL applyUltraHDRGainMap; BOOL useUltraHDRKernel; BOOL sdrInLowHeadroom; BOOL enableHDRPerfOptimizations; BOOL shouldSimulateLowHeadroom; BOOL shouldRasterizeInHLG; BOOL detectJPEGRFromURL; BOOL renderHDRInRGB10; double maxDisplayBoost; } _experimentsConfig;
  BOOL _isWaitingForLoader;
  BOOL _shouldGeneratePJPEG;
  double _lastProgressiveImageRefreshTime;
  double _fractionCompleted;
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<IGImageRequestInterfacing> *_requestToken;
  unsigned long long _loadSource;
  UIImage *_resultImage;
  NSData *_resultImageData;
  UIImage *_resultPreviewImage;
  long long _previousScanNumber;
  IGImageRequestSummary *_requestSummary;
  MOSAdaptiveImageQueryStringComponents *_adaptiveQueryComponents;
}

@property (readonly, nonatomic) NSString *module;
@property (readonly, nonatomic) long long cacheFetchType;
@property (readonly, nonatomic) NSString *processedCacheKey;
@property (readonly, nonatomic) long long imageFetchPriority;
@property (readonly, nonatomic) unsigned long long fetchBehavior;
@property (readonly, nonatomic) BOOL isSponsored;
@property (readonly, nonatomic) NSString *originalCacheKey;

/* instance methods */
- (id)initWithRequest:(id)request networker:(id)networker memoryCache:(id)cache diskCache:(id)cache cacheKeyGenerator:(id)generator sharedTaskQueue:(id)queue adaptiveQueryComponents:(id)components experimentsConfig:(struct IGTaskExperimentConfig { BOOL x0; long long x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; double x11; })config imageDownloadQPLLogger:(id)qpllogger headroomService:(id)service taskCompletionBlock:(id /* block */)block;
- (void)loadImage;
- (void)attachRequest:(id)request callback:(id /* block */)callback;
- (void)cancel:(id)cancel;
- (void)_trackRequestStarted;
- (BOOL)_canDecodeImageAsJPEGR;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
@end

#endif /* IGImageTask_h */
