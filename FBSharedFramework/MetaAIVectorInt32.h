//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MetaAIVectorInt32_h
#define MetaAIVectorInt32_h
@import Foundation;

#include "MetaAIVector-Protocol.h"

@class NSString;
@protocol {vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}};

@interface MetaAIVectorInt32 : NSObject<MetaAIVector> {
  /* instance variables */
  struct vector<int, std::allocator<int>> { int *__begin_; int *__end_; struct __compressed_pair<int *, std::allocator<int>> { int *__value_; } __end_cap_; } _vector;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithSize:(unsigned long long)size;
- (unsigned long long)size;
- (long long)type;
- (int)objectAtIndexedSubscript:(unsigned long long)subscript;
- (void)setObject:(int)object atIndexedSubscript:(unsigned long long)subscript;
- (id)initWithVector:(struct vector<int, std::allocator<int>> { int * x0; int * x1; struct __compressed_pair<int *, std::allocator<int>> { int * x0; } x2; })vector;
- (void *)vector;
@end

#endif /* MetaAIVectorInt32_h */
