//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStreamingVideoCacheRequest_h
#define IGStreamingVideoCacheRequest_h
@import Foundation;

#include "FNFPrefetchEventManager.h"
#include "IGDeviceLauncherSet-Protocol.h"
#include "IGQueueTimeObserving-Protocol.h"
#include "IGUserLauncherSet-Protocol.h"
#include "IGVideoBandwithEstimateInformation.h"

@class NSSet, NSString, NSURL, NSValue;
@protocol FNFAssetResourceLoadedListener, IGFNFStitchContextUpdater, IGStreamingVideoCacheCacheEventListener, IGStreamingVideoCachePerformanceEventListener;

@interface IGStreamingVideoCacheRequest : NSObject {
  /* instance variables */
  NSObject<IGUserLauncherSet> *_launcherSet;
  NSObject<IGDeviceLauncherSet> *_deviceLauncherSet;
  NSString *_cacheIdentifier;
  FNFPrefetchEventManager *_prefetchEventManager;
  BOOL _ignoreCache;
  BOOL _isTollFreeRequest;
  BOOL _isOnWifi;
  NSString *_diskCacheKeyForStreamData;
  NSString *_diskCacheKeyForMetaData;
  long long _readAheadLimitInBytes;
  IGVideoBandwithEstimateInformation *_bandwidthEstimateInformation;
  NSObject<IGStreamingVideoCachePerformanceEventListener> *_performanceEventListener;
  NSObject<FNFAssetResourceLoadedListener> *_assetResourceLoadedListener;
  NSObject<IGQueueTimeObserving> *_queueTimeObserver;
  double _requestTimeInVideoProxy;
  NSObject<IGStreamingVideoCacheCacheEventListener> *_cacheLogger;
  NSObject<IGFNFStitchContextUpdater> *_stitchContextUpdater;
  id /* block */ _mediaInfoParsedBlock;
  NSString *_trafficToken;
  id /* block */ _progressBlock;
  id /* block */ _errorBlock;
  id /* block */ _traceIdBlock;
  NSValue *_networkDataRangeToLoad;
  struct _NSRange { unsigned long long location; unsigned long long length; } _requestedRange;
}

@property (readonly, nonatomic) int uniqueIdentifier;
@property (readonly, copy, nonatomic) NSString *cacheKey;
@property (readonly, copy, nonatomic) NSURL *url;
@property (readonly, copy, nonatomic) NSString *userPk;
@property (readonly, copy, nonatomic) NSString *mediaId;
@property (readonly, nonatomic) long long reason;
@property (readonly, nonatomic) long long requestType;
@property (readonly, nonatomic) long long cacheFetchType;
@property (readonly, nonatomic) BOOL isAudio;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } startTime;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } duration;
@property (readonly, copy, nonatomic) NSString *streamFormat;
@property (readonly, copy, nonatomic) NSString *module;
@property (readonly, copy, nonatomic) NSSet *analyticsTags;
@property (readonly, copy, nonatomic) id /* block */ successBlock;
@property (readonly, nonatomic) long long requestPriority;
@property (readonly, nonatomic) BOOL isLive;
@property (readonly, nonatomic) BOOL isSponsored;
@property (readonly, nonatomic) BOOL isAppStartCritical;
@property (readonly, nonatomic) BOOL isAnimatedImage;

/* instance methods */
- (id)initWithUrl:(id)url userPk:(id)pk launcherSet:(id)set deviceLauncherSet:(id)set cacheIdentifier:(id)identifier requestedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range readAheadLimitInBytes:(long long)bytes ignoreCache:(BOOL)cache requestType:(long long)type cacheFetchType:(long long)type mediaId:(id)id reason:(long long)reason bandwidthEstimateInformation:(id)information isAudio:(BOOL)audio module:(id)module analyticsTags:(id)tags startTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration requestTimeInVideoProxy:(double)proxy streamFormat:(id)format isTollFreeRequest:(BOOL)request performanceEventListener:(id)listener assetResourceLoadedListener:(id)listener queueTimeObserver:(id)observer cacheLogger:(id)logger stitchContextUpdater:(id)updater isOnWifi:(BOOL)wifi requestPriority:(long long)priority isAppStartCritical:(BOOL)critical isLive:(BOOL)live mediaInfoParsedBlock:(id /* block */)block progressBlock:(id /* block */)block successBlock:(id /* block */)block errorBlock:(id /* block */)block isSponsored:(BOOL)sponsored isAnimatedImage:(BOOL)image prefetchEventManager:(id)manager traceIdBlock:(id /* block */)block;
- (void)begin;
- (void)cancel;
- (void)setIsPlaying:(BOOL)playing;
@end

#endif /* IGStreamingVideoCacheRequest_h */
