//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef BKResolveStateHandlerMap_h
#define BKResolveStateHandlerMap_h
@import Foundation;

@protocol {map<BKClientID *, id<BKResolveStateHandler>, std::less<BKClientID *>, std::allocator<std::pair<BKClientID *const, id<BKResolveStateHandler>>>>="__tree_"{__tree<std::__value_type<BKClientID *, id<BKResolveStateHandler>>, std::__map_value_compare<BKClientID *, std::__value_type<BKClientID *, id<BKResolveStateHandler>>, std::less<BKClientID *>>, std::allocator<std::__value_type<BKClientID *, id<BKResolveStateHandler>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<BKClientID *, id<BKResolveStateHandler>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<BKClientID *, std::__value_type<BKClientID *, id<BKResolveStateHandler>>, std::less<BKClientID *>>>="__value_"Q}}};

@interface BKResolveStateHandlerMap : NSObject {
  /* instance variables */
  struct map<BKClientID *, id<BKResolveStateHandler>, std::less<BKClientID *>, std::allocator<std::pair<BKClientID *const, id<BKResolveStateHandler>>>> { struct __tree<std::__value_type<BKClientID *, id<BKResolveStateHandler>>, std::__map_value_compare<BKClientID *, std::__value_type<BKClientID *, id<BKResolveStateHandler>>, std::less<BKClientID *>>, std::allocator<std::__value_type<BKClientID *, id<BKResolveStateHandler>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<BKClientID *, id<BKResolveStateHandler>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<BKClientID *, std::__value_type<BKClientID *, id<BKResolveStateHandler>>, std::less<BKClientID *>>> { unsigned long long __value_; } __pair3_; } __tree_; } _stateHandlerMap;
}

/* instance methods */
- (void)insertStateUpdate:(id)update clientID:(id)id;
- (id)resolveState:(id)state;
- (void)commitResolveResult:(const void *)result resolveStateHandlerMap:(id)map;
- (id)copy;
@end

#endif /* BKResolveStateHandlerMap_h */
