//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef BKSourceMapNode_h
#define BKSourceMapNode_h
@import Foundation;

#include "BKSourceMapNode.h"

@class NSString;
@protocol {BKSourceMapNodePayloadOffsetResult="payloadOffset"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"rootNode"@"BKSourceMapNode"}, {vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}};

@interface BKSourceMapNode : NSObject {
  /* instance variables */
  struct BKSourceMapNodePayloadOffsetResult { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned int x :63 __cap_; unsigned int x :1 __is_long_; } __l; struct __short { char x[23] __data_; unsigned char x[0] __padding_; unsigned int x :7 __size_; unsigned int x :1 __is_long_; } __s; struct __raw { unsigned long long x[3] __words; } __r; } x0; } __value_; } __r_; } payloadOffset; BKSourceMapNode *rootNode; } _cachedPayloadOffset;
  struct vector<int, std::allocator<int>> { int *__begin_; int *__end_; struct __compressed_pair<int *, std::allocator<int>> { int *__value_; } __end_cap_; } _treePath;
}

@property (readonly, nonatomic) NSString *loggingIdOverride;
@property (readonly, nonatomic) BKSourceMapNode *parent;

/* instance methods */
- (id)initWithLoggingIdOverride:(id)override parent:(id)parent treePath:(struct vector<int, std::allocator<int>> { int * x0; int * x1; struct __compressed_pair<int *, std::allocator<int>> { int * x0; } x2; })path;
- (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })treePathAsString;
- (struct BKSourceMapNodePayloadOffsetResult { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; id x1; })payloadOffset;
- (id)payloadUri;
- (struct BKSourceMapNodeStackFrameResult { id x0; id x1; })bloksStackTraceFrame;
- (id)bloksStackTrace;
- (id)bloksStackTrace:(id)trace;
- (void)setParentDuringTreeMutationBeforeTreeCommit:(id)commit;
- (id)loggingId;
@end

#endif /* BKSourceMapNode_h */
