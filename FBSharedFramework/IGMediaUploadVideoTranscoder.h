//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGMediaUploadVideoTranscoder_h
#define IGMediaUploadVideoTranscoder_h
@import Foundation;

#include "IGMediaQualityMeter.h"
#include "IGMediaUploadTranscodeConfig.h"
#include "IGUserLauncherSetProviding-Protocol.h"
#include "IGVideoRenderQueue.h"
#include "IGVideoRenderer.h"
#include "IGVideoRendererListener-Protocol.h"

@class NSString, NSURL;

@interface IGMediaUploadVideoTranscoder : NSObject<IGVideoRendererListener> {
  /* instance variables */
  IGVideoRenderer *_renderer;
  id /* block */ _progressBlock;
  id /* block */ _segmentStartBlock;
  id /* block */ _segmentCompletionBlock;
  id /* block */ _videoMetadataBlock;
  id /* block */ _imageSampleBlock;
  id /* block */ _completionBlock;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _imageSampleTime;
  IGVideoRenderQueue *_renderQueue;
  BOOL _shouldCalculateSSIM;
  NSObject<IGUserLauncherSetProviding> *_configurationCoordinatorProvider;
  IGMediaQualityMeter *_qualityMeter;
  IGMediaUploadTranscodeConfig *_config;
}

@property (readonly, nonatomic) BOOL canceled;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } outputSize;
@property (readonly, nonatomic) long long numberOfSegments;
@property (readonly, nonatomic) long long estimatedOutputFileSize;
@property (readonly, copy, nonatomic) NSURL *transcodedVideoURL;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) unsigned long long state;

/* instance methods */
- (id)initWithTranscodeConfig:(id)config imageSampleTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time renderQueue:(id)queue shouldCalculateSSIM:(BOOL)ssim qualityMeter:(id)meter configurationCoordinatorProvider:(id)provider;
- (void)cancelExportWithCompletionBlock:(id /* block */)block;
- (void)transcodeWithProgress:(id /* block */)progress onSegmentStarted:(id /* block */)started onSegmentFinished:(id /* block */)finished onImageSample:(id /* block */)sample completion:(id /* block */)completion;
- (id)latestTranscodingSoftException;
- (void)videoRenderer:(id)renderer didProgress:(double)progress;
- (void)videoRendererDidRenderAllSegments:(id)segments;
- (void)videoRenderer:(id)renderer didFailToRenderSegmentsWithError:(id)error;
- (void)videoRenderer:(id)renderer willRenderSegment:(id)segment endTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)videoRenderer:(id)renderer didRenderSegment:(id)segment;
- (void)videoRenderer:(id)renderer didFinishRenderingVideoToURL:(id)url videoSize:(struct CGSize { double x0; double x1; })size canceled:(BOOL)canceled;
- (void)videoRenderer:(id)renderer didFailWithError:(id)error;
- (void)videoRenderer:(id)renderer willStartRenderingSegmentsCount:(unsigned long long)count videoMetadata:(id)metadata;
- (void)videoRenderer:(id)renderer didRenderSampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (void)prepareWithProcessor:(id /* block */)processor;
- (BOOL)isCanceled;
@end

#endif /* IGMediaUploadVideoTranscoder_h */
