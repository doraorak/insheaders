//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGAREffectMusicExternalAudioProvider_h
#define IGAREffectMusicExternalAudioProvider_h
@import Foundation;

#include "FBARAudioServiceExternalAudioProvider-Protocol.h"

@class NSString;
@protocol {AudioConverterInputData="offset"Q"bytes"{vector<std::vector<char>, std::allocator<std::vector<char>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<char> *, std::allocator<std::vector<char>>>="__value_"^v}}};

@interface IGAREffectMusicExternalAudioProvider : NSObject<FBARAudioServiceExternalAudioProvider> {
  /* instance variables */
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _inputFormat;
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _outputFormat;
  struct OpaqueAudioConverter * _audioConverter;
  struct AudioConverterInputData { unsigned long long offset; struct vector<std::vector<char>, std::allocator<std::vector<char>>> { void *__begin_; void *__end_; struct __compressed_pair<std::vector<char> *, std::allocator<std::vector<char>>> { void *__value_; } __end_cap_; } bytes; } _data;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _mutex;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (void)setSampleRate:(int)rate;
- (unsigned long long)readSamplesFor:(id)for buffer:(short *)buffer length:(unsigned long long)length;
@end

#endif /* IGAREffectMusicExternalAudioProvider_h */
