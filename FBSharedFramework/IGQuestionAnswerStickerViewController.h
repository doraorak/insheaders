//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGQuestionAnswerStickerViewController_h
#define IGQuestionAnswerStickerViewController_h
@import Foundation;

#include "UIViewController.h"
#include "IGAnalyticsModule-Protocol.h"
#include "IGKeyboardObserver.h"
#include "IGKeyboardObserverHideDelegate-Protocol.h"
#include "IGKeyboardObserverShowDelegate-Protocol.h"
#include "IGQuestionAnswerStickerView.h"
#include "IGStoryColorPaletteWheel.h"
#include "IGStoryColorProvider-Protocol.h"
#include "IGStoryStickerEditingViewControllerProtocol-Protocol.h"
#include "IGTooltipView.h"
#include "IGUserSession.h"

@class NSArray, NSString, UIButton, UIColor, UILabel, UIView;
@protocol IGQuestionAnswerStickerViewControllerConsumptionDelegate, IGQuestionAnswerStickerViewControllerCreationDelegate;

@interface IGQuestionAnswerStickerViewController : UIViewController<IGKeyboardObserverShowDelegate, IGKeyboardObserverHideDelegate, IGStoryStickerEditingViewControllerProtocol, IGAnalyticsModule> {
  /* instance variables */
  IGUserSession *_userSession;
  UIView *_dimmingView;
  UIButton *_dismissButton;
  IGKeyboardObserver *_keyboardObserver;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _visibleKeyboardRect;
  IGQuestionAnswerStickerView *_stickerView;
  UILabel *_consumptionFooterLabel;
  long long _stickerMode;
  UIView *_contentWrapperView;
  NSString *_mediaCreatorUsername;
  IGStoryColorPaletteWheel *_colorWheel;
  BOOL _stickerNewlyCreated;
  IGTooltipView *_newFormatTooltip;
  BOOL _isDismissingFromMediaResponse;
  BOOL _stickerDimmed;
  NSObject<IGQuestionAnswerStickerViewControllerCreationDelegate> *_creationDelegate;
  NSObject<IGQuestionAnswerStickerViewControllerConsumptionDelegate> *_consumptionDelegate;
  NSObject<IGStoryColorProvider> *_colorProviderDelegate;
}

@property (retain, nonatomic) UIColor *backgroundFillColor;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentRegion;
@property (nonatomic) double contentRegionCornerRadius;
@property (nonatomic) long long editorStyle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *backgroundViews;
@property (readonly, nonatomic) UIView *editableStickerView;
@property (readonly, nonatomic) double editableStickerScaleWhileEditing;
@property (readonly, nonatomic) BOOL editableStickerViewIsNewlyCreated;
@property (readonly, nonatomic) BOOL shouldDisableZoomTransitionOnEditStart;
@property (readonly, nonatomic) BOOL shouldDiscardStickerOnDismissal;
@property (readonly, nonatomic) NSString *stickerEditSessionLoggingId;
@optional
@property (readonly, nonatomic) NSArray *secondaryEditableStickerViews;

/* instance methods */
- (id)initWithUserSession:(id)session stickerView:(id)view stickerNewlyCreated:(BOOL)created mediaCreatorUsername:(id)username;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)_colorWheelChanged:(id)changed;
- (void)_didDismiss:(id)dismiss;
- (void)viewDidLayoutSubviews;
- (void)keyboardObserver:(id)observer keyboardWillShowWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidShow:(id)show;
- (void)keyboardObserver:(id)observer keyboardWillHideWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidHide:(id)hide;
- (void)questionAnswerStickerView:(id)view didUpdateQuestionFieldWithText:(id)text;
- (void)questionAnswerStickerView:(id)view didUpdateAnswerFieldWithText:(id)text;
- (void)questionAnswerStickerViewDidTapSendButton:(id)button;
- (void)questionAnswerStickerViewDidTapMediaResponseButton:(id)button;
- (void)questionAnswerStickerViewDidTapMusicResponseButton:(id)button;
- (id)analyticsModule;
- (BOOL)canRespondToGesture:(id)gesture;
@end

#endif /* IGQuestionAnswerStickerViewController_h */
