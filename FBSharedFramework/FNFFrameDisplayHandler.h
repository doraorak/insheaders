//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFFrameDisplayHandler_h
#define FNFFrameDisplayHandler_h
@import Foundation;

@class NSData, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface FNFFrameDisplayHandler : NSObject {
  /* instance variables */
  id /* block */ _errorCallback;
  NSMutableDictionary *_audioFramesMap;
  NSMutableArray *_audioPtsArray;
  NSMutableDictionary *_videoFramesMap;
  NSMutableDictionary *_videoPtsMap;
  NSMutableArray *_videoPtsArray;
  NSObject<OS_dispatch_queue> *_dispatchQueue;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _currentPlaybackTime;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _audioPlaybackTime;
  BOOL _muted;
  BOOL _missingAudioTrack;
  BOOL _didReportNoAudioError;
  struct { double noAudioThreshold; int avSyncThresholdMs; int avSyncMinSampleSize; double avSyncPassRate; int avSyncLoggingVideoSampleRate; int avSyncMinBufferIndexGap; int avSyncMaxBufferIndexGap; BOOL restartAudioOnError; } _config;
  NSData *_firstManifest;
  NSData *_latestManifest;
  double _duration;
  BOOL _isCalibrated;
  unsigned long long _bufferIndexGap;
  double _lastOutputTime;
  BOOL _isAudioEnqueued;
  int _framesCounter;
  int _avSyncFramesCounter;
  int _secondAVSyncFramePosition;
  BOOL _didReportAVSyncError;
  int _avSyncErrorResetCount;
  int _currentVideoPtsIndex;
  double _noAudioThreshold;
  BOOL _enableSamplization;
  int _videoSampleCounter;
}

/* instance methods */
- (id)initWithConfig:(struct { double x0; int x1; int x2; double x3; int x4; int x5; int x6; BOOL x7; })config;
- (id)initWithConfig:(struct { double x0; int x1; int x2; double x3; int x4; int x5; int x6; BOOL x7; })config isMuted:(BOOL)muted;
- (void)setFrameHandlerWithErrorCallback:(id /* block */)callback;
- (void)updatePlaybackTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)updatePlaybackDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (void)playbackStarted:(struct { long long x0; int x1; unsigned int x2; long long x3; })started;
- (void)playbackPaused:(int)paused;
- (void)playbackMuted:(BOOL)muted;
- (void)playbackMissingAudioTrack:(BOOL)track;
- (void)playbackSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)audioBufferIsEnqueuedWithDisplayFramePts:(double)pts;
- (void)audioBufferIsEnqueuedAtTime:(double)time firstFramePts:(double)pts displayFramePts:(double)pts;
- (void)audioFrameIsOutputAtTime:(double)time framePts:(double)pts callback:(id /* block */)callback;
- (void)videoFrameIsEnqueuedWithPts:(struct { long long x0; int x1; unsigned int x2; long long x3; })pts absolutePts:(struct { long long x0; int x1; unsigned int x2; long long x3; })pts;
- (void)videoFrameIsDisplayedAtTime:(double)time framePts:(double)pts callback:(id /* block */)callback;
- (void)_reset;
- (void)_resetCalibration;
- (void)manifestDataFetched:(id)fetched isFirstManifest:(BOOL)manifest;
- (void)_didAggregateFramesAtPts:(double)pts audioDisplayTime:(double)time videoDisplayTime:(double)time callback:(id /* block */)callback;
@end

#endif /* FNFFrameDisplayHandler_h */
