//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGRequestStreamClientHolder_h
#define IGRequestStreamClientHolder_h
@import Foundation;

#include "AppStateListener.h"
#include "IGAnalyticsEventLoggingProtocol-Protocol.h"
#include "IGDistributedGatewayHolder.h"
#include "IGUserLauncherSetProviding-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue, {shared_ptr<facebook::realtime::bladerunner::Client>="__ptr_"^{Client}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<facebook::realtime::bladerunner::ClientProvider>="__ptr_"^{ClientProvider}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<facebook::realtime::bladerunner::DefaultClient>="__ptr_"^{DefaultClient}"__cntrl_"^{__shared_weak_count}};

@interface IGRequestStreamClientHolder : NSObject {
  /* instance variables */
  BOOL _initialized;
  NSObject<IGUserLauncherSetProviding> *_launcherSet;
  NSObject<IGAnalyticsEventLoggingProtocol> *_analyticsEventLogging;
  NSString *_userId;
  NSString *_authHeader;
  IGDistributedGatewayHolder *_distributedGatewayHolder;
  BOOL _cancelStreamOnClientSessionEnded;
  struct shared_ptr<facebook::realtime::bladerunner::Client> { struct Client *__ptr_; struct __shared_weak_count *__cntrl_; } _dgwRSClient;
  struct shared_ptr<facebook::realtime::bladerunner::DefaultClient> { struct DefaultClient *__ptr_; struct __shared_weak_count *__cntrl_; } _dgwRSDefaultClient;
  AppStateListener *_dgwRSClientListener;
  struct shared_ptr<facebook::realtime::bladerunner::ClientProvider> { struct ClientProvider *__ptr_; struct __shared_weak_count *__cntrl_; } _clientProvider;
  NSObject<OS_dispatch_queue> *_setupQueue;
}

/* instance methods */
- (id)initWithLauncherSet:(id)set analyticsEventLogging:(id)logging userId:(id)id authHeader:(id)header distributedGatewayHolder:(id)holder;
- (void)dealloc;
@end

#endif /* IGRequestStreamClientHolder_h */
