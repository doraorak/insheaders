//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef Keyframes2Loader_h
#define Keyframes2Loader_h
@import Foundation;

#include "KF2MutatorProtocol-Protocol.h"
#include "KFEntity.h"
#include "KFLoaderMetadata.h"
#include "KFLoaderProtocol-Protocol.h"
#include "KFMutatorAssetDelegate-Protocol.h"
#include "KFWorld.h"

@class NSData, NSMutableDictionary, NSString;
@protocol {KF2IDMap<facebook::keyframes::Document>="_idMap"{map<const facebook::keyframes::Document *, unsigned short, std::less<const facebook::keyframes::Document *>, std::allocator<std::pair<const facebook::keyframes::Document *const, unsigned short>>>="__tree_"{__tree<std::__value_type<const facebook::keyframes::Document *, unsigned short>, std::__map_value_compare<const facebook::keyframes::Document *, std::__value_type<const facebook::keyframes::Document *, unsigned short>, std::less<const facebook::keyframes::Document *>>, std::allocator<std::__value_type<const facebook::keyframes::Document *, unsigned short>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<const facebook::keyframes::Document *, unsigned short>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<const facebook::keyframes::Document *, std::__value_type<const facebook::keyframes::Document *, unsigned short>, std::less<const facebook::keyframes::Document *>>>="__value_"Q}}}"_nextAvailableID"S}, {KF2IDMap<facebook::keyframes::Layer>="_idMap"{map<const facebook::keyframes::Layer *, unsigned short, std::less<const facebook::keyframes::Layer *>, std::allocator<std::pair<const facebook::keyframes::Layer *const, unsigned short>>>="__tree_"{__tree<std::__value_type<const facebook::keyframes::Layer *, unsigned short>, std::__map_value_compare<const facebook::keyframes::Layer *, std::__value_type<const facebook::keyframes::Layer *, unsigned short>, std::less<const facebook::keyframes::Layer *>>, std::allocator<std::__value_type<const facebook::keyframes::Layer *, unsigned short>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<const facebook::keyframes::Layer *, unsigned short>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<const facebook::keyframes::Layer *, std::__value_type<const facebook::keyframes::Layer *, unsigned short>, std::less<const facebook::keyframes::Layer *>>>="__value_"Q}}}"_nextAvailableID"S};

@interface Keyframes2Loader : NSObject<KFMutatorAssetDelegate, KFLoaderProtocol> {
  /* instance variables */
  NSData *_data;
  NSObject<KF2MutatorProtocol> *_kf2Mutator;
  KFEntity *_documentEntity;
  KFWorld *_world;
  unsigned long long _nextBitmapID;
  KFLoaderMetadata *_metadata;
  unsigned long long _nextAddedBitmapID;
  NSMutableDictionary *_resourceKeysToAddedBitmaps;
  NSMutableDictionary *_bitmapIDToEntityIDMap;
  NSMutableDictionary *_sceneIDToEntityIDMap;
  struct KF2IDMap<facebook::keyframes::Document> { struct map<const facebook::keyframes::Document *, unsigned short, std::less<const facebook::keyframes::Document *>, std::allocator<std::pair<const facebook::keyframes::Document *const, unsigned short>>> { struct __tree<std::__value_type<const facebook::keyframes::Document *, unsigned short>, std::__map_value_compare<const facebook::keyframes::Document *, std::__value_type<const facebook::keyframes::Document *, unsigned short>, std::less<const facebook::keyframes::Document *>>, std::allocator<std::__value_type<const facebook::keyframes::Document *, unsigned short>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<const facebook::keyframes::Document *, unsigned short>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<const facebook::keyframes::Document *, std::__value_type<const facebook::keyframes::Document *, unsigned short>, std::less<const facebook::keyframes::Document *>>> { unsigned long long __value_; } __pair3_; } __tree_; } _idMap; unsigned short _nextAvailableID; } _documentIDMap;
  struct KF2IDMap<facebook::keyframes::Layer> { struct map<const facebook::keyframes::Layer *, unsigned short, std::less<const facebook::keyframes::Layer *>, std::allocator<std::pair<const facebook::keyframes::Layer *const, unsigned short>>> { struct __tree<std::__value_type<const facebook::keyframes::Layer *, unsigned short>, std::__map_value_compare<const facebook::keyframes::Layer *, std::__value_type<const facebook::keyframes::Layer *, unsigned short>, std::less<const facebook::keyframes::Layer *>>, std::allocator<std::__value_type<const facebook::keyframes::Layer *, unsigned short>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<const facebook::keyframes::Layer *, unsigned short>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<const facebook::keyframes::Layer *, std::__value_type<const facebook::keyframes::Layer *, unsigned short>, std::less<const facebook::keyframes::Layer *>>> { unsigned long long __value_; } __pair3_; } __tree_; } _idMap; unsigned short _nextAvailableID; } _layerIDMap;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithData:(id)data kf2Mutator:(id)mutator metadata:(id)metadata;
- (id)initWithData:(id)data metadata:(id)metadata;
- (id)decodeWithError:(out id *)error;
- (id)addBitmap:(id)bitmap forDocument:(struct Document *)document;
- (id)_decodeData:(out id *)data;
- (void)_registerIDs:(const struct Document *)ids;
- (BOOL)_decodeLayersFromDocument:(const struct Document *)document intoWorld:(id)world sceneInstanceEntity:(out id *)entity error:(out id *)error;
- (void)_decodeManifests:(const struct Document *)manifests intoWorld:(id)world outError:(out id *)error;
- (void)_decodeAssets:(const struct Document *)assets intoWorld:(id)world outError:(out id *)error;
- (void)_decodeDocuments:(const struct Document *)documents intoWorld:(id)world outError:(out id *)error;
- (BOOL)decodeSceneInstance:(unsigned short)instance sceneInstanceEntity:(out id *)entity error:(out id *)error;
- (void)_decodeTransformsForLayer:(const struct Layer *)layer layerComponent:(id)component;
- (BOOL)_decodeLayer:(const struct Layer *)layer withinDocument:(const struct Document *)document intoWorld:(id)world previousSiblingLayer:(const struct Layer *)layer previousSiblingLayerEntity:(id)entity zIndex:(long long *)index outEntity:(out id *)entity outError:(out id *)error;
- (BOOL)_decodeLayerPlugins:(const struct Layer *)plugins layerEntity:(id)entity withinDocument:(const struct Document *)document intoWorld:(id)world outError:(out id *)error;
- (void)_decodeStrokeValuesForLayer:(const struct Layer *)layer intoWorld:(id)world layerEntity:(id)entity;
- (void)_decodeGradientFillValuesForGradient:(const struct Gradient *)gradient intoWorld:(id)world layerEntity:(id)entity;
@end

#endif /* Keyframes2Loader_h */
