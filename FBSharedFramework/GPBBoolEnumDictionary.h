//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef GPBBoolEnumDictionary_h
#define GPBBoolEnumDictionary_h
@import Foundation;

#include "GPBDictionaryInternalsProtocol-Protocol.h"
#include "GPBMessage.h"
#include "NSCopying-Protocol.h"

@interface GPBBoolEnumDictionary : NSObject<GPBDictionaryInternalsProtocol, NSCopying> {
  /* instance variables */
  GPBMessage *_autocreator;
  int _values[2];
  BOOL _valueSet[2];
}

@property (readonly, nonatomic) unsigned long long count;
@property (readonly, nonatomic) undefined * validationFunc;

/* instance methods */
- (id)init;
- (id)initWithValidationFunction:(undefined *)function;
- (id)initWithValidationFunction:(undefined *)function rawValues:(const int *)values forKeys:(const BOOL *)keys count:(unsigned long long)count;
- (id)initWithDictionary:(id)dictionary;
- (id)initWithValidationFunction:(undefined *)function capacity:(unsigned long long)capacity;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)description;
- (BOOL)getEnum:(int *)enum forKey:(BOOL)key;
- (BOOL)getRawValue:(int *)value forKey:(BOOL)key;
- (void)enumerateKeysAndRawValuesUsingBlock:(id /* block */)block;
- (void)enumerateKeysAndEnumsUsingBlock:(id /* block */)block;
- (id)serializedDataForUnknownValue:(int)value forKey:(union  *)key keyDataType:(unsigned char)type;
- (unsigned long long)computeSerializedSizeAsField:(id)field;
- (void)writeToCodedOutputStream:(id)stream asField:(id)field;
- (void)enumerateForTextFormat:(id /* block */)format;
- (void)setGPBGenericValue:(union  *)value forGPBGenericValueKey:(union  *)key;
- (void)addRawEntriesFromDictionary:(id)dictionary;
- (void)setEnum:(int)enum forKey:(BOOL)key;
- (void)setRawValue:(int)value forKey:(BOOL)key;
- (void)removeEnumForKey:(BOOL)key;
- (void)removeAll;
@end

#endif /* GPBBoolEnumDictionary_h */
