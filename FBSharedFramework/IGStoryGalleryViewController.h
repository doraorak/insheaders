//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryGalleryViewController_h
#define IGStoryGalleryViewController_h
@import Foundation;

#include "UIViewController.h"
#include "IGActivityIndicationState.h"
#include "IGAnalyticsModule-Protocol.h"
#include "IGChevronTitleButton.h"
#include "IGGalleryAlbumPickerDelegate-Protocol.h"
#include "IGGalleryDataSource.h"
#include "IGGalleryTitleView.h"
#include "IGGalleryToggleButton.h"
#include "IGGestureHandler-Protocol.h"
#include "IGPassthroughView.h"
#include "IGPerformanceComponent.h"
#include "IGPerformanceNavigationLogger.h"
#include "IGPhotoLibraryLimitedAccessHeaderView.h"
#include "IGPhotoLibraryLimitedAccessHeaderViewDelegate-Protocol.h"
#include "IGScrollPerfManualLogger.h"
#include "IGStoryDraftGalleryView.h"
#include "IGStoryDraftStore.h"
#include "IGStoryGalleryConfiguration.h"
#include "IGStoryGalleryDraftsCellViewModel.h"
#include "IGStoryGalleryViewControllerDelegate-Protocol.h"
#include "IGUserSession.h"
#include "PHPickerViewControllerDelegate-Protocol.h"
#include "_TtC23IGGalleryCollectionView33IGGalleryCollectionViewController.h"
#include "_TtC27IGGalleryDestinationToolbar31IGGalleryDestinationToolbarView.h"
#include "_TtP20MAIImagineCreateTask28MAIImagineCreateTaskDelegate_-Protocol.h"
#include "_TtP23IGGalleryCollectionView41IGGalleryCollectionViewControllerDelegate_-Protocol.h"
#include "_TtP23IGGalleryCollectionView47IGGalleryCollectionViewControllerScrollDelegate_-Protocol.h"
#include "_TtP27IGGalleryDestinationToolbar39IGGalleryDestinationToolbarViewDelegate_-Protocol.h"

@class NSArray, NSIndexPath, NSMutableDictionary, NSString, UIView;
@protocol MAITaskCoordinatorProtocol, OS_dispatch_queue;

@interface IGStoryGalleryViewController : UIViewController<IGGalleryAlbumPickerDelegate, _TtP23IGGalleryCollectionView41IGGalleryCollectionViewControllerDelegate_, _TtP23IGGalleryCollectionView47IGGalleryCollectionViewControllerScrollDelegate_, _TtP27IGGalleryDestinationToolbar39IGGalleryDestinationToolbarViewDelegate_, IGPhotoLibraryLimitedAccessHeaderViewDelegate, PHPickerViewControllerDelegate, _TtP20MAIImagineCreateTask28MAIImagineCreateTaskDelegate_, IGGestureHandler, IGAnalyticsModule> {
  /* instance variables */
  IGStoryGalleryConfiguration *_configuration;
  IGGalleryDataSource *_galleryDataSource;
  NSArray *_preferredMediaTypes;
  BOOL _didSelectSingleAsset;
  IGUserSession *_userSession;
  struct CGSize { double width; double height; } _cellSize;
  IGGalleryTitleView *_titleView;
  IGGalleryToggleButton *_multiSelectToggleButton;
  IGGalleryToggleButton *_searchButton;
  IGPassthroughView *_galleryHeaderView;
  IGStoryDraftStore *_draftStore;
  IGStoryGalleryDraftsCellViewModel *_draftsCellViewModel;
  IGPerformanceNavigationLogger *_performanceLogger;
  IGPerformanceComponent *_loadFirstAssetsPerformanceComponent;
  IGScrollPerfManualLogger *_scrollPerfLogger;
  BOOL _multiSelectEnabledByLongPress;
  unsigned long long _userPermissionsFlowInstanceId;
  NSObject<OS_dispatch_queue> *_albumPickerLoadingQueue;
  _TtC27IGGalleryDestinationToolbar31IGGalleryDestinationToolbarView *_galleryDestinationToolbar;
  NSMutableDictionary *_destinationToolbarAlbumEntrypointIndexMap;
  BOOL _setGalleryToolsInViewDidLoad;
  UIView *_albumTitleNavigationBar;
  IGChevronTitleButton *_albumTitleButton;
  UIView *_albumTitleNavigationBarHorizontalLine;
  UIView *_customizedHeaderView;
  struct CGSize { double width; double height; } _customizedHeaderViewSize;
  _TtC23IGGalleryCollectionView33IGGalleryCollectionViewController *_galleryViewController;
  BOOL _hasUnregisteredGalleryDataSource;
  BOOL _hasAnimatedAddYoursTemplatesDiscoverySurfaceNUX;
  IGActivityIndicationState *_activityIndicationState;
  NSObject<MAITaskCoordinatorProtocol> *_coordinator;
  BOOL _shouldHideAlbumTitleButtonWhenPermissionIsDenied;
  long long _overrideMaxSelectableAssetCount;
  double _cellAspectRatio;
  IGStoryDraftGalleryView *_draftsGalleryView;
  NSIndexPath *_draftsEntrypointIndexPath;
  double _selectionTrayVisibilityPercentage;
  IGPhotoLibraryLimitedAccessHeaderView *_limitedAccessHeaderView;
  NSIndexPath *_currentlySelectedIndexPath;
}

@property (nonatomic) double presentationProgress;
@property (nonatomic) BOOL multiSelectEnabled;
@property (nonatomic) BOOL selectionTrayVisible;
@property (retain, nonatomic) NSArray *prepopulatedStickers;
@property (weak, nonatomic) NSObject<IGStoryGalleryViewControllerDelegate> *delegate;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentRegion;
@property (readonly, nonatomic) NSString *currentCollectionTitle;
@property (nonatomic) double additionalBottomInset;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUserSession:(id)session configuration:(id)configuration;
- (void)dealloc;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)loadView;
- (void)viewDidLoad;
- (void)didMoveToParentViewController:(id)controller;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)setNeedsFadeInAnimation;
- (void)updateConfiguration:(id)configuration;
- (void)setBackgroundColor:(id)color;
- (id)cellForItemAtIndexPath:(id)path;
- (void)viewDidLayoutSubviews;
- (BOOL)canRespondToGesture:(id)gesture;
- (void)_didTapMultiSelectToggleButton;
- (void)_handlePermissionsChangeNotification:(id)notification;
- (void)_handleUpgradePathNotification:(id)notification;
- (id)analyticsModule;
- (id)title;
- (void)setTitle:(id)title;
- (void)_didTapTitleView:(id)view;
- (void)_didTapSearch;
- (void)picker:(id)picker didFinishPicking:(id)picking;
- (BOOL)accessibilityPerformEscape;
- (void)photoLibraryLimitedAccessHeaderViewDidTapManage:(id)manage;
- (void)storyDraftStore:(id)store didFinishLoadingSavedDrafts:(id)drafts;
- (void)storyDraftStore:(id)store didSaveDraft:(id)draft;
- (void)storyDraftStore:(id)store didDeleteDraftsWithIdentifiers:(id)identifiers;
- (void)storyDraftGalleryViewController:(id)controller didSelectDraft:(id)draft;
- (void)albumPickerDidSelectMediaCategory:(long long)category index:(long long)index;
- (void)albumPickerDidSelectAlbum:(id)album index:(long long)index;
- (void)albumPickerDidSelectMetaGalleryAlbum:(id)album index:(long long)index;
- (void)albumPickerDidSelectSuggestedAlbum:(id)album index:(long long)index;
- (void)albumPickerDidSelectSingleAsset:(id)asset;
- (void)galleryToolPicker:(id)picker didSelectTool:(long long)tool;
- (BOOL)galleryDestinationToolbarView:(id)view shouldShowNUXForTool:(long long)tool;
- (BOOL)galleryDestinationToolbarView:(id)view shouldAnimateInNUXForTool:(long long)tool;
- (BOOL)galleryDestinationToolbarView:(id)view shouldDismissNUXForTool:(long long)tool;
- (void)galleryDestinationToolbarView:(id)view didShowNUXForTool:(long long)tool;
- (void)galleryCollectionViewController:(id)controller didSelectAsset:(id)asset sourceView:(id)view;
- (void)galleryCollectionViewController:(id)controller updateAlbumTitle:(id)title;
- (void)galleryCollectionViewController:(id)controller didSelectAssets:(id)assets;
- (void)galleryCollectionViewController:(id)controller didTapBottomPreviewTrayAssetItem:(id)item atIndex:(long long)index sourceView:(id)view;
- (void)galleryCollectionViewController:(id)controller didSelectionTrayUpdateAssets:(id)assets;
- (void)galleryCollectionViewController:(id)controller didMultiSelectAsset:(id)asset atIndexPath:(id)path;
- (void)galleryCollectionViewController:(id)controller didMultiUnselectAsset:(id)asset atIndexPath:(id)path;
- (void)galleryCollectionViewControllerDidRequestPermissions:(id)permissions;
- (void)galleryCollectionViewControllerDidChangePermissions:(id)permissions granted:(BOOL)granted;
- (void)galleryCollectionViewControllerDataSourceDidChange:(id)change;
- (void)galleryCollectionViewControllerDataSourceWillLoad:(id)load;
- (void)galleryCollectionViewControllerDataSourceDidLoad:(id)load;
- (void)galleryCollectionViewControllerDataSourceDidLoadVisibleAssetImages:(id)images;
- (void)galleryCollectionViewControllerDidTapDrafts:(id)drafts;
- (void)galleryCollectionViewControllerDidTapCamera:(id)camera;
- (BOOL)galleryCollectionViewControllerShouldShowLoadingIndicatorForNextButton:(id)button;
- (void)galleryCollectionViewControllerDidTapTemplates:(id)templates;
- (void)galleryCollectionViewControllerDidTapACR:(id)acr;
- (void)galleryCollectionViewController:(id)controller isDraggingSelectionTrayThumbnail:(BOOL)thumbnail;
- (long long)mediaSelectionLimit;
- (BOOL)galleryCollectionViewController:(id)controller canSelectAsset:(id)asset;
- (BOOL)galleryCollectionViewController:(id)controller canMultiSelectAsset:(id)asset;
- (void)galleryCollectionViewControllerDidReachSelectionLimit:(id)limit;
- (void)galleryCollectionViewController:(id)controller willBeginAnimatingSelectionTray:(id)tray willBeVisible:(BOOL)visible;
- (void)galleryCollectionViewController:(id)controller didCompleteAnimatingSelectionTray:(id)tray isVisible:(BOOL)visible;
- (void)galleryCollectionViewControllerDidScroll:(id)scroll scrollView:(id)view;
- (void)galleryCollectionViewControllerWillBeginDragging:(id)dragging scrollView:(id)view;
- (void)galleryCollectionViewControllerDidEndDragging:(id)dragging scrollView:(id)view willDecelerate:(BOOL)decelerate;
- (void)galleryCollectionViewControllerWillEndDragging:(id)dragging scrollView:(id)view withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(struct CGPoint *)offset;
- (void)galleryCollectionViewControllerDidEndDecelerating:(id)decelerating scrollView:(id)view;
- (void)galleryCollectionViewControllerDidUpdateQuickScrub:(id)scrub scrubbing:(BOOL)scrubbing;
- (void)_applicationWillResignActive:(id)active;
- (void)_applicationDidBecomeActive:(id)active;
- (void)navigationLatencyLogging:(id)logging didStartTracking:(id)tracking;
- (void)imagineCreateTask:(id)task didFinishWithResult:(id)result;
- (void)imagineCreateTaskDidCancel:(id)cancel;
@end

#endif /* IGStoryGalleryViewController_h */
