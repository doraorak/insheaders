//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGPostCaptureARController_h
#define IGPostCaptureARController_h
@import Foundation;

#include "FBAREngineFilter.h"
#include "FBCCPlaybackControlling-Protocol.h"
#include "FBCaptureCoordinatorFilterFactoryProtocol-Protocol.h"
#include "FBCaptureCoordinatorLogger.h"
#include "FBTimer.h"
#include "FBVideoPostCaptureMode.h"
#include "IGAREffectApplicator.h"
#include "IGAREffectModel.h"
#include "IGAREffectTargetModel.h"
#include "IGOCMediaHandler.h"
#include "IGPostCaptureARControllerDelegate-Protocol.h"
#include "IGPostCaptureARControllerInterface-Protocol.h"
#include "IGPostCaptureVideoManager.h"
#include "IGTimedFiltersCoordinator.h"
#include "IGUserSession.h"
#include "NSObject-Protocol.h"

@class NSArray, NSSet, NSString;
@protocol IGOCPostCaptureControlling, IGPostCaptureARControllerEffectListListener, IGPostCaptureARControllerNativeUIDelegate, IGPostCaptureARControllerPixelBufferListener;

@interface IGPostCaptureARController : NSObject<IGPostCaptureARControllerInterface, NSObject> {
  /* instance variables */
  IGPostCaptureVideoManager *_postCaptureVideoManager;
  IGUserSession *_userSession;
  NSObject<IGOCPostCaptureControlling> *_postCaptureController;
  FBVideoPostCaptureMode *_videoMode;
  long long _captureDevicePosition;
  BOOL _isAREffectInExportingState;
  FBTimer *_imageAREffectResetTimer;
  BOOL _isInputAssetImage;
  long long _mediaSource;
  NSSet *_effectIDsExportAsPhoto;
  struct CGSize { double width; double height; } _mediaSize;
  id /* block */ _arEffectFeatureDidBecomeAvailableBlock;
  IGTimedFiltersCoordinator *_timedFiltersCoordinator;
  IGOCMediaHandler *_mediaHandler;
  struct IGCameraPreviewInfo { long long cameraPosition; struct CGSize { double width; double height; } previewSize; struct UIEdgeInsets { double top; double left; double bottom; double right; } safeArea; BOOL isPostCapture; } _cameraInfo;
  NSObject<IGPostCaptureARControllerNativeUIDelegate> *_nativeUIDelegate;
  FBAREngineFilter *_currentAREngineFilter;
  BOOL _hasAppliedAREffects;
  BOOL _isPreviewingEffects;
  NSObject<IGPostCaptureARControllerEffectListListener> *_effectListener;
  NSObject<IGPostCaptureARControllerPixelBufferListener> *_pixelBufferListener;
}

@property (weak, nonatomic) NSObject<IGPostCaptureARControllerDelegate> *delegate;
@property (readonly, nonatomic) NSObject<FBCCPlaybackControlling> *playbackController;
@property (retain, nonatomic) IGAREffectModel *currentAREffect;
@property (readonly, nonatomic) NSArray *effects;
@property (nonatomic) BOOL isAdsModeBoostStoryEnabled;
@property (readonly, nonatomic) IGAREffectApplicator *arEffectApplicator;
@property (retain, nonatomic) IGAREffectTargetModel *effectTarget;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<FBCaptureCoordinatorFilterFactoryProtocol> *ccFilterFactory;
@property (readonly, nonatomic) FBCaptureCoordinatorLogger *captureCoordinatorLogger;

/* instance methods */
- (id)initWithUserSession:(id)session captureDevicePosition:(long long)position previewSize:(struct CGSize { double x0; double x1; })size nativeUIDelegate:(id)uidelegate;
- (void)dealloc;
- (id)effectID;
- (double)expectedEffectDuration;
- (double)expectedPreferredFrameRate;
- (void)startSession;
- (BOOL)shouldExportPostcaptureAREffectMediaAsVideo;
- (void)stopRenderingAnimatedMedia;
- (void)queueExportAREffectWithCompletion:(id /* block */)completion;
- (void)restartAREffect;
- (void)attachCaptureGestureRecognizersToView:(id)view translatingToView:(id)view;
- (void)arEffectApplicatorDidUpdateEffectList:(id)list fromNetwork:(BOOL)network;
- (void)arEffectApplicatorAREffectDidBecomeAvailable:(id)available;
- (void)arEffectApplicatorUserDidTurnOffAREffect:(id)areffect;
- (void)arEffectApplicator:(id)applicator didUpdateAREffectTouchSupportedStatus:(BOOL)status;
- (void)arEffectApplicator:(id)applicator didDownloadAREffectAsset:(id)asset withIsPrefetch:(BOOL)prefetch;
- (void)arEffectApplicator:(id)applicator didFailWithTargetEffectResponse:(id)response;
- (void)arEffectApplicator:(id)applicator didFailFetchWithError:(id)error;
- (void)arEffectApplicatorDidFailToDownload:(id)download;
- (void)arEffectApplicator:(id)applicator didFailToDownloadAssetForAssetModel:(id)model;
- (void)arEffectApplicatorDidFailToDownloadRemoteModel:(id)model;
- (void)arEffectApplicator:(id)applicator willApplyAREffect:(id)areffect;
- (void)arEffectApplicatorWillUnApplyAREffect:(id)areffect isSwitchingAREffect:(BOOL)areffect;
- (void)arEffectApplicator:(id)applicator willAddFilterWithConfig:(id)config assetModel:(id)model completion:(id /* block */)completion;
- (void)arEffectApplicator:(id)applicator willAddFilter:(id)filter completion:(id /* block */)completion;
- (BOOL)arEffectApplicatorCanUseAREngineFilterFlow:(id)flow;
- (void)arEffectApplicator:(id)applicator willAddFilter:(id)filter completionWithServiceHost:(id /* block */)host;
- (void)arEffectApplicator:(id)applicator didSetEffect:(id)effect withAttribution:(id)attribution;
- (void)arEffectApplicator:(id)applicator didRenderEffect:(id)effect;
- (void)arEffectApplicatorDidFailToRender:(id)render;
- (void)videoMode:(id)mode didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (void)_didEnterBackground:(id)background;
- (void)_didEnterForeground:(id)foreground;
- (void)arEffectApplicator:(id)applicator shouldAddTimedFiltersWithConfig:(id)config assetModel:(id)model completion:(id /* block */)completion;
- (void)arEffectApplicatorShouldResumeTimedFilters:(id)filters;
- (void)nativeUIControlServiceHandler:(id)handler shouldConfigurePickerWithConfiguration:(id)configuration;
- (void)nativeUIControlServiceHandlerShouldShowPicker:(id)picker;
- (void)nativeUIControlServiceHandlerShouldHidePicker:(id)picker;
- (void)nativeUIControlServiceHandler:(id)handler shouldSelectPickerIndex:(unsigned long long)index;
- (void)nativeUIControlServiceHandler:(id)handler didSelectPickerItem:(id)item atIndex:(unsigned long long)index;
- (void)nativeUIControlServiceHandlerShouldShowSlider:(id)slider;
- (void)nativeUIControlServiceHandlerShouldHideSlider:(id)slider;
- (void)nativeUIControlServiceHandler:(id)handler shouldChangeSliderValue:(double)value;
- (void)nativeUIControlServiceHandler:(id)handler configureSlider:(id)slider;
- (void)nativeUIControlServiceHandlerShouldShowEditableTextInput:(id)input currentText:(id)text;
- (void)nativeUIControlServiceHandlerShouldShowTextInput:(id)input currentText:(id)text;
- (void)nativeUIControlServiceHandlerShouldHideTextInput:(id)input;
@end

#endif /* IGPostCaptureARController_h */
