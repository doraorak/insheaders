//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGVideoView_h
#define IGVideoView_h
@import Foundation;

#include "IGBaseView.h"
#include "IGFNFVideoPlayerDelegate-Protocol.h"
#include "IGImageProgressViewDelegate-Protocol.h"
#include "IGVideo.h"
#include "IGVideoPlayerStateProviding-Protocol.h"
#include "IGVideoViewPlaybackStatus.h"
#include "IGVideoViper2ndChannelManagerDelegate-Protocol.h"

@class NSDictionary, UIImage;

@interface IGVideoView : IGBaseView<IGFNFVideoPlayerDelegate, IGImageProgressViewDelegate, IGVideoViper2ndChannelManagerDelegate> { // (Swift)
  /* instance variables */
   configuration;
   imageView;
   state;
   announcer;
   viewabilityAnnouncer;
   videoPlayer;
   videoViewLogger;
   preferredDisplaySize;
   cornerRadius;
   outgoingContinuationContract;
   $__lazy_storage_$_avAssetCache;
   $__lazy_storage_$_preparationVideoDelegate;
}

@property (nonatomic, retain) NSObject<IGVideoPlayerStateProviding> *videoPlayerStateProvider;
@property (nonatomic, readonly) IGVideo *video;
@property (nonatomic, readonly) BOOL canPlayback;
@property (nonatomic, readonly) UIImage *coverImage;
@property (nonatomic) BOOL stopPlaybackOnWindowRemoval;
@property (nonatomic, readonly) IGVideoViewPlaybackStatus *playbackStatus;
@property (nonatomic, readonly) long long playbackState;
@property (nonatomic, readonly) BOOL playbackFailedToStart;
@property (nonatomic, readonly) NSDictionary *loggingData;
@property (nonatomic, readonly) BOOL isAudioEnabled;
@property (nonatomic, readonly) BOOL isVideoLoaded;
@property (nonatomic) long long coverImageLoadStatus;
@property (nonatomic, readonly) NSDictionary *videoBugReportMetadata;
@property (nonatomic, readonly) BOOL hasPendingContinuationContract;
@property (nonatomic) long long contentMode;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } customTransform;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)configureWith:(id)with coverImage:(id)image userSession:(id)session playerConfig:(id)config analyticsModule:(id)module layoutWidth:(double)width isAudioEnabled:(BOOL)enabled allowCrossFade:(BOOL)fade hdrSupport:(long long)support videoPlayerManager:(id)manager progressViewEnabled:(BOOL)enabled playerProvider:(id)provider;
- (void)preparePlayback;
- (void)pausePlaybackWith:(long long)with;
- (void)startPlaybackWith:(long long)with;
- (void)seekTo:(double)to trigger:(long long)trigger;
- (void)seekTo:(double)to trigger:(long long)trigger completion:(id /* block */)completion;
- (void)stopPlaybackWith:(long long)with;
- (void)setupViewabilityWith:(id)with;
- (void)resetViewability;
- (void)setAudioEnabled:(BOOL)enabled with:(long long)with;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (void)addViper2ndChannelListener:(id)listener;
- (void)removeViper2ndChannelListener:(id)listener;
- (void)currentFrameWith:(id /* block */)with;
- (id)continuedAsClone;
- (id)continuationContract;
- (void)setVolume:(double)volume;
- (void)setCornerRadiusWithRadius:(double)radius;
- (void)evaluateContinuationContract:(id)contract;
- (void)applyTransitionalDisplaySize:(long long)size maxHeight:(double)height;
- (void)restoreDefaultSizing;
- (void)setPlaybackSpeedWithSpeed:(float)speed;
- (id)playbackSpeed;
- (void)setAutoTranslateLanguage:(id)language autoTranslateEnabled:(BOOL)enabled;
- (id)availableAutoTranslateLanguages;
- (id)selectedAutoTranslateLanguage;
- (void)layoutSubviews;
- (void)willMoveToWindow:(id)window;
- (void)didMoveToWindow;
- (void)dealloc;
- (void)videoPlayer:(id)player didUpdateLoadingProgress:(double)progress;
- (void)videoPlayer:(id)player willLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayer:(id)player didLoadVideoInView:(id)view playbackReason:(long long)reason;
- (void)videoPlayerDidPlay:(id)play;
- (void)videoPlayer:(id)player didUpdatePlaybackProgress:(double)progress;
- (void)videoPlayerBufferEmpty:(id)empty;
- (void)videoPlayerDidPlayToEnd:(id)end;
- (void)videoPlayerItemTimeFullyLoaded:(id)loaded;
- (void)videoPlayerDidPause:(id)pause reason:(long long)reason;
- (void)videoPlayer:(id)player didFailToPlaybackWithError:(id)error;
- (void)videoPlayerDidLoop:(id)loop;
- (void)videoPlayerDidFinishSeeking:(id)seeking;
- (void)videoPlayerDidUpdateAvailableAudioAutoTranslateLanguages:(id)languages;
- (void)videoPlayer:(id)player didBeginSeekingToTime:(double)time;
- (void)videoPlayer:(id)player didGenerateWarningWithError:(id)error;
- (void)videoPlayerWillPrepareAssetForPlayback:(id)playback;
- (void)progressImageView:(id)view didLoadImage:(id)image loadSource:(id)source networkRequestSummary:(id)summary;
- (void)progressImageView:(id)view didUpdateLoadingState:(id)state;
- (void)progressImageView:(id)view didFailLoadWithError:(id)error networkRequestSummary:(id)summary;
- (double)videoViperManagerDidUpdateWatchTime;
@end

#endif /* IGVideoView_h */
