//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGPostCreationManager_h
#define IGPostCreationManager_h
@import Foundation;

#include "IGAPIClient-Protocol.h"
#include "IGAnalyticsEventLoggingProtocol-Protocol.h"
#include "IGAuthHeaderStore.h"
#include "IGBackgroundRenderIGLContextProvider-Protocol.h"
#include "IGCameraLogger.h"
#include "IGDInstamadilloMediaUploading-Protocol.h"
#include "IGFacebookServiceHelper.h"
#include "IGListDiffable-Protocol.h"
#include "IGMediaUploadEventLogger.h"
#include "IGMultipleAccountHandling-Protocol.h"
#include "IGPostDataStore.h"
#include "IGPostSessionFactory.h"
#include "IGScopeEnding-Protocol.h"
#include "IGUploadService.h"
#include "IGUser.h"
#include "IGUserLauncherSetProviding-Protocol.h"
#include "IGVideoRenderQueue.h"
#include "_TtC19IGUploadMediaSource30IGUploadARFilterDependencyList.h"

@class NSMutableDictionary, NSString;
@protocol IGPostCreationManagerAnnouncer, IGUploadsUnarchiveAnnouncer, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}};

@interface IGPostCreationManager : NSObject<IGScopeEnding, IGListDiffable> {
  /* instance variables */
  NSObject<IGAPIClient> *_networker;
  IGUser *_user;
  NSObject<IGMultipleAccountHandling> *_multipleAccountHandler;
  NSObject<IGBackgroundRenderIGLContextProvider> *_iglContextProvider;
  IGFacebookServiceHelper *_facebookServiceHelper;
  NSObject<IGAPIClient> *_loggedOutNetworker;
  NSObject<IGUserLauncherSetProviding> *_featureSets;
  IGAuthHeaderStore *_authHeaderStore;
  IGPostSessionFactory *_postSessionFactory;
  IGUploadService *_uploadService;
  IGPostDataStore *_store;
  IGVideoRenderQueue *_videoRenderQueue;
  NSObject<IGUploadsUnarchiveAnnouncer> *_uploadsUnarchiveAnnouncer;
  IGCameraLogger *_cameraLogger;
  NSObject<IGAnalyticsEventLoggingProtocol> *_analyticsLogger;
  IGMediaUploadEventLogger *_mediaUploadEventLogger;
  NSMutableDictionary *_postIdToPendingSession;
  NSMutableDictionary *_postIdToSession;
  NSMutableDictionary *_postIdToArchivedUpload;
  NSObject<IGPostCreationManagerAnnouncer> *_announcer;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _archivedPostsHaveBeenResumed;
  _TtC19IGUploadMediaSource30IGUploadARFilterDependencyList *_arDependencies;
  NSObject<IGDInstamadilloMediaUploading> *_instamadilloMediaUploadProvider;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUser:(id)user networker:(id)networker loggedOutNetworker:(id)networker multipleAccountHandler:(id)handler iglContextProvider:(id)provider objectCacheConsolidator:(id)consolidator feedDraftManager:(id)manager uploadsUnarchiveAnnouncer:(id)announcer offProcessNetworkRequestDeps:(id)deps mediaQualityMeter:(id)meter mediaQualityUploader:(id)uploader videoRenderQueue:(id)queue facebookServiceHelper:(id)helper cacheLimits:(id)limits featureSets:(id)sets authHeaderStore:(id)store postSessionFactory:(id)factory cameraLogger:(id)logger analyticsLogger:(id)logger arDependencies:(id)dependencies instamadilloMediaUploadProvider:(id)provider;
- (id)_createPostWithWaterfall:(id)waterfall dataType:(long long)type entryPointType:(long long)type shareIntent:(id)intent uploadNotRequired:(BOOL)required analyticsModule:(id)module metadata:(id)metadata postId:(id)id enableMultiUploadSupport:(BOOL)support wearablesRequestParamsTask:(id)task;
- (id)_uploadFileWithFileURL:(id)url uploadParams:(id)params postId:(id)id isOptimisticUpload:(BOOL)upload uploadProtocolProvider:(id)provider;
- (void)uploadMediaSource:(id)source videoMetadata:(id)metadata configuration:(id)configuration uploadParams:(id)params additionalHeaders:(id)headers contentTags:(id)tags previewImageSource:(id)source postCoverPhotoSource:(id)source mediaId:(id)id postId:(id)id uploadId:(id)id uploadProtocolProvider:(id)provider transcodingOnly:(BOOL)only overrideSkipStatusCheck:(id)check completion:(id /* block */)completion;
- (id)sharePostId:(id)id shareType:(long long)type shareParams:(id)params retryBehavior:(id)behavior pendingShareMetadata:(id)metadata configureUserPk:(id)pk;
- (id)sharePostId:(id)id shareType:(long long)type shareParams:(id)params retryBehavior:(id)behavior pendingShareMetadata:(id)metadata configureUserPk:(id)pk noRetryErrorCodes:(id)codes;
- (id)sharePostId:(id)id shareType:(long long)type shareParams:(id)params retryBehavior:(id)behavior pendingShareMetadata:(id)metadata configureUserPk:(id)pk isAsyncConfigure:(BOOL)configure disableUploadStatusLiveActivity:(BOOL)activity noRetryErrorCodes:(id)codes;
- (void)removePendingSessionForPostId:(id)id;
- (void)addListener:(id)listener;
- (void)removeListener:(id)listener;
- (void)postSessionInternal:(id)internal didCompleteUploadRequests:(id)requests mediaIdToHasEdits:(id)edits previewImageSource:(id)source;
- (void)postSessionInternal:(id)internal didUpdateWithContext:(id)context;
- (void)postSessionInternal:(id)internal didAddShare:(id)share;
- (void)postSessionInternalDidSucceedUpload:(id)upload;
- (void)postSessionInternalDidSucceedShare:(id)share;
- (void)postSessionInternal:(id)internal didRenderImageSource:(id)source mediaId:(id)id;
- (void)postSessionInternal:(id)internal didRenderVideoUrl:(id)url mediaId:(id)id;
- (void)postSessionInternalDidSuspendVideoProcessing:(id)processing;
- (void)_onNetworkReachabilityChange:(id)change;
- (void)scopeWillEnd;
- (id)diffIdentifier;
- (BOOL)isEqualToDiffableObject:(id)object;
@end

#endif /* IGPostCreationManager_h */
