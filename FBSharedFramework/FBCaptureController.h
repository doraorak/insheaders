//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBCaptureController_h
#define FBCaptureController_h
@import Foundation;

#include "FBCaptureCoordinatorBase.h"
#include "FBCCCaptureModeManaging-Protocol.h"
#include "FBCapturePreviewProviding-Protocol.h"

@class NSString;

@interface FBCaptureController : FBCaptureCoordinatorBase<FBCCCaptureModeManaging> {
  /* instance variables */
  struct FBNewCaptureCoordinatorConfiguration { struct FBCaptureCoordinatorConfiguration { struct FBCameraConfiguration { BOOL shouldFrontCameraVideoMirrored; BOOL multitaskingCameraAccessEnabled; long long startingDevicePosition; long long initialFlashMode; NSString *initialSessionPreset; BOOL retainSinglePreviewLayerWhenSwitchCaptureSession; BOOL retainMultiPreviewLayersWhenSwitchCaptureSession; BOOL useSingleCaptureDeviceAsDefaultCameraPosition; unsigned char initialTargetFPS; BOOL audioCaptureIgnoreRTCClientNotification; BOOL automaticallyConfiguresApplicationAudioSession; BOOL canPreConfigureAudioSession; BOOL shouldRemoveInputsAndOutputsWhenStopped; BOOL enableEchoCancellation; BOOL videoBufferTransformEnabled; long long videoStabilizationMode; BOOL setVideoStabilizationModeAfterStart; BOOL subjectAreaChangeMonitoring; float lowLightDetectionThreshold; float lowLightExposureBias; struct FBBracketedCaptureConfiguration { NSArray *exposureValues; undefined *resolverFunction; BOOL enabled; BOOL autoEnhanceEnabled; unsigned long long downsampleWidth; } bracketedCaptureConfiguration; double maxZoomFactor; BOOL ultraWideCameraSupport; BOOL preserveZoomFactorsDuringCameraSession; BOOL keepAudioSessionActiveDuringCameraSession; BOOL markAVWriterInputsAsFinishedWhenRecordingStops; id /* block */ disableARKitCacheBlock; struct CGSize { double width; double height; } preferredWorldTrackingResolution; BOOL planeDetectionEnabled; BOOL produceWorldTrackingFrames; BOOL worldTrackingAlignmentGravity; BOOL lowLightDetectorEnabled; BOOL flashSceneDetectorEnabled; BOOL audioCaptureEnabled; BOOL audioOnlyCapture; NSArray *preferredCaptureDeviceTypes; NSArray *captureDevices; NSArray *multiCaptureDevices; BOOL useLatestCaptureDevices; unsigned int photoPixelFormat; unsigned int initialCaptureVideoDataOutputPixelFormatType; struct FBCaptureAutoExposureConfiguration { BOOL enableAutoExposureOnTrackedObjects; BOOL trackVisibleFaces; BOOL trackVisibleBodies; BOOL trackVisibleCats; BOOL trackVisibleDogs; BOOL trackQRCodes; } autoExposureConfiguration; struct FBCapturePOIDetectorConfiguration { long long detectorType; double executionTimeInterval; double minimumBoundsChange; BOOL drawDebugBounds; } detectorConfiguration; BOOL fbAudioEnabled; NSArray *photoCapturePlugins; BOOL useFBMultiCaptureManager; BOOL enableMultiCapture; struct CGSize { double width; double height; } customizedCapturedPhotoResolution; struct FBPhotoCaptureConfiguration { BOOL stillImageCaptureEnabled; BOOL isFlipFrontCameraOutputEnabled; BOOL stopLivePreviewOnPhotoCapture; BOOL delayImageCaptureWhileAdjustingCamera; BOOL setFlashModeOnPhotoSettingsForSceneMonitoring; unsigned long long setMaxPhotoQualityPrioritization; } photoCaptureConfiguration; BOOL enableSceneDepth; BOOL livePhotoEnabled; BOOL includeTrackingDataInVideoData; struct FBCameraSimulationConfiguration { id /* block */ videoFilePathProvider; id /* block */ imageFilePathProvider; BOOL enableLocalVideoFileInput; BOOL enableLocalVideoFileAudioHandling; BOOL endlessPlaybackEnabled; } cameraSimulationConfiguration; BOOL stereoEnabled; BOOL forceARKit; BOOL pauseResumeOnAsyncSessionQueue; struct FBRecordingConfiguration { id /* block */ depthRecordingHandler; id /* block */ poseRecordingHandler; BOOL shouldCaptureWithRecordingTimestamps; struct { long long value; int timescale; unsigned int flags; long long epoch; } maximumDuration; BOOL useCaptureVideoDataOutputRecommendedVideoSettings; } recordingConfiguration; BOOL enableSetWorldMapForWorldTracking; BOOL enableMETACaptureManagerConvergence; BOOL enableControlPanel; int maxExposureDurationMs; BOOL doNotSetVideoSettings; isARKitAudioDataRequired *videoFormat; BOOL x0; int captureInfoLoggingFrameInterval; BOOL isARFrameRotationDisabled; } cameraConfiguration; struct FBRendererConfiguration { BOOL skipRenderingUntilAllFiltersPrepared; BOOL flushTextureCacheOnEveryFrame; BOOL multipleOutputsEnabled; BOOL overlayOutputEnabled; BOOL batchPostConnectionOperations; BOOL iglSurfaceEnabled; BOOL iglImageFilterEnabled; BOOL iglImageOverlayFilterEnabled; BOOL iglDoodleDrawingFilterEnabled; int renderingType; BOOL cropAspectFitUsingPreviewAspectRatio; BOOL alwaysCropAspectFitUsingPreviewAspectRatio; BOOL output16Bit; BOOL copiesServiceHostOnExport; } rendererConfiguration; struct FBPreviewConfiguration { BOOL isInitialPreviewModeAVCaptureVideoPreviewLayer; NSString *contentsGravity; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } previewCropRect; BOOL disableDefaultPreview; BOOL enableFlushingOnAVSampleBufferDisplayLayer; } previewConfiguration; struct FBGestureConfiguration { BOOL failGatingForConsumedTapGestureData; } gestureConfiguration; unsigned long long requiredCameraCapabilities; unsigned long long imageResolutionSetting; double videoBitratePerPixel; BOOL optimizePreviewForScreen; BOOL warmupARKit; BOOL enableHDRVideoRecordingIfPossible; BOOL disableCameraPreviewViewAspectRatioMatching; BOOL isPhotoCapturePostProcessingOnSeparateQueue; struct CGSize { double width; double height; } recordingVideoSize; BOOL useCaptureManagerFixForIsRunningCheck; BOOL multitaskingCameraAccessEnabled; } preCaptureConfiguration; struct FBPostCaptureCoordinatorConfiguration { struct FBRendererConfiguration { BOOL skipRenderingUntilAllFiltersPrepared; BOOL flushTextureCacheOnEveryFrame; BOOL multipleOutputsEnabled; BOOL overlayOutputEnabled; BOOL batchPostConnectionOperations; BOOL iglSurfaceEnabled; BOOL iglImageFilterEnabled; BOOL iglImageOverlayFilterEnabled; BOOL iglDoodleDrawingFilterEnabled; int renderingType; BOOL cropAspectFitUsingPreviewAspectRatio; BOOL alwaysCropAspectFitUsingPreviewAspectRatio; BOOL output16Bit; BOOL copiesServiceHostOnExport; } rendererConfiguration; BOOL needsPreview; NSString *previewContentsGravity; } postCaptureConfiguration; } _configuration;
  NSObject<FBCapturePreviewProviding> *_previewProvider;
  struct CGSize { double width; double height; } _cameraPreviewSize;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConfiguration:(const struct FBNewCaptureCoordinatorConfiguration *)configuration filterFactory:(id)factory captureCoordinatorLogger:(id)logger iglDeviceProducer:(id)producer experimentManager:(id)manager filterDownloader:(id)downloader configProviderDelegate:(id)delegate;
- (void)setPreviewProvider:(id)provider;
- (id)preview;
- (id)filterPerformanceExtras;
- (void)preview:(id)preview didChangeSizeTo:(struct CGSize { double x0; double x1; })to;
- (void)preview:(id)preview didChangeEffectSafeAreaInsetsTo:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })to;
- (struct CGSize { double x0; double x1; })rendererOutputSize;
- (unsigned long long)supportedCameraCapabilities;
- (void)setMultiCameraVideoCompositeStrategy:(id)strategy;
@end

#endif /* FBCaptureController_h */
