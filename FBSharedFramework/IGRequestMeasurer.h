//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGRequestMeasurer_h
#define IGRequestMeasurer_h
@import Foundation;

@protocol {unique_ptr<facebook::xplat::request_measurement::RequestMeasurer, std::default_delete<facebook::xplat::request_measurement::RequestMeasurer>>="__ptr_"{__compressed_pair<facebook::xplat::request_measurement::RequestMeasurer *, std::default_delete<facebook::xplat::request_measurement::RequestMeasurer>>="__value_"^{RequestMeasurer}}};

@interface IGRequestMeasurer : NSObject {
  /* instance variables */
  struct unique_ptr<facebook::xplat::request_measurement::RequestMeasurer, std::default_delete<facebook::xplat::request_measurement::RequestMeasurer>> { struct __compressed_pair<facebook::xplat::request_measurement::RequestMeasurer *, std::default_delete<facebook::xplat::request_measurement::RequestMeasurer>> { struct RequestMeasurer *__value_; } __ptr_; } _requestMeasurer;
}

/* instance methods */
- (id)initWithMinMsThreshold:(long long)threshold minBytesThreshold:(long long)threshold allowedRequestTypes:(id)types;
- (void)requestDidStartTransferringDataWithRequestId:(long long)id requestType:(id)type timeMethodCalledMs:(long long)ms;
- (void)requestDidTransferDataWithRequestType:(id)type bytes:(long long)bytes;
- (BOOL)requestDidFinishTransferringDataWithRequestId:(long long)id timeMethodCalledMs:(long long)ms latencyMs:(long long)ms;
- (long long)lastMeasurementBytes;
- (long long)lastMeasurementTimeMs;
- (struct unordered_set<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, std::hash<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>, std::equal_to<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>, std::allocator<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>> { struct __hash_table<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, std::hash<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>, std::equal_to<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>, std::allocator<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *> *>>> { void * * x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *>, std::allocator<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *>>> { struct __hash_node_base<std::__hash_node<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType, void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::hash<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::equal_to<facebook::xplat::request_measurement::RequestMeasurementConstants::RequestType>> { float x0; } x3; } x0; })_allowedRequestTypes:(id)types;
- (long long)_requestType:(id)type;
@end

#endif /* IGRequestMeasurer_h */
