//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBARWorldTrackingDataProviderConfiguration_h
#define FBARWorldTrackingDataProviderConfiguration_h
@import Foundation;

#include "FBARServiceConfigurationCxx-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSString;
@protocol FBARWorldTrackingDataProviderDelegate, FBARWorldTrackingDataProviderEffectDescriptor, struct shared_ptr<arfx::services::IServiceConfiguration> { struct IServiceConfiguration * x0; struct __shared_weak_count * x1; };

@interface FBARWorldTrackingDataProviderConfiguration : NSObject<FBARServiceConfigurationCxx, NSCopying, NSSecureCoding>

@property (readonly, nonatomic) NSObject<FBARWorldTrackingDataProviderEffectDescriptor> *effectDescriptor;
@property (readonly, weak, nonatomic) NSObject<FBARWorldTrackingDataProviderDelegate> *delegate;
@property (readonly, nonatomic) double cameraDistortion1;
@property (readonly, nonatomic) double cameraDistortion2;
@property (readonly, nonatomic) double cameraFocalLength;
@property (readonly, nonatomic) double cameraPrincipalPointX;
@property (readonly, nonatomic) double cameraPrincipalPointY;
@property (readonly, nonatomic) BOOL exposureControlEnabled;
@property (readonly, nonatomic) BOOL useSimilarityTrackerForScaling;
@property (readonly, nonatomic) BOOL setScaleByARClass;
@property (nonatomic) BOOL useWolfSlamForWarfSlam;
@property (readonly, nonatomic) BOOL enableTrackables;
@property (readonly, nonatomic) struct ServiceType { int x0; } serviceType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct shared_ptr<arfx::services::IServiceConfiguration> { struct IServiceConfiguration * x0; struct __shared_weak_count * x1; } engineServiceConfiguration;

/* class methods */
+ (id)newConfigurationDefault;
+ (id)newConfigurationCameraDistortion1:(double)distortion1 cameraDistortion2:(double)distortion2 cameraFocalLength:(double)length cameraPrincipalPointX:(double)x cameraPrincipalPointY:(double)y exposureControlEnabled:(BOOL)enabled useSimilarityTrackerForScaling:(BOOL)scaling setScaleByARClass:(BOOL)arclass useWolfSlamForWarfSlam:(BOOL)slam enableTrackables:(BOOL)trackables;
+ (id)newConfigurationCameraDistortion1:(double)distortion1 cameraDistortion2:(double)distortion2 cameraFocalLength:(double)length cameraPrincipalPointX:(double)x cameraPrincipalPointY:(double)y exposureControlEnabled:(BOOL)enabled effectDescriptor:(id)descriptor delegate:(id)delegate useSimilarityTrackerForScaling:(BOOL)scaling setScaleByARClass:(BOOL)arclass useWolfSlamForWarfSlam:(BOOL)slam enableTrackables:(BOOL)trackables;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithCameraDistortion1:(double)distortion1 cameraDistortion2:(double)distortion2 cameraFocalLength:(double)length cameraPrincipalPointX:(double)x cameraPrincipalPointY:(double)y exposureControlEnabled:(BOOL)enabled effectDescriptor:(id)descriptor delegate:(id)delegate useSimilarityTrackerForScaling:(BOOL)scaling setScaleByARClass:(BOOL)arclass useWolfSlamForWarfSlam:(BOOL)slam enableTrackables:(BOOL)trackables;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isExposureControlEnabled;
@end

#endif /* FBARWorldTrackingDataProviderConfiguration_h */
