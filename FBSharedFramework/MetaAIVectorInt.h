//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef MetaAIVectorInt_h
#define MetaAIVectorInt_h
@import Foundation;

#include "MetaAIVector-Protocol.h"

@class NSString;
@protocol {vector<long long, std::allocator<long long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::allocator<long long>>="__value_"^q}};

@interface MetaAIVectorInt : NSObject<MetaAIVector> {
  /* instance variables */
  struct vector<long long, std::allocator<long long>> { long long *__begin_; long long *__end_; struct __compressed_pair<long long *, std::allocator<long long>> { long long *__value_; } __end_cap_; } _vector;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithSize:(unsigned long long)size;
- (unsigned long long)size;
- (long long)type;
- (long long)objectAtIndexedSubscript:(unsigned long long)subscript;
- (void)setObject:(long long)object atIndexedSubscript:(unsigned long long)subscript;
- (id)initWithVector:(struct vector<long long, std::allocator<long long>> { long long * x0; long long * x1; struct __compressed_pair<long long *, std::allocator<long long>> { long long * x0; } x2; })vector;
- (void *)vector;
@end

#endif /* MetaAIVectorInt_h */
