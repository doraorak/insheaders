//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGAPIStorableObject_h
#define IGAPIStorableObject_h
@import Foundation;

#include "IGStorableObject.h"
#include "IGAPIStorableObjectPandoTree.h"
#include "IGAPIStoreProviding-Protocol.h"
#include "IGEagerStorableMap.h"
#include "IGLazyStorableMap.h"

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol IGStorableMapFetching, OS_dispatch_queue, {basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}, {deque<std::shared_ptr<const pando::Tree>, std::allocator<std::shared_ptr<const pando::Tree>>>="__map_"{__split_buffer<std::shared_ptr<const pando::Tree> *, std::allocator<std::shared_ptr<const pando::Tree> *>>="__first_"^^v"__begin_"^^v"__end_"^^v"__end_cap_"{__compressed_pair<std::shared_ptr<const pando::Tree> **, std::allocator<std::shared_ptr<const pando::Tree> *>>="__value_"^^v}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<std::shared_ptr<const pando::Tree>>>="__value_"Q}}, {shared_ptr<const pando::Node>="__ptr_"^{Node}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<const pando::NodeStore>="__ptr_"^{NodeStore}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<pando::Node::Builder>="__ptr_"^{Builder}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<pando::NodeStore>="__ptr_"^{NodeStore}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<pando::consistency::Service>="__ptr_"^{Service}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<pando::consistency::Update>="__ptr_"^{Update}"__cntrl_"^{__shared_weak_count}};

@interface IGAPIStorableObject : IGStorableObject<IGAPIStoreProviding> {
  /* instance variables */
  NSObject<IGAPIStoreProviding> *_APIStore;
  IGAPIStorableObjectPandoTree *_localTree;
  NSMutableDictionary *_storableObjectsEdges;
  struct recursive_mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _mutex;
  NSMutableDictionary *_updateWithJSONAccumulator;
  BOOL _shouldSkipPNPandoTreeAccessor;
  BOOL _enablePlatformStrings;
  BOOL _subscriptionExperiment;
  BOOL _usePassivePublish;
  BOOL _eagerStorables;
  BOOL _shouldUsePositionHintInSSOT;
  BOOL _dontEncodeNestedStorables;
  BOOL _freeOutsideMutex;
  BOOL _useCppFieldKeys;
  BOOL _ssotFieldCacheEnabled;
  BOOL _skipRedundantPublishes;
  struct shared_ptr<pando::consistency::Service> { struct Service *__ptr_; struct __shared_weak_count *__cntrl_; } _pandoService;
  struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned int x :63 __cap_; unsigned int x :1 __is_long_; } __l; struct __short { char x[23] __data_; unsigned char x[0] __padding_; unsigned int x :7 __size_; unsigned int x :1 __is_long_; } __s; struct __raw { unsigned long long x[3] __words; } __r; } x0; } __value_; } __r_; } _unhashedPrimaryKeyValue;
  IGLazyStorableMap *_storableMap;
  struct shared_mutex { struct __shared_mutex_base { struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } __mut_; struct condition_variable { struct _opaque_pthread_cond_t { long long __sig; char x[40] __opaque; } __cv_; } __gate1_; struct condition_variable { struct _opaque_pthread_cond_t { long long __sig; char x[40] __opaque; } __cv_; } __gate2_; unsigned int __state_; } __base_; } _stateMutex;
  NSMutableDictionary *_ssotFieldCache;
  NSObject<OS_dispatch_queue> *_throttleQueue;
  long long _throttleLimit;
  long long _throttleMS;
  long long _lastPublishedThrottledCounter;
  struct shared_ptr<pando::Node::Builder> { struct Builder *__ptr_; struct __shared_weak_count *__cntrl_; } _updateBuilder;
  struct shared_ptr<pando::NodeStore> { struct NodeStore *__ptr_; struct __shared_weak_count *__cntrl_; } _updateStore;
  struct shared_ptr<pando::NodeStore> { struct NodeStore *__ptr_; struct __shared_weak_count *__cntrl_; } _mergedUpdateStore;
  IGEagerStorableMap *_updateMap;
  struct deque<std::shared_ptr<const pando::Tree>, std::allocator<std::shared_ptr<const pando::Tree>>> { struct __split_buffer<std::shared_ptr<const pando::Tree> *, std::allocator<std::shared_ptr<const pando::Tree> *>> { void * *__first_; void * *__begin_; void * *__end_; struct __compressed_pair<std::shared_ptr<const pando::Tree> **, std::allocator<std::shared_ptr<const pando::Tree> *>> { void * *__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<std::shared_ptr<const pando::Tree>>> { unsigned long long __value_; } __size_; } _cacheQueue;
  NSMutableArray *_mapQueue;
  struct shared_ptr<pando::consistency::Update> { struct Update *__ptr_; struct __shared_weak_count *__cntrl_; } _latestUpdate;
  struct shared_ptr<const pando::Node> { struct Node *__ptr_; struct __shared_weak_count *__cntrl_; } _latestSnapshotNode;
  struct shared_ptr<const pando::NodeStore> { struct NodeStore *__ptr_; struct __shared_weak_count *__cntrl_; } _latestSnapshot;
  NSObject<IGStorableMapFetching> *_latestMap;
}

@property long long activeUpdates;
@property long long updateCounter;
@property long long throttleCounter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)GraphQLName;
- (struct vector<long long, std::allocator<long long>> { long long * x0; long long * x1; struct __compressed_pair<long long *, std::allocator<long long>> { long long * x0; } x2; })collectFieldsToObserve;
- (struct vector<std::string_view, std::allocator<std::string_view>> { void * x0; void * x1; struct __compressed_pair<std::string_view *, std::allocator<std::string_view>> { void * x0; } x2; })collectFieldKeysToObserve;
- (long long)_currentStorableUpdate;
- (void)_drainCacheWithLatestUpdateCounter:(long long)counter treeContainer:(void *)container;
- (void)_clearCache;
- (void)_clearCacheAfterUpdate;
- (void)updateWithExternalTree:(id)tree updateBlock:(id /* block */)block;
- (void)_receivedNonStorableUpdate:(const void *)update;
- (void)_replaceLatestUpdate:(const void *)update clearCache:(BOOL)cache container:(void *)container;
- (void)_replaceLatestUpdate:(const void *)update clearCache:(BOOL)cache;
- (void)_recievedPandoUpdate:(const void *)update summarySourceName:(const void *)name;
- (void)_updateActiveFields:(const void *)fields store:(const void *)store;
- (struct shared_ptr<const pando::NodeStore> { struct NodeStore * x0; struct __shared_weak_count * x1; })_staleCacheFromProvidedStaleTree:(id)tree;
- (struct shared_ptr<const pando::NodeStore> { struct NodeStore * x0; struct __shared_weak_count * x1; })_staleCacheFromCurrentUpdate;
- (struct shared_ptr<const pando::NodeStore> { struct NodeStore * x0; struct __shared_weak_count * x1; })_staleCacheFromLocalTree;
- (void)subscribeToUpdates:(id)updates staleTree:(id)tree executor:(struct shared_ptr<pando::AsyncExecutor> { struct AsyncExecutor * x0; struct __shared_weak_count * x1; })executor;
- (void)subscribeToUpdates:(id)updates staleTree:(id)tree;
- (void)publishStaleUpdate:(id)update;
- (id)initWithCoder:(id)coder;
- (id)initWithPk:(id)pk enablePlatformStrings:(BOOL)strings;
- (id)initCompletelyUnsafeWithNoPk;
- (BOOL)updateWithTreeIfFresh:(id)fresh recursiveSet:(id)set;
- (BOOL)updateWithTreeIfFresh:(id)fresh;
- (void)objectStoreWillClear;
- (void)batchUpdatesToStorableObject:(id /* block */)object;
- (void)updateStorableObjectWithDictionary:(id)dictionary;
- (void)beginDictUpdate;
- (void)_commitBuilderIfReady;
- (void)_dispatchThrottledPublishWithCounter:(long long)counter;
- (void)_publishUpdateToPandoEngine;
- (void)endDictUpdate;
- (void)setIGAPIStoreProvidingOnce:(id)once;
- (id)APIStoreProviding;
- (id)APIStore;
- (BOOL)updateWithTree:(id)tree;
- (BOOL)updateWithStaleTree:(id)tree;
- (id)_fieldCacheWrapperForTreesKey:(const void *)key objcCacheKey:(id)key block:(id /* block */)block;
- (id)_fieldCacheWrapperForTreeKey:(const void *)key objcCacheKey:(id)key block:(id /* block */)block;
- (id)_fieldCacheWrapperForKey:(const void *)key objcCacheKey:(id)key block:(id /* block */)block;
- (struct shared_ptr<const pando::Field> { struct Field * x0; struct __shared_weak_count * x1; })_fieldForKey:(const void *)key;
- (struct shared_ptr<const pando::NodeStore> { struct NodeStore * x0; struct __shared_weak_count * x1; })_nodeStoreForKey:(const void *)key activeField:(void *)field fetcher:(id *)fetcher;
- (struct shared_ptr<pando::Tree> { struct Tree * x0; struct __shared_weak_count * x1; })_treeForKey:(const void *)key fetcher:(id *)fetcher;
- (struct shared_ptr<std::vector<std::shared_ptr<pando::Tree>>> { void * x0; struct __shared_weak_count * x1; })_treesForKey:(const void *)key fetcher:(id *)fetcher;
- (id)_newEagerStorableMap;
- (void)_addFieldToBuilder:(struct shared_ptr<const pando::Field> { struct Field * x0; struct __shared_weak_count * x1; })builder eagerMap:(id)map objcStringForCache:(id)cache;
- (void)_updateField:(const void *)field objcStringForCache:(id)cache;
- (void)_updateNilStorableField:(const void *)field eagerMap:(id)map objcStringForCache:(id)cache;
- (void)_mergeTreeToUpdateStore:(const void *)store forKey:(const void *)key eagerMap:(id)map objcStringForCache:(id)cache;
- (void)_updateTree:(const void *)tree forKey:(const void *)key eagerMap:(id)map objcStringForCache:(id)cache;
- (void)_mergeTreesToUpdateStore:(const void *)store forKey:(const void *)key eagerMap:(id)map objcStringForCache:(id)cache;
- (void)_updateTrees:(const void *)trees forKey:(const void *)key eagerMap:(id)map objcStringForCache:(id)cache;
- (id)stringForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateString:(id)string forPandoKey:(id)key cppKey:(const void *)key;
- (id)stringListForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateStringList:(id)list forPandoKey:(id)key cppKey:(const void *)key;
- (id)booleanForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateBoolean:(id)boolean forPandoKey:(id)key cppKey:(const void *)key;
- (id)booleanListForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateBooleanList:(id)list forPandoKey:(id)key cppKey:(const void *)key;
- (id)intForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateInt:(id)int forPandoKey:(id)key cppKey:(const void *)key;
- (id)intListForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateIntList:(id)list forPandoKey:(id)key cppKey:(const void *)key;
- (id)longForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateLong:(id)long forPandoKey:(id)key cppKey:(const void *)key;
- (id)longListForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateLongList:(id)list forPandoKey:(id)key cppKey:(const void *)key;
- (id)floatForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateFloat:(id)float forPandoKey:(id)key cppKey:(const void *)key;
- (id)floatListForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateFloatList:(id)list forPandoKey:(id)key cppKey:(const void *)key;
- (id)valueForPandoKey:(id)key cppKey:(const void *)key typeName:(const char *)name;
- (void)updateValue:(id)value forPandoKey:(id)key cppKey:(const void *)key;
- (id)valueListForPandoKey:(id)key cppKey:(const void *)key typeName:(const char *)name;
- (void)updateValueList:(id)list forPandoKey:(id)key cppKey:(const void *)key;
- (struct shared_ptr<const pando::Node> { struct Node * x0; struct __shared_weak_count * x1; })_justStorableNode:(id)node;
- (struct shared_ptr<pando::Tree> { struct Tree * x0; struct __shared_weak_count * x1; })_treeWithJustStorableNode:(id)node;
- (void)updateStorable:(id)storable forPandoKey:(id)key cppKey:(const void *)key;
- (id)storableForPandoKey:(id)key cppKey:(const void *)key;
- (void)updateStorableList:(id)list forPandoKey:(id)key cppKey:(const void *)key;
- (id)storableListForPandoKey:(id)key cppKey:(const void *)key;
- (void)dealloc;
- (id)localTree;
- (long long)cacheCount;
@end

#endif /* IGAPIStorableObject_h */
