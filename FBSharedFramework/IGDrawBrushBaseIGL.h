//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGDrawBrushBaseIGL_h
#define IGDrawBrushBaseIGL_h
@import Foundation;

#include "IGDrawIGLCanvasRenderer.h"
#include "NSObject-Protocol.h"

@class NSString, UIColor;
@protocol IGDrawDynamics, {NameHandle="crc32_"I"name_"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}, {shared_ptr<igl::ISamplerState>="__ptr_"^{ISamplerState}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<igl::IVertexInputState>="__ptr_"^{IVertexInputState}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<iglu::material::Material>="__ptr_"^{Material}"__cntrl_"^{__shared_weak_count}};

@interface IGDrawBrushBaseIGL : NSObject<NSObject> {
  /* instance variables */
  IGDrawIGLCanvasRenderer *_canvasRenderer;
  struct shared_ptr<igl::IVertexInputState> { struct IVertexInputState *__ptr_; struct __shared_weak_count *__cntrl_; } _vis;
  struct shared_ptr<iglu::material::Material> { struct Material *__ptr_; struct __shared_weak_count *__cntrl_; } _material;
  struct shared_ptr<igl::ISamplerState> { struct ISamplerState *__ptr_; struct __shared_weak_count *__cntrl_; } _linearSampler;
  struct NameHandle { unsigned int crc32_; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned int x :63 __cap_; unsigned int x :1 __is_long_; } __l; struct __short { char x[23] __data_; unsigned char x[0] __padding_; unsigned int x :7 __size_; unsigned int x :1 __is_long_; } __s; struct __raw { unsigned long long x[3] __words; } __r; } x0; } __value_; } __r_; } name_; } _mvpUniformName;
}

@property (retain, nonatomic) UIColor *color;
@property (readonly, nonatomic) NSString *name;
@property (nonatomic) double size;
@property (readonly, nonatomic) double minSize;
@property (readonly, nonatomic) double maxSize;
@property (readonly, nonatomic) double defaultSize;
@property (readonly, nonatomic) BOOL ignoresColor;
@property (readonly, nonatomic) BOOL isInternal;
@property (nonatomic) struct CGSize { double x0; double x1; } backingSize;
@property (nonatomic) struct _GLKMatrix4 { float x0[16] } projection;
@property (retain, nonatomic) NSObject<IGDrawDynamics> *brushDynamics;
@property (nonatomic) double spacing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithCanvasRenderer:(id)renderer;
- (id)initWithCanvasRenderer:(id)renderer vertexModule:(struct VertexShaderModule { struct shared_ptr<igl::IShaderModule> { struct IShaderModule * x0; struct __shared_weak_count * x1; } x0; struct VertexInputStateDesc { unsigned long long x0; Q]})}}}i} x1[24{VertexAttribute=QiQ{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3] unsigned long long x2; struct Vertex3InputBinding { unsigned long long x0; int x1; unsigned long long x2; } x[128] } x1; })module fragmentModule:(struct shared_ptr<igl::IShaderModule> { struct IShaderModule * x0; struct __shared_weak_count * x1; })module;
- (id)canvasRenderer;
- (struct shared_ptr<igl::IVertexInputState> { struct IVertexInputState * x0; struct __shared_weak_count * x1; })vertexInputState;
- (struct shared_ptr<iglu::material::Material> { struct Material * x0; struct __shared_weak_count * x1; })material;
- (void)prepareToDraw;
- (id)createMark;
- (void)setBlendMode:(struct BlendMode { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; })mode;
- (void)setSampler:(id)sampler forTextureName:(id)name;
@end

#endif /* IGDrawBrushBaseIGL_h */
