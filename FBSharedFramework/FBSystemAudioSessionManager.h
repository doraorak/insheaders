//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBSystemAudioSessionManager_h
#define FBSystemAudioSessionManager_h
@import Foundation;

#include "FBExponentialBackoffTimer.h"
#include "FBKVOController.h"
#include "FBSystemAudioSessionDebugView.h"
#include "FBSystemAudioSessionVolumeChangedListenerAnnouncer.h"

@class AVAudioSession, BOOL *, NSHashTable, NSMutableDictionary;
@protocol OS_dispatch_queue, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}};

@interface FBSystemAudioSessionManager : NSObject {
  /* instance variables */
  AVAudioSession *_audioSession;
  NSObject<OS_dispatch_queue> *_audioSessionQueue;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _clientsLock;
  NSHashTable *_clients;
  NSMutableDictionary *_clientsClasses;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _interrupted;
  BOOL _routeIsExternal;
  BOOL _routeIsBluetooth;
  BOOL _routeIsHeadphoneConnected;
  BOOL _routeIsSpeakerphone;
  BOOL _forceSpeakerphone;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _statusObserversLock;
  NSHashTable *_statusObservers;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _errorObserversLock;
  NSHashTable *_errorObservers;
  FBKVOController *_kvoController;
  FBSystemAudioSessionVolumeChangedListenerAnnouncer *_volumeChangeAnnouncer;
  float _currentOutputVolume;
  BOOL _showingAudioRouteSelector;
  BOOL _memoizeAudioSessionVolumeAccess;
  BOOL _disableRegisterForVolumeChanges;
  BOOL _audioSessionShouldBeHandsOff;
  BOOL _audioSessionBugReportEnabled;
  BOOL _fixVideoCallHeadphonesRemoval;
  BOOL _audioSessionActiveWhileAppRunning;
  BOOL _ignoreAudioSessionUpdatesOnInterrupt;
  BOOL _updateClientsOnAppBackground;
  BOOL _noForceUpdateForAppActivationWithOngoingCall;
  BOOL _appIsBackgrounded;
  BOOL _audioSessionAvoidClearInterruptedOnClientUpdate;
  BOOL _clearInterruptedStateForClientsOnAppFG;
  BOOL _ignoreUnnecessaryInterruptions;
  BOOL _exponentialBackoffRetry;
  BOOL _handleAudioRouteChangeNotificationOnBackgroundThread;
  FBExponentialBackoffTimer *_expBackoffTimer;
  struct { BOOL cancelBackoffRetry; long long baseDurationMs; long long maxBackoffTimeMs; long long maxRetries; } _expBackoffConfig;
  NSMutableDictionary *_clientPreferences;
  int _retryCount;
  BOOL _wasInterruptedBeforeAppFG;
  BOOL _clientSetNoSystemInterruptions;
  BOOL _noAudioSessionUpdateOnForeground;
  BOOL _notifyOtherAppsWhenNoAudioSessionClients;
  BOOL _deactivateSessionOnBackground;
  FBSystemAudioSessionDebugView *_debugView;
  int _debugSetActiveCallsSinceForegroundCount;
  BOOL _keepAudioSessionActiveInBackground;
  BOOL _activateVoipSessions;
  BOOL _allowAVAudioSessionCategoryOptionMixWithOthers;
  BOOL _allowAudioResetWhenCallKitActive;
  BOOL _allowSpkOverrideAfterCategoryChange;
  BOOL _overrideOutputAudioPortOnlyWhenUserRequests;
  BOOL _ignoreAudioResetWhenClientsEmpty;
  BOOL _allowSettingInputOrientation;
}

@property (nonatomic) BOOL callKitActive;
@property (nonatomic) BOOL allowCallKitActiveAdjust;
@property (nonatomic) BOOL allowAudioReset;
@property (nonatomic) BOOL shouldEnableStereoCapture;
@property (nonatomic) BOOL isEchoCancellationEnabled;

/* class methods */
+ (id)sharedInstance;
+ (void)propertiesForClients:(id)clients routeIsExternal:(BOOL)external active:(out BOOL *)active activeOptions:(out unsigned long long *)options category:(out id *)category categoryOptions:(out unsigned long long *)options mode:(out id *)mode portOverrideOptions:(out unsigned long long *)options disablePortOverrides:(inout BOOL *)overrides allowSettingInputOrientation:(BOOL)orientation shouldEnableStereoCapture:(BOOL)capture preferredInputOrientations:(out id *)orientations allowMixin:(BOOL)mixin shouldBeHandsOff:(BOOL)off clientIsCasting:(out BOOL *)casting appBackgrounded:(BOOL)backgrounded prefersExternalMic:(out BOOL *)mic;

/* instance methods */
- (id)initWithAudioSession:(id)session;
- (id)description;
- (id)_updateActivationErrorWithSessionInfo:(id)info active:(BOOL)active activeOptions:(unsigned long long)options;
- (BOOL)_updateAVAudioSessionProperties:(BOOL)properties active:(BOOL)active activeOptions:(unsigned long long)options category:(id)category categoryOptions:(unsigned long long)options preferredInputOrientations:(id)orientations forceupdate:(BOOL)forceupdate mode:(id)mode categoryUpdated:(BOOL *)updated clientIsCasting:(BOOL)casting prefersExternalMic:(BOOL)mic;
- (id)_backgroundAudioEnabledClients;
- (void)_update:(id /* block */)_update forceupdate:(BOOL)forceupdate forceUpdateByClient:(BOOL)client disablePortOverrides:(BOOL)overrides isFromReset:(BOOL)reset skipClients:(BOOL)clients;
- (void)_update:(id /* block */)_update forceupdate:(BOOL)forceupdate forceUpdateByClient:(BOOL)client disablePortOverrides:(BOOL)overrides isFromReset:(BOOL)reset;
- (void)_update:(id /* block */)_update forceupdate:(BOOL)forceupdate forceUpdateByClient:(BOOL)client disablePortOverrides:(BOOL)overrides isFromReset:(BOOL)reset backoffRetrying:(BOOL)retrying;
- (void)_update:(id /* block */)_update forceupdate:(BOOL)forceupdate forceUpdateByClient:(BOOL)client disablePortOverrides:(BOOL)overrides isFromReset:(BOOL)reset backoffRetrying:(BOOL)retrying skipClients:(BOOL)clients;
- (void)_verifyClientPrefersNoSystemInterruptions;
- (void)_setPrefersNoInterruptionsFromSystemAlerts:(BOOL)alerts;
- (void)_runCompletionAndAnnounceStatusChange:(id /* block */)change success:(BOOL)success;
- (BOOL)_shouldForceUpdateByClient;
- (BOOL)_clientPrefersNoInterruptionsFromSystemAlerts;
- (void)resetAudioSessionWithRetries:(unsigned long long)retries retryInterval:(double)interval completion:(id /* block */)completion;
- (void)setMemoizeAudioSessionVolumeAccess:(BOOL)access;
- (BOOL)getVolumeAccessIsMemoized;
- (BOOL)audioSessionShouldBeHandsOff;
- (void)setAudioSessionShouldBeHandsOff:(BOOL)off;
- (void)setAudioSessionBugReportEnabled:(BOOL)enabled;
- (void)setAudioSessionAvoidClearInterruptedOnClientUpdate:(BOOL)update;
- (void)setClearInterruptedStateForClientsOnAppFG:(BOOL)fg;
- (void)setIgnoreUnnecessaryInterruptions:(BOOL)interruptions;
- (BOOL)fixVideoCallHeadphonesRemoval;
- (void)setFixVideoCallHeadphonesRemoval:(BOOL)removal;
- (void)setAudioSessionActiveWhileAppRunning:(BOOL)running activateSession:(BOOL)session forceupdate:(BOOL)forceupdate;
- (void)setIgnoreAudioSessionUpdatesOnInterrupt:(BOOL)interrupt;
- (void)setUpdateClientsOnAppBackground:(BOOL)background;
- (void)setNoForceUpdateForAppActivationWithOngoingCall:(BOOL)call;
- (void)setHandleAudioRouteChangeNotificationOnBackgroundThread:(BOOL)thread;
- (void)setNoAudioSessionUpdateOnForeground:(BOOL)foreground;
- (void)setNotifyOtherAppsWhenNoAudioSessionClients:(BOOL)clients;
- (void)setDeactivateSessionOnBackground:(BOOL)background;
- (void)enableExponentialBackoffTimer:(BOOL)timer config:(struct { BOOL x0; long long x1; long long x2; long long x3; })config;
- (void)addActiveClient:(id)client completion:(id /* block */)completion;
- (void)removeFinishedClient:(id)client completion:(id /* block */)completion;
- (BOOL)_reloadActiveClient:(id)client forceUpdate:(BOOL)update disablePortOverrides:(BOOL)overrides completion:(id /* block */)completion;
- (BOOL)_clientShouldBeUpdated:(id)updated;
- (BOOL)_reloadActiveClientWithSetterSuccessCompletion:(id)completion forceUpdate:(BOOL)update disablePortOverrides:(BOOL)overrides completion:(id /* block */)completion;
- (BOOL)reloadActiveClient:(id)client completion:(id /* block */)completion;
- (BOOL)reloadActiveClientWithSetterSuccessCompletion:(id)completion completion:(id /* block */)completion;
- (BOOL)reloadActiveClient:(id)client forceUpdate:(BOOL)update completion:(id /* block */)completion;
- (BOOL)reloadActiveClientDontChangeRoute:(id)route completion:(id /* block */)completion;
- (BOOL)overrideOutputAudioToSpeakerphone:(BOOL)speakerphone;
- (BOOL)hasClientWithAudioDirection:(unsigned long long)direction;
- (BOOL)isExternal;
- (BOOL)isBluetooth;
- (BOOL)isHeadphoneConnected;
- (BOOL)isSpeakerphone;
- (BOOL)isMuted;
- (float)outputVolume;
- (BOOL)hasRTCClient;
- (BOOL)_clientBackgroundAudioEnabled:(id)enabled;
- (void)_registerForInterruptions;
- (void)_interruptionWithNotification:(id)notification;
- (void)_resumeClientsFromInterruption:(BOOL)interruption;
- (void)_shouldRetryUpdateOnError:(id)error forceUpdateByClient:(BOOL)client disablePortOverrides:(BOOL)overrides isFromReset:(BOOL)reset completion:(id /* block */)completion;
- (void)_updateInterruptedForAddedClient:(id)client updateSucceeded:(BOOL)succeeded;
- (BOOL)_isRTCClient:(id)rtcclient;
- (void)_notifyActiveClientsOfActivationPriority:(id)priority;
- (void)_notifyActiveClientsOfDeactivationPriority:(id)priority;
- (void)_registerForAudioRoutes;
- (void)_audioRouteChangedWithNotification:(id)notification;
- (void)_updateAudioRoutesWithReason:(unsigned long long)reason;
- (void)_updateRoutesWithReason:(unsigned long long)reason withCompletion:(id /* block */)completion;
- (BOOL)_allowSpeakerOverride:(unsigned long long)override withBuiltInSpeaker:(BOOL)speaker andBuiltinReceiver:(BOOL)receiver;
- (void)_setCurrentOutputVolume:(float)volume;
- (void)addAudioSessionStatusObserver:(id)observer;
- (void)removeAudioSessionStatusObserver:(id)observer;
- (void)addOutputVolumeDidChangeListener:(id)listener;
- (void)removeOutputVolumeDidChangeListener:(id)listener;
- (void)addAudioSessionErrorObserver:(id)observer;
- (void)removeAudioSessionErrorObserver:(id)observer;
- (void)announceStatusChange:(SEL)change;
- (void)announceRouteChange:(SEL)change reason:(unsigned long long)reason outputPorts:(id)ports;
- (void)_announceListenerEvent:(struct  *)event;
- (void)dispatchError:(unsigned long long)error systemError:(id)error bypassRetry:(BOOL)retry;
- (BOOL)hasHardwareVoiceCallProcessing;
- (void)waitUtilFinish;
- (void)clearInterruptedState;
- (BOOL)audioSessionInterrupted;
- (id)currentOutputPorts;
- (BOOL)isRoutingToSpeaker;
- (BOOL)isRoutingToReceiver;
- (BOOL)isRoutingToHeadphones;
- (BOOL)isRoutingToBluetooth;
- (BOOL)isRoutingToBluetoothHfp;
- (BOOL)isAnyBluetoothConnected;
- (BOOL)isRoutingToUSB:(id)usb;
- (BOOL)isRoutingToUSB;
- (BOOL)isRoutingToAirPlay:(id)play;
- (BOOL)isRoutingToAirPlay;
- (BOOL)isRoutingToLineOut:(id)out;
- (BOOL)isRoutingToLineOut;
- (BOOL)isRoutingToHDMI:(id)hdmi;
- (BOOL)isRoutingToHDMI;
- (void)_applicationDidBecomeActive;
- (void)_activateSession;
- (void)_applicationWillResignActive;
- (void)_setClientPreferences:(id)preferences forAction:(id)action;
- (void)_didStartBugReport:(id)report;
- (BOOL)isStereoCaptureEnabled;
- (void)updateDebugOverlayVisibility;
- (BOOL)isCallKitActive;
@end

#endif /* FBSystemAudioSessionManager_h */
