//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGAudioBrowserSingleReelAudioPlayerCell_h
#define IGAudioBrowserSingleReelAudioPlayerCell_h
@import Foundation;

#include "IGBouncyCollectionViewCell.h"
#include "FBShimmeringView.h"
#include "IGAsyncTask.h"
#include "IGAudioExplicitLabel.h"
#include "IGGradientView.h"
#include "IGListBindable-Protocol.h"
#include "IGMediaTextButton.h"
#include "IGUserSession.h"
#include "IGVideoView.h"
#include "IGVideoViewListener-Protocol.h"

@class CAShapeLayer, NSString, UILabel;
@protocol IGAudioBrowserSingleReelAudioPlayerCellDelegate;

@interface IGAudioBrowserSingleReelAudioPlayerCell : IGBouncyCollectionViewCell<IGVideoViewListener, IGListBindable> {
  /* instance variables */
  double _currentSongDurationInSeconds;
  BOOL _addAudioButtonVisible;
  FBShimmeringView *_shimmeringView;
  IGGradientView *_topLegibilityGradient;
  IGVideoView *_videoView;
  IGMediaTextButton *_useAudioButton;
  CAShapeLayer *_playIconLayer;
  UILabel *_durationLabel;
  IGAudioExplicitLabel *_primaryLabel;
  UILabel *_secondaryLabel;
  IGAsyncTask *_mediaTask;
  NSString *_durationLabelText;
}

@property (nonatomic) BOOL shimmering;
@property (weak, nonatomic) NSObject<IGAudioBrowserSingleReelAudioPlayerCellDelegate> *delegate;
@property (nonatomic) long long theme;
@property (retain, nonatomic) IGUserSession *userSession;
@property (retain, nonatomic) NSString *analyticsModule;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (BOOL)isShimmering;
- (void)pausePlayback;
- (void)bindViewModel:(id)model;
- (void)videoView:(id)view didUpdateLoadingProgress:(double)progress;
- (void)videoView:(id)view didUpdateCoverImageLoadStatus:(long long)status;
- (void)videoViewDidPrepareVideo:(id)video;
- (void)videoViewDidLoadVideo:(id)video;
- (void)videoView:(id)view didBeginPlayingWithStatus:(id)status;
- (void)videoView:(id)view didUpdatePlaybackStatus:(id)status;
- (void)videoViewDidStallToBufferContent:(id)content;
- (void)videoViewDidPlayThroughToCompletion:(id)completion;
- (void)videoViewItemTimeFullyLoaded:(id)loaded;
- (void)videoViewDidPause:(id)pause;
- (void)videoViewDidStop:(id)stop;
- (void)videoView:(id)view didToggleAudioStatus:(BOOL)status withReason:(long long)reason;
- (void)videoView:(id)view didFailWithError:(id)error;
- (void)videoViewDidAdoptPreconfiguredPlayer:(id)player;
- (void)videoViewDidUpdateAvailableAudioAutoTranslateLanguages:(id)languages;
- (void)_didTapVideoView;
- (void)_didTapAddSong;
- (id)accessibilityLabel;
- (id)accessibilityHint;
- (BOOL)accessibilityActivate;
- (id)accessibilityCustomActions;
@end

#endif /* IGAudioBrowserSingleReelAudioPlayerCell_h */
