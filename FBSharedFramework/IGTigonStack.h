//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGTigonStack_h
#define IGTigonStack_h
@import Foundation;

#include "FBMobileConfigStartupConfigs.h"
#include "FBTMUnexpectedEvent.h"
#include "IGAnalyticsEventLoggingProtocol-Protocol.h"
#include "IGNetworkLayer-Protocol.h"

@class NSArray, NSString;
@protocol OS_dispatch_queue, {atomic<long>="__a_"{__cxx_atomic_impl<long, std::__cxx_atomic_base_impl<long>>="__a_value"Aq}}, {atomic_flag="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}, {basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}, {optional<std::regex>=""(?="__null_state_"c"__val_"{basic_regex<char, std::regex_traits<char>>="__traits_"{regex_traits<char>="__loc_"{locale="__locale_"^{__imp}}"__ct_"^v"__col_"^v}"__flags_"i"__marked_count_"I"__loop_count_"I"__open_count_"i"__start_"{shared_ptr<std::__empty_state<char>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"__end_"^v})"__engaged_"B}, {shared_ptr<IgTigonService>="__ptr_"^{IgTigonService}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<folly::Executor, std::default_delete<folly::Executor>>="__ptr_"{__compressed_pair<folly::Executor *, std::default_delete<folly::Executor>>="__value_"^{Executor}}};

@interface IGTigonStack : NSObject<IGNetworkLayer> {
  /* instance variables */
  struct shared_ptr<IgTigonService> { struct IgTigonService *__ptr_; struct __shared_weak_count *__cntrl_; } _tigonStack;
  NSObject<IGAnalyticsEventLoggingProtocol> *_analyticsEventLogger;
  FBMobileConfigStartupConfigs *_mcStartupConfigs;
  int _httpFlowTimeSamplingRate;
  unsigned int _cellTowerInfoSamplingRate;
  id /* block */ _sandboxProvider;
  unsigned long long _nsInputStreamBufferLimit;
  NSObject<OS_dispatch_queue> *_tigonDelayerQueue;
  unsigned int _flowControlWindowSize;
  BOOL _useHTTP2ForStatic;
  unsigned int _totalReqTimeout;
  unsigned char _http2SessionLimit;
  NSArray *_preconnectList;
  BOOL _fizzEnabled;
  struct atomic<long> { struct __cxx_atomic_impl<long, std::__cxx_atomic_base_impl<long>> { atomic  __a_value; long long x0; } __a_; } _nextSequenceNumber;
  BOOL _enableRequestBehaviorUpdate;
  BOOL _qplHighSampleRateEnabled;
  BOOL _respectAppStartCriticalTagging;
  struct optional<std::regex> { union { char __null_state_; struct basic_regex<char, std::regex_traits<char>> { struct regex_traits<char> { struct locale { struct __imp *__locale_; } __loc_; void *__ct_; void *__col_; } __traits_; int __flags_; unsigned int __marked_count_; unsigned int __loop_count_; int __open_count_; struct shared_ptr<std::__empty_state<char>> { void *__ptr_; struct __shared_weak_count *__cntrl_; } __start_; void *__end_; } __val_; } x0; BOOL __engaged_; } _filteredQplUrlRegex;
  BOOL _tasosHeaderInjection;
  NSString *_throttlingConfigHeader;
  struct atomic_flag { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _loggedFirstFeedRequest;
  struct atomic_flag { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _loggedFirstStoriesRequest;
  struct atomic_flag { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _loggedAppStartType;
  struct atomic_flag { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _loggedFirstNewsInboxRequest;
  struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned int x :63 __cap_; unsigned int x :1 __is_long_; } __l; struct __short { char x[23] __data_; unsigned char x[0] __padding_; unsigned int x :7 __size_; unsigned int x :1 __is_long_; } __s; struct __raw { unsigned long long x[3] __words; } __r; } x0; } __value_; } __r_; } _appStartType;
  long long _currentApplicationState;
  unsigned long long _client;
  struct unique_ptr<folly::Executor, std::default_delete<folly::Executor>> { struct __compressed_pair<folly::Executor *, std::default_delete<folly::Executor>> { struct Executor *__value_; } __ptr_; } _observerExecutor;
  FBTMUnexpectedEvent *_incorrectSamplingWeightEvent;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)_sanitizeMhrSamplingRate;
- (void)_raiseMME:(id)mme;
- (id)initWithLogger:(id)logger certVerificationSamplingRate:(unsigned int)rate andSandboxProvider:(id /* block */)provider inputStreamBufferLimit:(unsigned long long)limit flowControlWindowSize:(unsigned int)size useHTTP2ForStatic:(BOOL)static totalReqTimeout:(unsigned int)timeout http2SessionLimit:(unsigned char)limit preconnectList:(id)list fizzEnabled:(BOOL)enabled client:(unsigned long long)client;
- (id)startRequest:(id)request policy:(id)policy callbacks:(id)callbacks;
- (void)addObserver:(const void *)observer;
@end

#endif /* IGTigonStack_h */
