//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef KFLayerInstanceComponent_h
#define KFLayerInstanceComponent_h
@import Foundation;

#include "KFComponent.h"

@protocol {map<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak, std::less<CALayer<KFCALayerProtocol> *__weak>, std::allocator<std::pair<CALayer<KFCALayerProtocol> *const __weak, CALayer<KFCALayerProtocol> *__weak>>>="__tree_"{__tree<std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, std::__map_value_compare<CALayer<KFCALayerProtocol> *__weak, std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, std::less<CALayer<KFCALayerProtocol> *__weak>>, std::allocator<std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<CALayer<KFCALayerProtocol> *__weak, std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, std::less<CALayer<KFCALayerProtocol> *__weak>>>="__value_"Q}}};

@interface KFLayerInstanceComponent : KFComponent {
  /* instance variables */
  struct map<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak, std::less<CALayer<KFCALayerProtocol> *__weak>, std::allocator<std::pair<CALayer<KFCALayerProtocol> *const __weak, CALayer<KFCALayerProtocol> *__weak>>> { struct __tree<std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, std::__map_value_compare<CALayer<KFCALayerProtocol> *__weak, std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, std::less<CALayer<KFCALayerProtocol> *__weak>>, std::allocator<std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<CALayer<KFCALayerProtocol> *__weak, std::__value_type<CALayer<KFCALayerProtocol> *__weak, CALayer<KFCALayerProtocol> *__weak>, std::less<CALayer<KFCALayerProtocol> *__weak>>> { unsigned long long __value_; } __pair3_; } __tree_; } _instances;
}

/* class methods */
+ (unsigned short)componentClassIdentifier;

/* instance methods */
@end

#endif /* KFLayerInstanceComponent_h */
