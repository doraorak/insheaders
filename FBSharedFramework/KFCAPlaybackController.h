//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef KFCAPlaybackController_h
#define KFCAPlaybackController_h
@import Foundation;

#include "KFLayerPlaybackListenerAnnouncer.h"
#include "KFPlaybackControllerDelegate-Protocol.h"

@class CALayer, NSOperationQueue;

@interface KFCAPlaybackController : NSObject {
  /* instance variables */
  CALayer *_layer;
  double _duration;
  BOOL _readyForPlayback;
  unsigned long long _playCountRemaining;
  unsigned long long _playCountDesired;
  unsigned long long _playbackState;
  BOOL _resetPlayCountOnPlay;
  KFLayerPlaybackListenerAnnouncer *_announcer;
  long long _queueSuspendCount;
  NSOperationQueue *_operationQueue;
  long long _queuedOperationCount;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _queueMutex;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _suspendCountMutex;
  id /* block */ _playEndBlock;
  id /* block */ _readyForPlaybackBlock;
  unsigned long long _mostRecentStateCommand;
  struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } _lastPlaybackCommandMutex;
}

@property (nonatomic) BOOL allowQueuedCommands;
@property (weak, nonatomic) NSObject<KFPlaybackControllerDelegate> *delegate;

/* instance methods */
- (id)init;
- (void)setupWithLayer:(id)layer duration:(double)duration;
- (void)resetWithLayer:(id)layer;
- (void)play;
- (void)pause;
- (void)stop;
- (void)seekToProgress:(double)progress;
- (void)seekToFinished;
- (void)seekToProgressInNextRunLoopOnMainQueue:(double)queue;
- (void)playForever;
- (BOOL)isPlaying;
- (BOOL)isCurrentlyPlaying;
- (BOOL)isFinished;
- (long long)playCountRemaining;
- (void)setOnPlayEnd:(id /* block */)end;
- (id /* block */)onPlayEnd;
- (void)setOnReadyForPlayback:(id /* block */)playback;
- (id /* block */)onReadyForPlayback;
- (id)playbackAnnouncer;
- (void)_playWithCompletion:(id /* block */)completion queue:(id)queue;
- (void)_stopAndResetPlayCount:(BOOL)count completion:(id /* block */)completion queue:(id)queue;
- (void)_playCount:(long long)count withCompletion:(id /* block */)completion queue:(id)queue resetupWorld:(BOOL)world;
- (void)_stopAndPerformResetPlayCountCheck:(BOOL)check;
- (void)_performPlaybackOperation:(id /* block */)operation;
- (BOOL)_canExecuteSynchronously;
- (void)_incrementQueuedOperationCount;
- (void)_decrementQueuedOperationCount;
- (void)_suspendOperationQueue:(BOOL)queue;
- (id)concreteSelf;
@end

#endif /* KFCAPlaybackController_h */
