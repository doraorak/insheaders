//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef OCMMediaManager_h
#define OCMMediaManager_h
@import Foundation;

#include "FBCCPlaybackPixelBufferProviding-Protocol.h"
#include "FBCaptureModeMountingDescriptor.h"
#include "FBMPDataCallbackOutput.h"
#include "FBMPInput-Protocol.h"
#include "OCMCaptureModeOwning-Protocol.h"
#include "OCMComponentManagingContext-Protocol.h"

@class NSArray, NSString;
@protocol FBCCPlaybackControllerDelegate, OCMComponentFilterProtocol, OCMComponentGestureProtocol, OCMMediaOutputHandler, OCMMediaPlaybackController, OCMMediaProvider;

@interface OCMMediaManager : NSObject<FBCCPlaybackPixelBufferProviding, OCMCaptureModeOwning> {
  /* instance variables */
  NSObject<OCMComponentManagingContext> *_context;
  NSObject<FBMPInput> *_videoDataInput;
  FBMPDataCallbackOutput *_videoDataOutput;
  NSObject<OCMComponentFilterProtocol> *_mediaFilterComponent;
  NSObject<OCMComponentGestureProtocol> *_mediaGestureComponent;
  NSArray *_filterDescriptors;
}

@property (readonly, nonatomic) FBCaptureModeMountingDescriptor *mountingDescriptor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct OpaqueCMTimebase * timebase;
@property (readonly, nonatomic) BOOL isStatic;
@property (weak, nonatomic) NSObject<FBCCPlaybackControllerDelegate> *delegate;
@property (nonatomic) BOOL muted;
@property (readonly, nonatomic) BOOL playing;
@property (nonatomic) float volume;
@property (readonly, nonatomic) double progress;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } currentTime;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } duration;
@property (nonatomic) double playbackRate;
@property (readonly, nonatomic) double effectivePlaybackRate;
@property (nonatomic) struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } playableRange;
@property (nonatomic) BOOL repeats;
@property (nonatomic) BOOL isReadyToPlay;
@property (weak, nonatomic) NSObject<OCMMediaProvider> *mediaProvider;
@property (weak, nonatomic) NSObject<OCMMediaPlaybackController> *mediaPlaybackController;
@property (weak, nonatomic) NSObject<OCMMediaOutputHandler> *outputHandler;
@optional
@property (readonly, nonatomic) BOOL supportsBackgroundProcessing;
@optional
@property (readonly, nonatomic) BOOL isRotationLocked;

/* instance methods */
- (id)initWithMediaProvider:(id)provider playbackController:(id)controller mediaOutputHandler:(id)handler;
- (void)attachCaptureGestureRecognizersToView:(id)view translatingToView:(id)view;
- (void)clearInMemoryCacheWithCompletion:(id /* block */)completion;
- (void)exportFilterConfigsWithCompletion:(id /* block */)completion;
- (id)componentID;
- (id)dependentComponentIDs;
- (long long)supportedControllerStates;
- (void)didAttachWithContext:(id)context;
- (void)willDetachWithContext:(id)context;
- (id)captureMode;
- (void)didMountWithCoordinatingProvider:(id)provider;
- (void)willUnmount;
- (void)filterTopologyDidChange;
- (id)consumerPorts;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })providerTimeForHostTime:(double)time;
- (BOOL)hasNewPixelBufferForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (struct __CVBuffer *)copyPixelBufferForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time timeForDisplay:(struct  *)display;
- (BOOL)isMuted;
- (void)play;
- (void)playFromStart;
- (void)playFromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)playInReverse;
- (void)pause;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time completionHandler:(id /* block */)handler;
- (void)seekToPosition:(double)position completionHandler:(id /* block */)handler;
- (BOOL)isPlaying;
@end

#endif /* OCMMediaManager_h */
