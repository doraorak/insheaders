//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGFNFVideoProfilerDashEventDistributor_h
#define IGFNFVideoProfilerDashEventDistributor_h
@import Foundation;

#include "FNFDashEventListener-Protocol.h"

@class NSString;
@protocol IGFNFFetchEventListener, IGFNFVideoProfilerDashEventListener, IGFNFVideoQualityListener, IGVideoPlayerDashEventListener;

@interface IGFNFVideoProfilerDashEventDistributor : NSObject<FNFDashEventListener> {
  /* instance variables */
  NSObject<IGFNFFetchEventListener> *_fetchEventLogger;
  NSObject<IGFNFVideoProfilerDashEventListener> *_limitedEventListener;
  NSObject<IGFNFVideoQualityListener> *_videoQualityListener;
}

@property (weak) NSObject<IGVideoPlayerDashEventListener> *videoPlayerDashEventListener;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithEventListener:(id)listener limitedEventListener:(id)listener videoQualityListener:(id)listener videoPlayerDashEventListener:(id)listener;
- (void)availableQualitiesChanged:(id)changed;
- (void)availableAudioRolesChanged:(id)changed;
- (void)chunkFetchCompleted:(id)completed playerMetadata:(id)metadata trackType:(long long)type;
- (void)chunkFetchStarted:(id)started playerMetadata:(id)metadata bandwidth:(int)bandwidth chunkDurationMs:(long long)ms trackType:(long long)type;
- (void)videoRepresentationIdChanged:(id)changed codec:(id)codec encodingTag:(id)tag debugDetails:(id)details;
- (void)playlistLoadedIsMCM:(BOOL)mcm manifestIdentifier:(id)identifier uumosTags:(id)tags;
- (void)audioMeterLevelChanged:(double)changed;
- (void)isDrmVideoChanged:(BOOL)changed;
- (void)audioRepresentationIdChanged:(id)changed codec:(id)codec encodingTag:(id)tag debugDetails:(id)details;
- (void)audioRepresentationIdChanged:(id)changed codec:(id)codec encodingTag:(id)tag audioRoleMetadata:(id)metadata debugDetails:(id)details;
- (void)asbdChanged:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })changed;
- (void)audioContainerFormatChanged:(id)changed;
- (void)availableAudioQualitiesChanged:(id)changed;
- (void)captionContainerFormatChanged:(id)changed;
- (void)captionRepresentationIdChanged:(id)changed codec:(id)codec lang:(id)lang;
- (void)chunkBufferContentsChanged:(id)changed;
- (void)chunkEmsgParsed:(id)parsed absoluteStartTime:(double)time fetchUrl:(id)url;
- (void)clientLatencyChanged:(long long)changed bufferEndToLiveHeadDelta:(long long)delta;
- (void)cmafChunkCountChangedForTrackType:(long long)type cmafChunks:(int)chunks;
- (void)currentServerTimeMsChanged:(long long)changed;
- (void)elapsedVideoTimestampChanged:(double)changed;
- (void)firstAvTimeMsChanged:(long long)changed;
- (void)isAbrEnabledChanged:(BOOL)changed;
- (void)isManifestServiceChanged:(BOOL)changed;
- (void)isPredictivePlaybackChanged:(BOOL)changed;
- (void)audioTimeLoadedChanged:(struct { long long x0; int x1; unsigned int x2; long long x3; })changed;
- (void)lastVideoFrameTimeMsChanged:(long long)changed;
- (void)manifestFetchCompleted:(id)completed;
- (void)nextLiveAudioTimestampChanged:(double)changed;
- (void)playbackResolutionMosChanged:(id)changed;
- (void)publishFrameTimeChanged:(double)changed;
- (void)publishTimeChanged:(id)changed;
- (void)resourceHostChanged:(id)changed;
- (void)retryAttemptForError:(id)error errorData:(id)data;
- (void)segmentJumpedFrom:(long long)from to:(long long)to timeBasedJump:(BOOL)jump;
- (void)clientInfraTypeChangedWithSegmentType:(id)type representationType:(id)type;
- (void)serverDelayChanged:(long long)changed;
- (void)videoContainerFormatChanged:(id)changed;
- (void)videoDidEndOnWarning:(id)warning;
@end

#endif /* IGFNFVideoProfilerDashEventDistributor_h */
