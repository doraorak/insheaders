//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGStoryTextEntryViewController_h
#define IGStoryTextEntryViewController_h
@import Foundation;

#include "UIViewController.h"
#include "FBCancelable-Protocol.h"
#include "IGDevicePermissionLocationCoreAPI.h"
#include "IGGestureHandler-Protocol.h"
#include "IGKeyboardObserver.h"
#include "IGKeyboardObserverFrameChangeDelegate-Protocol.h"
#include "IGKeyboardObserverHideDelegate-Protocol.h"
#include "IGKeyboardObserverShowDelegate-Protocol.h"
#include "IGLocationPickerDelegate-Protocol.h"
#include "IGPartialModalSheetViewController.h"
#include "IGStoryColorProvider-Protocol.h"
#include "IGStoryStickerEditingViewControllerProtocol-Protocol.h"
#include "IGStoryTextEntryControlsOverlayView.h"
#include "IGStoryTextEntryTextViewDelegate-Protocol.h"
#include "IGStoryTextEntryViewControllerConfiguration.h"
#include "IGStoryTextEntryViewControllerDelegate-Protocol.h"
#include "IGStoryTextWrapperView.h"
#include "IGUserSession.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class CLLocation, NSArray, NSNumber, NSSet, NSString, UISelectionFeedbackGenerator, UITapGestureRecognizer, UIView;

@interface IGStoryTextEntryViewController : UIViewController<IGKeyboardObserverFrameChangeDelegate, IGKeyboardObserverShowDelegate, IGKeyboardObserverHideDelegate, IGLocationPickerDelegate, IGStoryTextEntryTextViewDelegate, UIGestureRecognizerDelegate, IGGestureHandler, IGStoryStickerEditingViewControllerProtocol> {
  /* instance variables */
  IGKeyboardObserver *_keyboardObserver;
  NSString *_module;
  BOOL _canApplyInitialTextEmphasis;
  BOOL _removeDefaultEmphasisForTextBeginningWithEmoji;
  struct IGOverlayViewLocationInfo { struct CGPoint { double x; double y; } position; struct CGSize { double width; double height; } size; struct CGPoint { double x; double y; } translation; double scale; double rotation; BOOL isMirroredHorizontally; } _initialTextViewLocation;
  UITapGestureRecognizer *_tapToDismissGestureRecognizer;
  long long _dismissalSource;
  NSSet *_alreadyMentionedUsers;
  NSObject<FBCancelable> *_animationScheduledCall;
  CLLocation *_mediaEXIFLocation;
  NSString *_locationDevicePermissionExperienceId;
  IGDevicePermissionLocationCoreAPI *_locationPermissionCoreAPI;
  double _additionalVerticalPadding;
  long long _creationEntryPoint;
  IGPartialModalSheetViewController *_sendMentionsPartialSheetViewController;
  BOOL _showLargerTextFormatButtons;
  BOOL _allowShowingNewFontNux;
  BOOL _isFligAnimationsEnabled;
  BOOL _isStackedToolSelectorEnabled;
  unsigned long long _stackedToolSelectorMenuConfiguration;
  BOOL _shouldDisableLinkifyMentions;
  BOOL _dismissing;
  BOOL _selectingColorFromScreen;
  BOOL _textDimmed;
  unsigned long long _maxHashtagCount;
  UIView *_textViewContainer;
  IGStoryTextEntryControlsOverlayView *_controlsOverlayView;
  IGStoryTextWrapperView *_textWrapperView;
  NSObject<IGStoryColorProvider> *_colorProviderDelegate;
  UIView *_dimmingView;
  double _initialPointSize;
  UISelectionFeedbackGenerator *_feedbackGenerator;
}

@property (readonly, nonatomic) IGUserSession *userSession;
@property (readonly, nonatomic) IGStoryTextEntryViewControllerConfiguration *configuration;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentRegion;
@property (nonatomic) double contentRegionCornerRadius;
@property (retain, nonatomic) NSNumber *playbackDuration;
@property (nonatomic) long long editorStyle;
@property (nonatomic) long long entryPoint;
@property (readonly, nonatomic) BOOL isNewlyCreatedTextView;
@property (weak, nonatomic) NSObject<IGStoryTextEntryViewControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *backgroundViews;
@property (readonly, nonatomic) UIView *editableStickerView;
@property (readonly, nonatomic) double editableStickerScaleWhileEditing;
@property (readonly, nonatomic) BOOL editableStickerViewIsNewlyCreated;
@property (readonly, nonatomic) BOOL shouldDisableZoomTransitionOnEditStart;
@property (readonly, nonatomic) BOOL shouldDiscardStickerOnDismissal;
@property (readonly, nonatomic) NSString *stickerEditSessionLoggingId;
@optional
@property (readonly, nonatomic) NSArray *secondaryEditableStickerViews;

/* class methods */
+ (id)newTextViewWithTextFormat:(id)format fontSize:(double)size configurePlaceholder:(BOOL)placeholder creationEntryPoint:(long long)point userSession:(id)session;
+ (id)newTextViewWithTextColor:(id)color font:(id)font textFormat:(id)format creationEntryPoint:(long long)point userSession:(id)session;
+ (id)_storyMentionsFromTextView:(id)view storyRegionsEnabled:(BOOL)enabled compositionSize:(struct CGSize { double x0; double x1; })size overlayView:(id)view isTextViewPinned:(BOOL)pinned;
+ (id)_hashtagTapModelsFromTextView:(id)view storyRegionsEnabled:(BOOL)enabled compositionSize:(struct CGSize { double x0; double x1; })size overlayView:(id)view isTextViewPinned:(BOOL)pinned;

/* instance methods */
- (id)initWithTextWrapperView:(id)view textFormat:(id)format userSession:(id)session configuration:(id)configuration shouldUseStickyTextBackground:(BOOL)background mediaEXIFLocation:(id)exiflocation creationEntryPoint:(long long)point module:(id)module;
- (BOOL)prefersStatusBarHidden;
- (void)setFontSize:(double)size;
- (long long)preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (BOOL)isEditingText;
- (void)keyboardObserver:(id)observer keyboardFrameDidChangeWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserver:(id)observer keyboardFrameWillChangeWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserver:(id)observer keyboardWillShowWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserver:(id)observer keyboardWillHideWithBeginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame endFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame duration:(double)duration curve:(long long)curve;
- (void)keyboardObserverKeyboardDidShow:(id)show;
- (void)keyboardObserverKeyboardDidHide:(id)hide;
- (BOOL)textEntryTextView:(id)view shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range replacementText:(id)text;
- (void)textEntryTextViewDidBeginEditing:(id)editing;
- (void)textEntryTextViewDidChange:(id)change;
- (void)textEntryTextViewDidChangeSelection:(id)selection;
- (BOOL)textEntryTextViewShouldEndEditing:(id)editing;
- (void)textEntryTextViewDidEndEditing:(id)editing;
- (void)_finish;
- (void)locationPickerViewController:(id)controller didFinish:(BOOL)finish withLocation:(id)location;
- (void)locationPickerViewController:(id)controller didFinish:(BOOL)finish withCustomLocation:(id)location;
- (void)locationPickerViewControllerDidTapRemoveLocation:(id)location;
- (void)_onLocationStickerTapped;
- (void)_backgroundTapped;
- (void)_doneButtonTapped;
- (void)_textAnimationToggleButtonDidUpdate;
- (void)_startAnimation;
- (void)_didTapAnimatedStickerView;
- (BOOL)_shouldStartAnimation;
- (void)_textAlignmentButtonDidUpdateDueToExplicitAlignmentAdjustmentAction;
- (void)_textEmphasisToggleButtonDidUpdate;
- (void)_handleTextEmphasisToggleButtonDidUpdateWithTextOutline;
- (void)_handleTextEmphasisButtonDidUpdateWithNoOutline;
- (void)_handleLeftSwipeGesture:(id)gesture;
- (void)_handleRightSwipeGesture:(id)gesture;
- (BOOL)_isSwipeGestureOnFeelsLikeIGToolMenu:(id)menu;
- (void)textEntryControls:(id)controls didSelectColor:(id)color;
- (void)textEntryControls:(id)controls didSelectFontSize:(double)size;
- (void)textEntryControls:(id)controls didSelectUser:(id)user;
- (void)textEntryControlsDidSelectNewGroupMention:(id)mention;
- (void)textEntryControls:(id)controls didSelectGroupMention:(id)mention;
- (void)textEntryControls:(id)controls didSelectHashtag:(id)hashtag;
- (void)textEntryControls:(id)controls didUpdateSuggestedHashtags:(id)hashtags;
- (void)textEntryControlsBeganSelectingColorFromScreen:(id)screen;
- (void)textEntryControlsFinishedSelectingColorFromScreen:(id)screen;
- (void)textEntryControls:(id)controls didFinishSelectingColorFromSource:(long long)source;
- (void)textEntryControls:(id)controls didMoveEyedropperToPointInWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates;
- (void)textEntryControlsDidChangeTextFormatWhileScrolling:(id)scrolling;
- (void)textEntryControlsDidChangeTextFormatEndedScrolling:(id)scrolling;
- (void)textEntryControlsColorPickerFormatPickerToggleButtonDidToggle:(id)toggle;
- (void)textEntryControlsMentionLocationPickerDidSelectMention:(id)mention;
- (void)textEntryControlsMentionLocationPickerDidSelectLocation:(id)location;
- (void)textEntryControlsMentionLocationPickerDidSelectRewriteThis:(id)this;
- (void)textEntryControlsDidToggleToTextFormat:(id)format;
- (void)textEntryControlsDidTapTextToSpeechButton:(id)button textToSpeechConfiguration:(id)configuration;
- (void)textEntryControlsDidTapAnimationOption:(id)option animationType:(long long)type;
- (void)_applyChangesForAnimationType:(long long)type;
- (void)textEntryControlsDidTapEffectOption:(id)option effectType:(long long)type;
- (id)textEntryControls:(id)controls colorAtWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates;
- (BOOL)textEntryControlsShouldShowGroupMentionStickerSuggestions:(id)suggestions;
- (BOOL)canRespondToGesture:(id)gesture;
- (id)_currentEmphasis;
- (BOOL)_creationEntryPointAllowsTextOutline;
- (BOOL)_areOutlinesEnabled;
@end

#endif /* IGStoryTextEntryViewController_h */
