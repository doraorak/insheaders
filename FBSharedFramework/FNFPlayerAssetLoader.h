//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FNFPlayerAssetLoader_h
#define FNFPlayerAssetLoader_h
@import Foundation;

#include "FNFAsset-Protocol.h"
#include "FNFAssetResourceLoaderDelegate-Protocol.h"
#include "FNFDashEventListener-Protocol.h"
#include "FNFPSRProfiling-Protocol.h"
#include "FNFPlayerAssetLoading-Protocol.h"
#include "FNFStitchContext.h"
#include "FNFVideoAssetMetadata.h"
#include "FNFVideoPlaybackDashEventDistributor.h"
#include "FNFVideoPlaybackItem.h"

@class NSError, NSSet, NSString, NSURL;
@protocol FNFBandwidthProvider, FNFDashVideoDrmHandler, FNFLogging, FNFPlayerAssetLoaderDelegate, FNFVideoPlaybackAssetEventListener;

@interface FNFPlayerAssetLoader : NSObject<FNFDashEventListener, FNFPlayerAssetLoading> {
  /* instance variables */
  NSError *_error;
  NSObject<FNFAssetResourceLoaderDelegate> *_assetResourceLoaderDelegate;
  NSString *_trackerID;
  NSString *_uuid;
  double _loadRequestTime;
  FNFVideoPlaybackItem *_videoPlaybackItem;
  unsigned long long _state;
  NSURL *_playableURL;
  BOOL _isSpherical;
  NSSet *_analyticsTags;
  NSObject<FNFPlayerAssetLoaderDelegate> *_assetLoaderDelegate;
  NSObject<FNFDashVideoDrmHandler> *_drmHandler;
  NSObject<FNFPSRProfiling> *_psrProfiler;
  NSObject<FNFLogging> *_logger;
  int _loaderErrorRetryCount;
  int _maximumRetryCount;
  NSString *_reloadReason;
  BOOL _isAudioDescriptionAccessibilityEnabled;
  NSString *_userLang;
  FNFStitchContext *_stitchContext;
  NSObject<FNFBandwidthProvider> *_bandwidthProvider;
  BOOL _isHD;
  NSString *_userSelectedQuality;
  FNFVideoPlaybackDashEventDistributor *_dashEventDistributor;
  NSObject<FNFDashEventListener> *_fnfDashEventListener;
  NSObject<FNFVideoPlaybackAssetEventListener> *_videoPlaybackAssetEventListener;
  FNFVideoAssetMetadata *_assetMetadata;
  unsigned char _pendingSetAudioRole;
  NSString *_pendingSetAudioLanguage;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<FNFAsset> *asset;

/* instance methods */
- (id)initWithVideoPlaybackItem:(id)item assetResourceLoaderDelegate:(id)delegate trackerID:(id)id analyticsTags:(id)tags videoPlaybackAssetEventListener:(id)listener assetLoaderDelegate:(id)delegate psrProfiler:(id)profiler logger:(id)logger uuid:(id)uuid stitchContext:(id)context bandwidthProvider:(id)provider isHD:(BOOL)hd userSelectedQuality:(id)quality drmHandler:(id)handler muted:(BOOL)muted;
- (void)resetPlayerAssetLoader;
- (void)assetCreated:(id)created;
- (void)assetLoaded:(id)loaded duration:(double)duration videoSize:(struct CGSize { double x0; double x1; })size;
- (void)updateDuration:(double)duration;
- (void)updateVideoTimeLoaded:(double)loaded;
- (void)updateCurrentVideoSizeWithFormatDesc:(struct opaqueCMFormatDescription *)desc;
- (void)setPlaybackStartTime:(double)time;
- (void)setMuted:(BOOL)muted;
- (id)assetMetadata;
- (void)asbdChanged:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })changed;
- (void)isAbrEnabledChanged:(BOOL)changed;
- (void)availableQualitiesChanged:(id)changed;
- (void)availableAudioQualitiesChanged:(id)changed;
- (void)availableAudioRolesChanged:(id)changed;
- (void)videoContainerFormatChanged:(id)changed;
- (void)audioContainerFormatChanged:(id)changed;
- (void)captionContainerFormatChanged:(id)changed;
- (void)videoRepresentationIdChanged:(id)changed codec:(id)codec encodingTag:(id)tag debugDetails:(id)details;
- (void)audioRepresentationIdChanged:(id)changed codec:(id)codec encodingTag:(id)tag debugDetails:(id)details;
- (void)audioRepresentationIdChanged:(id)changed codec:(id)codec encodingTag:(id)tag audioRoleMetadata:(id)metadata debugDetails:(id)details;
- (void)captionRepresentationIdChanged:(id)changed codec:(id)codec lang:(id)lang;
- (void)playbackResolutionMosChanged:(id)changed;
- (void)chunkFetchStarted:(id)started playerMetadata:(id)metadata bandwidth:(int)bandwidth chunkDurationMs:(long long)ms trackType:(long long)type;
- (void)chunkEmsgParsed:(id)parsed absoluteStartTime:(double)time fetchUrl:(id)url;
- (void)chunkFetchCompleted:(id)completed playerMetadata:(id)metadata trackType:(long long)type;
- (void)cmafChunkCountChangedForTrackType:(long long)type cmafChunks:(int)chunks;
- (void)retryAttemptForError:(id)error errorData:(id)data;
- (void)manifestFetchCompleted:(id)completed;
- (void)elapsedVideoTimestampChanged:(double)changed;
- (void)nextLiveAudioTimestampChanged:(double)changed;
- (void)publishTimeChanged:(id)changed;
- (void)publishFrameTimeChanged:(double)changed;
- (void)firstAvTimeMsChanged:(long long)changed;
- (void)serverDelayChanged:(long long)changed;
- (void)currentServerTimeMsChanged:(long long)changed;
- (void)clientLatencyChanged:(long long)changed bufferEndToLiveHeadDelta:(long long)delta;
- (void)lastVideoFrameTimeMsChanged:(long long)changed;
- (void)isDrmVideoChanged:(BOOL)changed;
- (void)isManifestServiceChanged:(BOOL)changed;
- (void)resourceHostChanged:(id)changed;
- (void)clientInfraTypeChangedWithSegmentType:(id)type representationType:(id)type;
- (void)chunkBufferContentsChanged:(id)changed;
- (void)segmentJumpedFrom:(long long)from to:(long long)to timeBasedJump:(BOOL)jump;
- (void)videoDidEndOnWarning:(id)warning;
- (void)isPredictivePlaybackChanged:(BOOL)changed;
- (void)audioTimeLoadedChanged:(struct { long long x0; int x1; unsigned int x2; long long x3; })changed;
- (void)playlistLoadedIsMCM:(BOOL)mcm manifestIdentifier:(id)identifier uumosTags:(id)tags;
- (void)audioMeterLevelChanged:(double)changed;
- (void)loadWithCompletion:(id /* block */)completion;
- (void)_reloadWithCompletion:(id /* block */)completion reason:(id)reason;
- (void)_transitionToErrorStateWithErrorCode:(unsigned long long)code playbackItem:(id)item completion:(id /* block */)completion;
- (id)_buildAssetWithDashConfig:(const struct FNFDashConfig *)config url:(id)url playlist:(id)playlist;
- (void)_loadVideoWithCompletion:(id /* block */)completion;
- (void)_itemDidWarn:(id)warn;
- (void)setState:(unsigned long long)state;
- (void)_loadAssetValuesAsynchronouslyWithCompletion:(id /* block */)completion;
- (void)_assetDidLoadWithStatus:(long long)status duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration debugDetails:(id)details error:(id)error completion:(id /* block */)completion;
- (void)invalidate;
- (double)loadingDuration;
- (id)loaderDebugStatus;
- (id)reloadReason;
- (id)bandwidthEstimatorInfo;
- (id)ttfbDebugInfo;
- (id)streamFormat;
- (void)setPlayerSize:(struct CGSize { double x0; double x1; })size;
- (void)setPlayerFormat:(unsigned long long)format;
- (void)setIgnoreAvoidOnCell:(BOOL)cell;
- (void)setLatencySettingWithDecision:(id)decision;
- (void)setIsSoundMuted:(BOOL)muted;
- (void)setVideoContentType:(unsigned long long)type;
- (void)setVideoPSRProfiler:(id)psrprofiler;
- (void)setIsAudioDescriptionAccessibilityEnabled:(BOOL)enabled;
- (void)setUserLang:(id)lang;
- (void)selectAudioRole:(unsigned char)role language:(id)language;
- (void)updateAnalyticsTags:(id)tags;
- (unsigned long long)state;
- (id)playableURL;
- (BOOL)isHD;
- (BOOL)isAssetFNFLooping;
- (void)_updatePrefetchMetadataWithResponse:(id)response;
- (void)_saveChunkFetchInfo:(id)info trackType:(long long)type;
@end

#endif /* FNFPlayerAssetLoader_h */
