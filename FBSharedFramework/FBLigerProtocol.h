//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef FBLigerProtocol_h
#define FBLigerProtocol_h
@import Foundation;

@interface FBLigerProtocol : NSObject
/* class methods */
+ (BOOL)isInitialized;
+ (void *)settings;
+ (struct TraceEvent { unsigned char x0; unsigned int x1; unsigned int x2; unsigned int x3; struct time_point<std::chrono::steady_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> { struct duration<long long, std::ratio<1, 1000000000>> { long long x0; } x0; } x4; struct time_point<std::chrono::steady_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> { struct duration<long long, std::ratio<1, 1000000000>> { long long x0; } x0; } x5; struct map<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData, std::less<proxygen::TraceFieldType>, std::allocator<std::pair<const proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>>> { struct __tree<std::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, std::__map_value_compare<proxygen::TraceFieldType, std::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, std::less<proxygen::TraceFieldType>>, std::allocator<std::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<proxygen::TraceFieldType, std::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, std::less<proxygen::TraceFieldType>>> { unsigned long long x0; } x2; } x0; } x6; })traceEventForEventName:(id)name;
+ (id)getCircularLogLines;
+ (struct vector<proxygen::CircularLogSink::RequestResponseInfo, std::allocator<proxygen::CircularLogSink::RequestResponseInfo>> { struct RequestResponseInfo * x0; struct RequestResponseInfo * x1; struct __compressed_pair<proxygen::CircularLogSink::RequestResponseInfo *, std::allocator<proxygen::CircularLogSink::RequestResponseInfo>> { struct RequestResponseInfo * x0; } x2; })getInflightRequestResponseInfos;
+ (void)setNetworkStateProvider:(id)provider;
+ (void)setStartupStateProvider:(id)provider;
+ (void)setNetSeerConfigProvider:(id)provider;
+ (struct NetworkStatusMonitor *)getNetworkStatusMonitor;
+ (void)initLigerWithConfig:(id)config;
+ (void)setUserCertEnabled:(BOOL)enabled;
+ (BOOL)isUnderTest;
+ (BOOL)shouldLigerHandleUrlOnApp:(id)app;
@end

#endif /* FBLigerProtocol_h */
