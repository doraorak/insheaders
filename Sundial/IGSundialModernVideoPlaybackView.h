//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.468, BuildCommit: a1243d3a18f9b0e29af55a12ad74ccd2cd1f0abc)
//
//    - LC_BUILD_VERSION:  Platform: iOS, MinOS: 15.0, SDK: 17.4, Tool: ld (16.0)
//    - LC_SOURCE_VERSION: 
//
#ifndef IGSundialModernVideoPlaybackView_h
#define IGSundialModernVideoPlaybackView_h
@import Foundation;

#include "UIView.h"
#include "IGSundialStickerOverlayView.h"
#include "IGSundialVideoPlaybackSessionInfo.h"
#include "IGSundialVideoPlaybackViewDelegate-Protocol.h"
#include "IGSundialVideoPlaybackViewType-Protocol.h"
#include "IGSundialViewerMediaBackgroundView.h"
#include "IGSundialViewerMediaPrefetchManager.h"
#include "_TtC17IGZoomInteraction17IGZoomInteraction.h"
#include "_TtC28IGUnifiedVideoMediaContainer32IGUnifiedVideoMediaContainerView.h"
#include "_TtP17IGZoomInteraction25IGZoomInteractionDelegate_-Protocol.h"
#include "_TtP28IGUnifiedVideoMediaContainer40IGUnifiedVideoMediaContainerViewDelegate_-Protocol.h"

@class IGImmersiveFeedBackgroundConfiguration, IGPhoto, IGUnifiedVideoBufferingManager, IGVideo, IGVideoView, NSDictionary, NSString, NSURL, UIView;
@protocol IGSundialVideoPlaybackAnnouncer, IGVideoPlayerStateProviding;

@interface IGSundialModernVideoPlaybackView : UIView<_TtP28IGUnifiedVideoMediaContainer40IGUnifiedVideoMediaContainerViewDelegate_, _TtP17IGZoomInteraction25IGZoomInteractionDelegate_, IGSundialVideoPlaybackViewType> {
  /* instance variables */
  IGVideo *_video;
  IGPhoto *_previewPhoto;
  IGSundialViewerMediaBackgroundView *_backgroundView;
  UIView *_transformationView;
  IGImmersiveFeedBackgroundConfiguration *_fallbackBackgroundConfiguration;
  struct { struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mediaFrame; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mediaFrameTransformed; struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } transform; double cornerRadius; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } visibleContentFrame; } _mediaLayout;
  long long _fallbackMediaFrameMode;
  IGSundialViewerMediaPrefetchManager *_mediaPrefetchManager;
  IGUnifiedVideoBufferingManager *_bufferingManager;
  NSObject<IGSundialVideoPlaybackAnnouncer> *_playbackAnnouncer;
  _TtC17IGZoomInteraction17IGZoomInteraction *_zoomInteraction;
}

@property (retain, nonatomic) NSURL *videoURL;
@property (readonly, nonatomic) IGVideoView *videoView;
@property (readonly, nonatomic) BOOL isPlaying;
@property (weak, nonatomic) NSObject<IGSundialVideoPlaybackViewDelegate> *delegate;
@property (readonly, nonatomic) NSObject<IGVideoPlayerStateProviding> *videoPlayerStateProvider;
@property (readonly, nonatomic) UIView *mediaContainerView;
@property (readonly, nonatomic) NSURL *previewImageURL;
@property (readonly, nonatomic) BOOL audioEnabled;
@property (nonatomic) double initialStartTime;
@property (readonly, nonatomic) IGSundialVideoPlaybackSessionInfo *playbackSessionInfo;
@property (readonly, nonatomic) NSDictionary *playerLoggingData;
@property (readonly, nonatomic) IGSundialStickerOverlayView *stickerOverlayView;
@property (nonatomic) long long videoContentMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@optional
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame ringViewSpecFactory:(id)factory;
- (void)dealloc;
- (void)layoutSubviews;
- (BOOL)_shouldDisableBackgroundView;
- (void)configureWithVideo:(id)video media:(id)media coverFrame:(id)frame videoPlayerManager:(id)manager videoPlayerConfig:(id)config playbackViewConfig:(id)config accessibilityLabel:(id)label mediaPrefetchManager:(id)manager isPinchToZoomEnabled:(BOOL)enabled userSession:(id)session backgroundModel:(id)model fallbackBackgroundConfiguration:(id)configuration backgroundHandler:(id)handler fallbackMediaFrameMode:(long long)mode isImmersive:(BOOL)immersive stickerOverlayView:(id)view playerProvider:(id)provider isAudioEnabled:(BOOL)enabled bloksContext:(id)context firstSwipeMode:(unsigned long long)mode effectId:(id)id;
- (void)addVideoPlaybackListener:(id)listener;
- (void)prepareForReuse;
- (void)setOverlayAlpha:(double)alpha;
- (id)mediaView;
- (void)setVolume:(double)volume;
- (void)setAutoTranslateLanguage:(id)language autoTranslateEnabled:(BOOL)enabled;
- (id)availableAutoTranslateLanguages;
- (id)selectedAutoTranslateLanguage;
- (BOOL)accessibilityActivate;
- (BOOL)accessibilityPerformMagicTap;
- (void)setAudioEnabled:(BOOL)enabled forReason:(long long)reason;
- (BOOL)isAudioEnabled;
- (void)setupViewabilityWithVideoViewLogger:(id)logger;
- (void)playWithReason:(long long)reason;
- (void)stopWithReason:(long long)reason;
- (void)pauseWithReason:(long long)reason;
- (void)seekToTime:(double)time preciseTime:(BOOL)time trigger:(long long)trigger completionHandler:(id /* block */)handler;
- (void)prepareForPlayback;
- (void)setPlaybackSpeed:(float)speed;
- (id)playbackSpeed;
- (void)videoMediaContainerView:(id)view videoView:(id)view didBeginPlayingWith:(id)with;
- (void)videoMediaContainerView:(id)view didStall:(id)stall;
- (void)videoMediaContainerView:(id)view videoView:(id)view didUpdate:(id)update;
- (void)videoMediaContainerView:(id)view videoView:(id)view didFailWithError:(id)error;
- (void)videoMediaContainerView:(id)view videoView:(id)view didUpdateCoverImageLoadStatus:(long long)status;
- (BOOL)videoMediaContainerView:(id)view isStickerOverlayEnabled:(id)enabled;
- (void)videoMediaContainerView:(id)view videoView:(id)view didUpdateLoadingProgress:(double)progress;
- (void)videoMediaContainerView:(id)view didPause:(id)pause;
- (void)videoMediaContainerView:(id)view didStop:(id)stop;
- (void)videoMediaContainerView:(id)view didFullyLoadVideoItem:(id)item;
- (void)videoMediaContainerView:(id)view didAdoptPreconfiguredPlayer:(id)player;
- (void)videoMediaContainerView:(id)view scrollableOverlayDidScrollToItemAtIndex:(long long)index withMediaId:(id)id;
- (void)zoomInteraction:(id)interaction willBeginForView:(id)view withLogging:(id)logging;
- (void)zoomInteraction:(id)interaction didEndForView:(id)view withLogging:(id)logging;
- (id)renderedComponent;
- (void)overlayDidLayoutWithMediaLayout:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x2; double x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; })layout;
- (void)overlayDidLayoutWithProgressIndicatorDesiredMinY:(double)y shouldLayout:(BOOL)layout frameMode:(long long)mode;
- (void)overlayDidLayoutWithMinTopYForBottomAFI:(double)afi shouldLayout:(BOOL)layout frameMode:(long long)mode;
- (double)currentPlaybackTime;
- (double)totalPlaybackTime;
- (void)currentFrameWithCompletion:(id /* block */)completion;
- (id)previewImageIfAvailable;
- (id)videoViewIfAvailable;
@end

#endif /* IGSundialModernVideoPlaybackView_h */
